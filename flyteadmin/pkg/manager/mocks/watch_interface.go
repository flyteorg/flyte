// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	service "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/service"
	watch "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/watch"
	mock "github.com/stretchr/testify/mock"
)

// WatchInterface is an autogenerated mock type for the WatchInterface type
type WatchInterface struct {
	mock.Mock
}

type WatchInterface_WatchExecutionStatusUpdates struct {
	*mock.Call
}

func (_m WatchInterface_WatchExecutionStatusUpdates) Return(_a0 error) *WatchInterface_WatchExecutionStatusUpdates {
	return &WatchInterface_WatchExecutionStatusUpdates{Call: _m.Call.Return(_a0)}
}

func (_m *WatchInterface) OnWatchExecutionStatusUpdates(_a0 *watch.WatchExecutionStatusUpdatesRequest, _a1 service.WatchService_WatchExecutionStatusUpdatesServer) *WatchInterface_WatchExecutionStatusUpdates {
	c_call := _m.On("WatchExecutionStatusUpdates", _a0, _a1)
	return &WatchInterface_WatchExecutionStatusUpdates{Call: c_call}
}

func (_m *WatchInterface) OnWatchExecutionStatusUpdatesMatch(matchers ...interface{}) *WatchInterface_WatchExecutionStatusUpdates {
	c_call := _m.On("WatchExecutionStatusUpdates", matchers...)
	return &WatchInterface_WatchExecutionStatusUpdates{Call: c_call}
}

// WatchExecutionStatusUpdates provides a mock function with given fields: _a0, _a1
func (_m *WatchInterface) WatchExecutionStatusUpdates(_a0 *watch.WatchExecutionStatusUpdatesRequest, _a1 service.WatchService_WatchExecutionStatusUpdatesServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*watch.WatchExecutionStatusUpdatesRequest, service.WatchService_WatchExecutionStatusUpdatesServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/flyteorg/flyte/flyteadmin/pkg/runtime/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// ExternalResourceConfiguration is an autogenerated mock type for the ExternalResourceConfiguration type
type ExternalResourceConfiguration struct {
	mock.Mock
}

type ExternalResourceConfiguration_GetConnections struct {
	*mock.Call
}

func (_m ExternalResourceConfiguration_GetConnections) Return(_a0 map[string]interfaces.Connection) *ExternalResourceConfiguration_GetConnections {
	return &ExternalResourceConfiguration_GetConnections{Call: _m.Call.Return(_a0)}
}

func (_m *ExternalResourceConfiguration) OnGetConnections() *ExternalResourceConfiguration_GetConnections {
	c_call := _m.On("GetConnections")
	return &ExternalResourceConfiguration_GetConnections{Call: c_call}
}

func (_m *ExternalResourceConfiguration) OnGetConnectionsMatch(matchers ...interface{}) *ExternalResourceConfiguration_GetConnections {
	c_call := _m.On("GetConnections", matchers...)
	return &ExternalResourceConfiguration_GetConnections{Call: c_call}
}

// GetConnections provides a mock function with given fields:
func (_m *ExternalResourceConfiguration) GetConnections() map[string]interfaces.Connection {
	ret := _m.Called()

	var r0 map[string]interfaces.Connection
	if rf, ok := ret.Get(0).(func() map[string]interfaces.Connection); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interfaces.Connection)
		}
	}

	return r0
}

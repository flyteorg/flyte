// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	core "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/core"

	mock "github.com/stretchr/testify/mock"
)

// QualityOfServiceConfiguration is an autogenerated mock type for the QualityOfServiceConfiguration type
type QualityOfServiceConfiguration struct {
	mock.Mock
}

type QualityOfServiceConfiguration_Expecter struct {
	mock *mock.Mock
}

func (_m *QualityOfServiceConfiguration) EXPECT() *QualityOfServiceConfiguration_Expecter {
	return &QualityOfServiceConfiguration_Expecter{mock: &_m.Mock}
}

// GetDefaultTiers provides a mock function with no fields
func (_m *QualityOfServiceConfiguration) GetDefaultTiers() map[string]core.QualityOfService_Tier {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDefaultTiers")
	}

	var r0 map[string]core.QualityOfService_Tier
	if rf, ok := ret.Get(0).(func() map[string]core.QualityOfService_Tier); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]core.QualityOfService_Tier)
		}
	}

	return r0
}

// QualityOfServiceConfiguration_GetDefaultTiers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDefaultTiers'
type QualityOfServiceConfiguration_GetDefaultTiers_Call struct {
	*mock.Call
}

// GetDefaultTiers is a helper method to define mock.On call
func (_e *QualityOfServiceConfiguration_Expecter) GetDefaultTiers() *QualityOfServiceConfiguration_GetDefaultTiers_Call {
	return &QualityOfServiceConfiguration_GetDefaultTiers_Call{Call: _e.mock.On("GetDefaultTiers")}
}

func (_c *QualityOfServiceConfiguration_GetDefaultTiers_Call) Run(run func()) *QualityOfServiceConfiguration_GetDefaultTiers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *QualityOfServiceConfiguration_GetDefaultTiers_Call) Return(_a0 map[string]core.QualityOfService_Tier) *QualityOfServiceConfiguration_GetDefaultTiers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QualityOfServiceConfiguration_GetDefaultTiers_Call) RunAndReturn(run func() map[string]core.QualityOfService_Tier) *QualityOfServiceConfiguration_GetDefaultTiers_Call {
	_c.Call.Return(run)
	return _c
}

// GetTierExecutionValues provides a mock function with no fields
func (_m *QualityOfServiceConfiguration) GetTierExecutionValues() map[core.QualityOfService_Tier]*core.QualityOfServiceSpec {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTierExecutionValues")
	}

	var r0 map[core.QualityOfService_Tier]*core.QualityOfServiceSpec
	if rf, ok := ret.Get(0).(func() map[core.QualityOfService_Tier]*core.QualityOfServiceSpec); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[core.QualityOfService_Tier]*core.QualityOfServiceSpec)
		}
	}

	return r0
}

// QualityOfServiceConfiguration_GetTierExecutionValues_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTierExecutionValues'
type QualityOfServiceConfiguration_GetTierExecutionValues_Call struct {
	*mock.Call
}

// GetTierExecutionValues is a helper method to define mock.On call
func (_e *QualityOfServiceConfiguration_Expecter) GetTierExecutionValues() *QualityOfServiceConfiguration_GetTierExecutionValues_Call {
	return &QualityOfServiceConfiguration_GetTierExecutionValues_Call{Call: _e.mock.On("GetTierExecutionValues")}
}

func (_c *QualityOfServiceConfiguration_GetTierExecutionValues_Call) Run(run func()) *QualityOfServiceConfiguration_GetTierExecutionValues_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *QualityOfServiceConfiguration_GetTierExecutionValues_Call) Return(_a0 map[core.QualityOfService_Tier]*core.QualityOfServiceSpec) *QualityOfServiceConfiguration_GetTierExecutionValues_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QualityOfServiceConfiguration_GetTierExecutionValues_Call) RunAndReturn(run func() map[core.QualityOfService_Tier]*core.QualityOfServiceSpec) *QualityOfServiceConfiguration_GetTierExecutionValues_Call {
	_c.Call.Return(run)
	return _c
}

// NewQualityOfServiceConfiguration creates a new instance of QualityOfServiceConfiguration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewQualityOfServiceConfiguration(t interface {
	mock.TestingT
	Cleanup(func())
}) *QualityOfServiceConfiguration {
	mock := &QualityOfServiceConfiguration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

syntax = "proto3";

package fasttask;

option go_package = "pb/";

message TaskStatus {
    string task_id = 1;
    string namespace = 2;
    string workflow_id = 3;
    int32 phase = 4;
    string reason = 5;
}

message Capacity {
    int32 execution_count = 1;
    int32 execution_limit = 2;
    int32 backlog_count = 3;
    int32 backlog_limit = 4;
}

message HeartbeatRequest {
    string worker_id = 1;
    string queue_id = 2;
    Capacity capacity = 3;
    repeated TaskStatus task_statuses = 4;
}

message HeartbeatResponse {
    string task_id = 1;
    string namespace = 2;
    string workflow_id = 3;
    repeated string cmd = 4;

    enum Operation {
        ACK = 0;
        ASSIGN = 1;
        DELETE = 2;
    }

    Operation operation = 5;
}

service FastTask {
    rpc Heartbeat(stream HeartbeatRequest) returns (stream HeartbeatResponse);
}

message FastTaskEnvironment {
    string queue_id = 1;
}

message FastTaskEnvironmentSpec {
    int32 backlog_length = 1;
    int32 parallelism = 2;
    bytes pod_template_spec = 3;
    string primary_container_name = 4;
    int32 replica_count = 5;
    oneof termination_criteria {
        int32 ttl_seconds = 6;
    }
}

message FastTaskAssignment {
    // Environment ID for this fast task
    string environment_id = 1;

    // The assigned worker pod name for this fast task, if available
    string assigned_worker = 2;
}

// Code generated by mockery v2.40.3. DO NOT EDIT.

package mocks

import (
	context "context"

	admin "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/admin"

	mock "github.com/stretchr/testify/mock"

	service "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/service"
)

// AdminUpdaterExtInterface is an autogenerated mock type for the AdminUpdaterExtInterface type
type AdminUpdaterExtInterface struct {
	mock.Mock
}

type AdminUpdaterExtInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *AdminUpdaterExtInterface) EXPECT() *AdminUpdaterExtInterface_Expecter {
	return &AdminUpdaterExtInterface_Expecter{mock: &_m.Mock}
}

// AdminServiceClient provides a mock function with given fields:
func (_m *AdminUpdaterExtInterface) AdminServiceClient() service.AdminServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for AdminServiceClient")
	}

	var r0 service.AdminServiceClient
	if rf, ok := ret.Get(0).(func() service.AdminServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.AdminServiceClient)
		}
	}

	return r0
}

// AdminUpdaterExtInterface_AdminServiceClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AdminServiceClient'
type AdminUpdaterExtInterface_AdminServiceClient_Call struct {
	*mock.Call
}

// AdminServiceClient is a helper method to define mock.On call
func (_e *AdminUpdaterExtInterface_Expecter) AdminServiceClient() *AdminUpdaterExtInterface_AdminServiceClient_Call {
	return &AdminUpdaterExtInterface_AdminServiceClient_Call{Call: _e.mock.On("AdminServiceClient")}
}

func (_c *AdminUpdaterExtInterface_AdminServiceClient_Call) Run(run func()) *AdminUpdaterExtInterface_AdminServiceClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AdminUpdaterExtInterface_AdminServiceClient_Call) Return(_a0 service.AdminServiceClient) *AdminUpdaterExtInterface_AdminServiceClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AdminUpdaterExtInterface_AdminServiceClient_Call) RunAndReturn(run func() service.AdminServiceClient) *AdminUpdaterExtInterface_AdminServiceClient_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateProjectAttributes provides a mock function with given fields: ctx, project, matchingAttr
func (_m *AdminUpdaterExtInterface) UpdateProjectAttributes(ctx context.Context, project string, matchingAttr *admin.MatchingAttributes) error {
	ret := _m.Called(ctx, project, matchingAttr)

	if len(ret) == 0 {
		panic("no return value specified for UpdateProjectAttributes")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.MatchingAttributes) error); ok {
		r0 = rf(ctx, project, matchingAttr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AdminUpdaterExtInterface_UpdateProjectAttributes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateProjectAttributes'
type AdminUpdaterExtInterface_UpdateProjectAttributes_Call struct {
	*mock.Call
}

// UpdateProjectAttributes is a helper method to define mock.On call
//   - ctx context.Context
//   - project string
//   - matchingAttr *admin.MatchingAttributes
func (_e *AdminUpdaterExtInterface_Expecter) UpdateProjectAttributes(ctx interface{}, project interface{}, matchingAttr interface{}) *AdminUpdaterExtInterface_UpdateProjectAttributes_Call {
	return &AdminUpdaterExtInterface_UpdateProjectAttributes_Call{Call: _e.mock.On("UpdateProjectAttributes", ctx, project, matchingAttr)}
}

func (_c *AdminUpdaterExtInterface_UpdateProjectAttributes_Call) Run(run func(ctx context.Context, project string, matchingAttr *admin.MatchingAttributes)) *AdminUpdaterExtInterface_UpdateProjectAttributes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.MatchingAttributes))
	})
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateProjectAttributes_Call) Return(_a0 error) *AdminUpdaterExtInterface_UpdateProjectAttributes_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateProjectAttributes_Call) RunAndReturn(run func(context.Context, string, *admin.MatchingAttributes) error) *AdminUpdaterExtInterface_UpdateProjectAttributes_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateProjectDomainAttributes provides a mock function with given fields: ctx, project, domain, matchingAttr
func (_m *AdminUpdaterExtInterface) UpdateProjectDomainAttributes(ctx context.Context, project string, domain string, matchingAttr *admin.MatchingAttributes) error {
	ret := _m.Called(ctx, project, domain, matchingAttr)

	if len(ret) == 0 {
		panic("no return value specified for UpdateProjectDomainAttributes")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.MatchingAttributes) error); ok {
		r0 = rf(ctx, project, domain, matchingAttr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateProjectDomainAttributes'
type AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call struct {
	*mock.Call
}

// UpdateProjectDomainAttributes is a helper method to define mock.On call
//   - ctx context.Context
//   - project string
//   - domain string
//   - matchingAttr *admin.MatchingAttributes
func (_e *AdminUpdaterExtInterface_Expecter) UpdateProjectDomainAttributes(ctx interface{}, project interface{}, domain interface{}, matchingAttr interface{}) *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call {
	return &AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call{Call: _e.mock.On("UpdateProjectDomainAttributes", ctx, project, domain, matchingAttr)}
}

func (_c *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call) Run(run func(ctx context.Context, project string, domain string, matchingAttr *admin.MatchingAttributes)) *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.MatchingAttributes))
	})
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call) Return(_a0 error) *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call) RunAndReturn(run func(context.Context, string, string, *admin.MatchingAttributes) error) *AdminUpdaterExtInterface_UpdateProjectDomainAttributes_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateWorkflowAttributes provides a mock function with given fields: ctx, project, domain, name, matchingAttr
func (_m *AdminUpdaterExtInterface) UpdateWorkflowAttributes(ctx context.Context, project string, domain string, name string, matchingAttr *admin.MatchingAttributes) error {
	ret := _m.Called(ctx, project, domain, name, matchingAttr)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWorkflowAttributes")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, *admin.MatchingAttributes) error); ok {
		r0 = rf(ctx, project, domain, name, matchingAttr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateWorkflowAttributes'
type AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call struct {
	*mock.Call
}

// UpdateWorkflowAttributes is a helper method to define mock.On call
//   - ctx context.Context
//   - project string
//   - domain string
//   - name string
//   - matchingAttr *admin.MatchingAttributes
func (_e *AdminUpdaterExtInterface_Expecter) UpdateWorkflowAttributes(ctx interface{}, project interface{}, domain interface{}, name interface{}, matchingAttr interface{}) *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call {
	return &AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call{Call: _e.mock.On("UpdateWorkflowAttributes", ctx, project, domain, name, matchingAttr)}
}

func (_c *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call) Run(run func(ctx context.Context, project string, domain string, name string, matchingAttr *admin.MatchingAttributes)) *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string), args[4].(*admin.MatchingAttributes))
	})
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call) Return(_a0 error) *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call) RunAndReturn(run func(context.Context, string, string, string, *admin.MatchingAttributes) error) *AdminUpdaterExtInterface_UpdateWorkflowAttributes_Call {
	_c.Call.Return(run)
	return _c
}

// NewAdminUpdaterExtInterface creates a new instance of AdminUpdaterExtInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAdminUpdaterExtInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *AdminUpdaterExtInterface {
	mock := &AdminUpdaterExtInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

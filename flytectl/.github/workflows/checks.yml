name: Flytectl Checks

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "boilerplate/**"
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "boilerplate/**"

jobs:
  lint:
    name: Lint
    uses: flyteorg/flytetools/.github/workflows/lint.yml@master
    with:
      go-version: 1.19

  tests:
    name: Unit Tests
    uses: flyteorg/flytetools/.github/workflows/tests.yml@master
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}
    with:
      go-version: 1.19

  generate:
    name: Check Go Gennerate
    uses: flyteorg/flytetools/.github/workflows/go_generate.yml@master
    with:
      go-version: 1.19

  dry_run_goreleaser:
    name: Dry Run Goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "2"
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - name: Run GoReleaser dry run
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: --snapshot  --skip-publish --rm-dist

  sandbox:
    name: Test Getting started
    runs-on: ubuntu-latest
    steps:
      - uses: insightsengineering/disk-space-reclaimer@v1
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - name: Build Flytectl binary
        run: make compile
      - name: Create a sandbox cluster
        run: |
          bin/flytectl demo start
          # Sleep is necessary here since `flyte-proxy` might not be ready
          # to serve requests when the above command exits successfully.
          # Fixed in: https://github.com/flyteorg/flyte/pull/4348
          # TODO (jeev): Remove this when ^ is released.
          sleep 10
      - name: Setup flytectl config
        run: bin/flytectl config init
      - name: Register cookbook
        run: bin/flytectl register examples -d development  -p flytesnacks
      - name: Teardown Sandbox cluster
        run: bin/flytectl sandbox teardown

  bump_version:
    name: Bump Version
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ lint, tests, generate, dry_run_goreleaser, sandbox ] # Only to ensure it can successfully build
    uses: flyteorg/flytetools/.github/workflows/bump_version.yml@master
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}

  generate_docs:
    name: Generate documentation
    needs: [ bump_version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: docs-pip-${{ runner.os }}-${{ hashFiles('doc-requirements.txt') }}-${{ hashFiles('doc-requirements.in') }}
          restore-keys: docs-pip-
      - uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.FLYTE_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.FLYTE_BOT_GPG_PASSPHRASE }}
          git-user-signingkey: true
          git-commit-gpgsign: true
      - name: Install Dependencies
        run: |
          # Install all requirments
          pip install -r doc-requirements.txt
      - name: Generate documentation
        run: |
          make -C docs gendocs
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.FLYTE_BOT_PAT }}
          commit-message: Update documentation
          committer: Flyte-Bot <admin@flyte.org>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: true
          branch: flyte-bot-update-documentation
          delete-branch: true
          title: 'Update documentation'
          body: |
            Update documentation
            - Auto-generated by [flyte-bot]
          labels: |
            documentation
          draft: false

  goreleaser:
    name: Goreleaser
    needs: [ bump_version ] # Only to ensure it can successfully build
    uses: flyteorg/flytetools/.github/workflows/goreleaser.yml@master
    with:
      # https://github.com/docker/cli/issues/4437 describes an issue that affects the latest
      # version of go 1.19 and 1.20, so pinning to latest known good version for now.
      go-version: "1.19.10"
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}


// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file idl2/core/interface.proto (package flyteidl2.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { LiteralType } from "./types_pb.ts";
import { file_idl2_core_types } from "./types_pb.ts";
import type { Literal } from "./literals_pb.ts";
import { file_idl2_core_literals } from "./literals_pb.ts";
import type { ArtifactID, ArtifactQuery, ArtifactTag } from "./artifact_id_pb.ts";
import { file_idl2_core_artifact_id } from "./artifact_id_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file idl2/core/interface.proto.
 */
export const file_idl2_core_interface: GenFile = /*@__PURE__*/
  fileDesc("ChlpZGwyL2NvcmUvaW50ZXJmYWNlLnByb3RvEg5mbHl0ZWlkbDIuY29yZSK2AQoIVmFyaWFibGUSKQoEdHlwZRgBIAEoCzIbLmZseXRlaWRsMi5jb3JlLkxpdGVyYWxUeXBlEhMKC2Rlc2NyaXB0aW9uGAIgASgJEjcKE2FydGlmYWN0X3BhcnRpYWxfaWQYAyABKAsyGi5mbHl0ZWlkbDIuY29yZS5BcnRpZmFjdElEEjEKDGFydGlmYWN0X3RhZxgEIAEoCzIbLmZseXRlaWRsMi5jb3JlLkFydGlmYWN0VGFnIpgBCgtWYXJpYWJsZU1hcBI9Cgl2YXJpYWJsZXMYASADKAsyKi5mbHl0ZWlkbDIuY29yZS5WYXJpYWJsZU1hcC5WYXJpYWJsZXNFbnRyeRpKCg5WYXJpYWJsZXNFbnRyeRILCgNrZXkYASABKAkSJwoFdmFsdWUYAiABKAsyGC5mbHl0ZWlkbDIuY29yZS5WYXJpYWJsZToCOAEiawoOVHlwZWRJbnRlcmZhY2USKwoGaW5wdXRzGAEgASgLMhsuZmx5dGVpZGwyLmNvcmUuVmFyaWFibGVNYXASLAoHb3V0cHV0cxgCIAEoCzIbLmZseXRlaWRsMi5jb3JlLlZhcmlhYmxlTWFwIuoBCglQYXJhbWV0ZXISJQoDdmFyGAEgASgLMhguZmx5dGVpZGwyLmNvcmUuVmFyaWFibGUSKgoHZGVmYXVsdBgCIAEoCzIXLmZseXRlaWRsMi5jb3JlLkxpdGVyYWxIABISCghyZXF1aXJlZBgDIAEoCEgAEjcKDmFydGlmYWN0X3F1ZXJ5GAQgASgLMh0uZmx5dGVpZGwyLmNvcmUuQXJ0aWZhY3RRdWVyeUgAEjEKC2FydGlmYWN0X2lkGAUgASgLMhouZmx5dGVpZGwyLmNvcmUuQXJ0aWZhY3RJREgAQgoKCGJlaGF2aW9yIp4BCgxQYXJhbWV0ZXJNYXASQAoKcGFyYW1ldGVycxgBIAMoCzIsLmZseXRlaWRsMi5jb3JlLlBhcmFtZXRlck1hcC5QYXJhbWV0ZXJzRW50cnkaTAoPUGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRIoCgV2YWx1ZRgCIAEoCzIZLmZseXRlaWRsMi5jb3JlLlBhcmFtZXRlcjoCOAFCrgEKEmNvbS5mbHl0ZWlkbDIuY29yZUIOSW50ZXJmYWNlUHJvdG9IAlABWi1naXRodWIuY29tL2ZseXRlb3JnL2ZseXRlL3YyL2dlbi9nby9pZGwyL2NvcmWiAgNGQ1iqAg5GbHl0ZWlkbDIuQ29yZcoCDkZseXRlaWRsMlxDb3Jl4gIaRmx5dGVpZGwyXENvcmVcR1BCTWV0YWRhdGHqAg9GbHl0ZWlkbDI6OkNvcmViBnByb3RvMw", [file_idl2_core_types, file_idl2_core_literals, file_idl2_core_artifact_id]);

/**
 * Defines a strongly typed variable.
 *
 * @generated from message flyteidl2.core.Variable
 */
export type Variable = Message<"flyteidl2.core.Variable"> & {
  /**
   * Variable literal type.
   *
   * @generated from field: flyteidl2.core.LiteralType type = 1;
   */
  type?: LiteralType;

  /**
   * +optional string describing input variable
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * +optional This object allows the user to specify how Artifacts are created.
   * name, tag, partitions can be specified. The other fields (version and project/domain) are ignored.
   *
   * @generated from field: flyteidl2.core.ArtifactID artifact_partial_id = 3;
   */
  artifactPartialId?: ArtifactID;

  /**
   * @generated from field: flyteidl2.core.ArtifactTag artifact_tag = 4;
   */
  artifactTag?: ArtifactTag;
};

/**
 * Describes the message flyteidl2.core.Variable.
 * Use `create(VariableSchema)` to create a new message.
 */
export const VariableSchema: GenMessage<Variable> = /*@__PURE__*/
  messageDesc(file_idl2_core_interface, 0);

/**
 * A map of Variables
 *
 * @generated from message flyteidl2.core.VariableMap
 */
export type VariableMap = Message<"flyteidl2.core.VariableMap"> & {
  /**
   * Defines a map of variable names to variables.
   *
   * @generated from field: map<string, flyteidl2.core.Variable> variables = 1;
   */
  variables: { [key: string]: Variable };
};

/**
 * Describes the message flyteidl2.core.VariableMap.
 * Use `create(VariableMapSchema)` to create a new message.
 */
export const VariableMapSchema: GenMessage<VariableMap> = /*@__PURE__*/
  messageDesc(file_idl2_core_interface, 1);

/**
 * Defines strongly typed inputs and outputs.
 *
 * @generated from message flyteidl2.core.TypedInterface
 */
export type TypedInterface = Message<"flyteidl2.core.TypedInterface"> & {
  /**
   * @generated from field: flyteidl2.core.VariableMap inputs = 1;
   */
  inputs?: VariableMap;

  /**
   * @generated from field: flyteidl2.core.VariableMap outputs = 2;
   */
  outputs?: VariableMap;
};

/**
 * Describes the message flyteidl2.core.TypedInterface.
 * Use `create(TypedInterfaceSchema)` to create a new message.
 */
export const TypedInterfaceSchema: GenMessage<TypedInterface> = /*@__PURE__*/
  messageDesc(file_idl2_core_interface, 2);

/**
 * A parameter is used as input to a launch plan and has
 * the special ability to have a default value or mark itself as required.
 *
 * @generated from message flyteidl2.core.Parameter
 */
export type Parameter = Message<"flyteidl2.core.Parameter"> & {
  /**
   * +required Variable. Defines the type of the variable backing this parameter.
   *
   * @generated from field: flyteidl2.core.Variable var = 1;
   */
  var?: Variable;

  /**
   * +optional
   *
   * @generated from oneof flyteidl2.core.Parameter.behavior
   */
  behavior: {
    /**
     * Defines a default value that has to match the variable type defined.
     *
     * @generated from field: flyteidl2.core.Literal default = 2;
     */
    value: Literal;
    case: "default";
  } | {
    /**
     * +optional, is this value required to be filled.
     *
     * @generated from field: bool required = 3;
     */
    value: boolean;
    case: "required";
  } | {
    /**
     * This is an execution time search basically that should result in exactly one Artifact with a Type that
     * matches the type of the variable.
     *
     * @generated from field: flyteidl2.core.ArtifactQuery artifact_query = 4;
     */
    value: ArtifactQuery;
    case: "artifactQuery";
  } | {
    /**
     * @generated from field: flyteidl2.core.ArtifactID artifact_id = 5;
     */
    value: ArtifactID;
    case: "artifactId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.core.Parameter.
 * Use `create(ParameterSchema)` to create a new message.
 */
export const ParameterSchema: GenMessage<Parameter> = /*@__PURE__*/
  messageDesc(file_idl2_core_interface, 3);

/**
 * A map of Parameters.
 *
 * @generated from message flyteidl2.core.ParameterMap
 */
export type ParameterMap = Message<"flyteidl2.core.ParameterMap"> & {
  /**
   * Defines a map of parameter names to parameters.
   *
   * @generated from field: map<string, flyteidl2.core.Parameter> parameters = 1;
   */
  parameters: { [key: string]: Parameter };
};

/**
 * Describes the message flyteidl2.core.ParameterMap.
 * Use `create(ParameterMapSchema)` to create a new message.
 */
export const ParameterMapSchema: GenMessage<ParameterMap> = /*@__PURE__*/
  messageDesc(file_idl2_core_interface, 4);


// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/common/role.proto (package flyteidl2.common, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Action, Permission } from "./authorization_pb.ts";
import { file_flyteidl2_common_authorization } from "./authorization_pb.ts";
import type { RoleIdentifier } from "./identifier_pb.ts";
import { file_flyteidl2_common_identifier } from "./identifier_pb.ts";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/common/role.proto.
 */
export const file_flyteidl2_common_role: GenFile = /*@__PURE__*/
  fileDesc("ChtmbHl0ZWlkbDIvY29tbW9uL3JvbGUucHJvdG8SEGZseXRlaWRsMi5jb21tb24i/AEKBFJvbGUSNAoCaWQYASABKAsyIC5mbHl0ZWlkbDIuY29tbW9uLlJvbGVJZGVudGlmaWVyQga6SAPIAQESNQoLcGVybWlzc2lvbnMYAiADKAsyHC5mbHl0ZWlkbDIuY29tbW9uLlBlcm1pc3Npb25CAhgBEi0KCXJvbGVfc3BlYxgDIAEoCzIaLmZseXRlaWRsMi5jb21tb24uUm9sZVNwZWMSLQoJcm9sZV90eXBlGAQgASgOMhouZmx5dGVpZGwyLmNvbW1vbi5Sb2xlVHlwZRIpCgdhY3Rpb25zGAUgAygOMhguZmx5dGVpZGwyLmNvbW1vbi5BY3Rpb24iHwoIUm9sZVNwZWMSEwoLZGVzY3JpcHRpb24YASABKAkqmgIKCFJvbGVUeXBlEhIKDlJPTEVfVFlQRV9OT05FEAASEwoPUk9MRV9UWVBFX0FETUlOEAESGQoVUk9MRV9UWVBFX0NPTlRSSUJVVE9SEAISFAoQUk9MRV9UWVBFX1ZJRVdFUhADEhQKEFJPTEVfVFlQRV9DVVNUT00QBBIdChlST0xFX1RZUEVfQ0xVU1RFUl9NQU5BR0VSEAUSIQodUk9MRV9UWVBFX0ZMWVRFX1BST0pFQ1RfQURNSU4QBhIfChtST0xFX1RZUEVfU0VSVkVSTEVTU19WSUVXRVIQBxIkCiBST0xFX1RZUEVfU0VSVkVSTEVTU19DT05UUklCVVRPUhAIEhUKEVJPTEVfVFlQRV9TVVBQT1JUEAlCugEKFGNvbS5mbHl0ZWlkbDIuY29tbW9uQglSb2xlUHJvdG9IAlABWjRnaXRodWIuY29tL2ZseXRlb3JnL2ZseXRlL3YyL2dlbi9nby9mbHl0ZWlkbDIvY29tbW9uogIDRkNYqgIQRmx5dGVpZGwyLkNvbW1vbsoCEEZseXRlaWRsMlxDb21tb27iAhxGbHl0ZWlkbDJcQ29tbW9uXEdQQk1ldGFkYXRh6gIRRmx5dGVpZGwyOjpDb21tb25iBnByb3RvMw", [file_flyteidl2_common_authorization, file_flyteidl2_common_identifier, file_buf_validate_validate]);

/**
 * @generated from message flyteidl2.common.Role
 */
export type Role = Message<"flyteidl2.common.Role"> & {
  /**
   * @generated from field: flyteidl2.common.RoleIdentifier id = 1;
   */
  id?: RoleIdentifier;

  /**
   * @generated from field: repeated flyteidl2.common.Permission permissions = 2 [deprecated = true];
   * @deprecated
   */
  permissions: Permission[];

  /**
   * @generated from field: flyteidl2.common.RoleSpec role_spec = 3;
   */
  roleSpec?: RoleSpec;

  /**
   * @generated from field: flyteidl2.common.RoleType role_type = 4;
   */
  roleType: RoleType;

  /**
   * @generated from field: repeated flyteidl2.common.Action actions = 5;
   */
  actions: Action[];
};

/**
 * Describes the message flyteidl2.common.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_flyteidl2_common_role, 0);

/**
 * @generated from message flyteidl2.common.RoleSpec
 */
export type RoleSpec = Message<"flyteidl2.common.RoleSpec"> & {
  /**
   * Optional, human readable description for this role.
   *
   * @generated from field: string description = 1;
   */
  description: string;
};

/**
 * Describes the message flyteidl2.common.RoleSpec.
 * Use `create(RoleSpecSchema)` to create a new message.
 */
export const RoleSpecSchema: GenMessage<RoleSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_common_role, 1);

/**
 * A role type is a short-hand for understanding the permissions associated with a role.
 * Boilerplate role types include a conventional collection of permissions
 * Custom role types include a user-defined collection of permissions
 *
 * @generated from enum flyteidl2.common.RoleType
 */
export enum RoleType {
  /**
   * Default group. Not used in practice.
   *
   * @generated from enum value: ROLE_TYPE_NONE = 0;
   */
  NONE = 0,

  /**
   * The admin role has a collective set of permissions to do everything
   *
   * @generated from enum value: ROLE_TYPE_ADMIN = 1;
   */
  ADMIN = 1,

  /**
   * The contributor role has a collective set of permissions to view inventory, view executions, write inventory and create executions
   *
   * @generated from enum value: ROLE_TYPE_CONTRIBUTOR = 2;
   */
  CONTRIBUTOR = 2,

  /**
   * The viewer role has a collective set of permissions to view inventory and view executions
   *
   * @generated from enum value: ROLE_TYPE_VIEWER = 3;
   */
  VIEWER = 3,

  /**
   * Represent a role with user-defined sets of permissions.
   *
   * @generated from enum value: ROLE_TYPE_CUSTOM = 4;
   */
  CUSTOM = 4,

  /**
   * The role with permissions to administer a specific customer cluster.
   *
   * @generated from enum value: ROLE_TYPE_CLUSTER_MANAGER = 5;
   */
  CLUSTER_MANAGER = 5,

  /**
   * Role with permissions specific to administer flyte project(s).
   *
   * @generated from enum value: ROLE_TYPE_FLYTE_PROJECT_ADMIN = 6;
   */
  FLYTE_PROJECT_ADMIN = 6,

  /**
   * The viewer role for serverless
   *
   * @generated from enum value: ROLE_TYPE_SERVERLESS_VIEWER = 7;
   */
  SERVERLESS_VIEWER = 7,

  /**
   * The contributor role for serverless
   *
   * @generated from enum value: ROLE_TYPE_SERVERLESS_CONTRIBUTOR = 8;
   */
  SERVERLESS_CONTRIBUTOR = 8,

  /**
   * The support role would have contributor permissions plus the access to support endpoints
   *
   * @generated from enum value: ROLE_TYPE_SUPPORT = 9;
   */
  SUPPORT = 9,
}

/**
 * Describes the enum flyteidl2.common.RoleType.
 */
export const RoleTypeSchema: GenEnum<RoleType> = /*@__PURE__*/
  enumDesc(file_flyteidl2_common_role, 0);


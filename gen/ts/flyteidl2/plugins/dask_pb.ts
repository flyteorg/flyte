// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/plugins/dask.proto (package flyteidl2.plugins, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Resources } from "../core/tasks_pb.ts";
import { file_flyteidl2_core_tasks } from "../core/tasks_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/plugins/dask.proto.
 */
export const file_flyteidl2_plugins_dask: GenFile = /*@__PURE__*/
  fileDesc("ChxmbHl0ZWlkbDIvcGx1Z2lucy9kYXNrLnByb3RvEhFmbHl0ZWlkbDIucGx1Z2lucyJzCgdEYXNrSm9iEjMKCXNjaGVkdWxlchgBIAEoCzIgLmZseXRlaWRsMi5wbHVnaW5zLkRhc2tTY2hlZHVsZXISMwoHd29ya2VycxgCIAEoCzIiLmZseXRlaWRsMi5wbHVnaW5zLkRhc2tXb3JrZXJHcm91cCJMCg1EYXNrU2NoZWR1bGVyEg0KBWltYWdlGAEgASgJEiwKCXJlc291cmNlcxgCIAEoCzIZLmZseXRlaWRsMi5jb3JlLlJlc291cmNlcyJpCg9EYXNrV29ya2VyR3JvdXASGQoRbnVtYmVyX29mX3dvcmtlcnMYASABKA0SDQoFaW1hZ2UYAiABKAkSLAoJcmVzb3VyY2VzGAMgASgLMhkuZmx5dGVpZGwyLmNvcmUuUmVzb3VyY2VzQsABChVjb20uZmx5dGVpZGwyLnBsdWdpbnNCCURhc2tQcm90b0gCUAFaNWdpdGh1Yi5jb20vZmx5dGVvcmcvZmx5dGUvdjIvZ2VuL2dvL2ZseXRlaWRsMi9wbHVnaW5zogIDRlBYqgIRRmx5dGVpZGwyLlBsdWdpbnPKAhFGbHl0ZWlkbDJcUGx1Z2luc+ICHUZseXRlaWRsMlxQbHVnaW5zXEdQQk1ldGFkYXRh6gISRmx5dGVpZGwyOjpQbHVnaW5zYgZwcm90bzM", [file_flyteidl2_core_tasks]);

/**
 * Custom Proto for Dask Plugin.
 *
 * @generated from message flyteidl2.plugins.DaskJob
 */
export type DaskJob = Message<"flyteidl2.plugins.DaskJob"> & {
  /**
   * Spec for the scheduler pod.
   *
   * @generated from field: flyteidl2.plugins.DaskScheduler scheduler = 1;
   */
  scheduler?: DaskScheduler;

  /**
   * Spec of the default worker group.
   *
   * @generated from field: flyteidl2.plugins.DaskWorkerGroup workers = 2;
   */
  workers?: DaskWorkerGroup;
};

/**
 * Describes the message flyteidl2.plugins.DaskJob.
 * Use `create(DaskJobSchema)` to create a new message.
 */
export const DaskJobSchema: GenMessage<DaskJob> = /*@__PURE__*/
  messageDesc(file_flyteidl2_plugins_dask, 0);

/**
 * Specification for the scheduler pod.
 *
 * @generated from message flyteidl2.plugins.DaskScheduler
 */
export type DaskScheduler = Message<"flyteidl2.plugins.DaskScheduler"> & {
  /**
   * Optional image to use. If unset, will use the default image.
   *
   * @generated from field: string image = 1;
   */
  image: string;

  /**
   * Resources assigned to the scheduler pod.
   *
   * @generated from field: flyteidl2.core.Resources resources = 2;
   */
  resources?: Resources;
};

/**
 * Describes the message flyteidl2.plugins.DaskScheduler.
 * Use `create(DaskSchedulerSchema)` to create a new message.
 */
export const DaskSchedulerSchema: GenMessage<DaskScheduler> = /*@__PURE__*/
  messageDesc(file_flyteidl2_plugins_dask, 1);

/**
 * @generated from message flyteidl2.plugins.DaskWorkerGroup
 */
export type DaskWorkerGroup = Message<"flyteidl2.plugins.DaskWorkerGroup"> & {
  /**
   * Number of workers in the group.
   *
   * @generated from field: uint32 number_of_workers = 1;
   */
  numberOfWorkers: number;

  /**
   * Optional image to use for the pods of the worker group. If unset, will use the default image.
   *
   * @generated from field: string image = 2;
   */
  image: string;

  /**
   * Resources assigned to the all pods of the worker group.
   * As per https://kubernetes.dask.org/en/latest/kubecluster.html?highlight=limit#best-practices
   * it is advised to only set limits. If requests are not explicitly set, the plugin will make
   * sure to set requests==limits.
   * The plugin sets ` --memory-limit` as well as `--nthreads` for the workers according to the limit.
   *
   * @generated from field: flyteidl2.core.Resources resources = 3;
   */
  resources?: Resources;
};

/**
 * Describes the message flyteidl2.plugins.DaskWorkerGroup.
 * Use `create(DaskWorkerGroupSchema)` to create a new message.
 */
export const DaskWorkerGroupSchema: GenMessage<DaskWorkerGroup> = /*@__PURE__*/
  messageDesc(file_flyteidl2_plugins_dask, 2);


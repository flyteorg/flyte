// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/trigger/trigger_service.proto (package flyteidl2.trigger, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import type { ProjectIdentifier, TriggerIdentifier, TriggerName } from "../common/identifier_pb.ts";
import { file_flyteidl2_common_identifier } from "../common/identifier_pb.ts";
import type { ListRequest } from "../common/list_pb.ts";
import { file_flyteidl2_common_list } from "../common/list_pb.ts";
import type { TaskIdentifier } from "../task/task_definition_pb.ts";
import { file_flyteidl2_task_task_definition } from "../task/task_definition_pb.ts";
import type { Trigger, TriggerDetails, TriggerRevision } from "./trigger_definition_pb.ts";
import { file_flyteidl2_trigger_trigger_definition } from "./trigger_definition_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/trigger/trigger_service.proto.
 */
export const file_flyteidl2_trigger_trigger_service: GenFile = /*@__PURE__*/
  fileDesc("CidmbHl0ZWlkbDIvdHJpZ2dlci90cmlnZ2VyX3NlcnZpY2UucHJvdG8SEWZseXRlaWRsMi50cmlnZ2VyIlAKElNhdmVUcmlnZ2VyUmVxdWVzdBI6Cgd0cmlnZ2VyGAEgASgLMiEuZmx5dGVpZGwyLnRyaWdnZXIuVHJpZ2dlckRldGFpbHNCBrpIA8gBASJRChNTYXZlVHJpZ2dlclJlc3BvbnNlEjoKB3RyaWdnZXIYASABKAsyIS5mbHl0ZWlkbDIudHJpZ2dlci5UcmlnZ2VyRGV0YWlsc0IGukgDyAEBIk8KGEdldFRyaWdnZXJEZXRhaWxzUmVxdWVzdBIzCgRuYW1lGAEgASgLMh0uZmx5dGVpZGwyLmNvbW1vbi5UcmlnZ2VyTmFtZUIGukgDyAEBIlcKGUdldFRyaWdnZXJEZXRhaWxzUmVzcG9uc2USOgoHdHJpZ2dlchgBIAEoCzIhLmZseXRlaWRsMi50cmlnZ2VyLlRyaWdnZXJEZXRhaWxzQga6SAPIAQEiWwogR2V0VHJpZ2dlclJldmlzaW9uRGV0YWlsc1JlcXVlc3QSNwoCaWQYASABKAsyIy5mbHl0ZWlkbDIuY29tbW9uLlRyaWdnZXJJZGVudGlmaWVyQga6SAPIAQEiXwohR2V0VHJpZ2dlclJldmlzaW9uRGV0YWlsc1Jlc3BvbnNlEjoKB3RyaWdnZXIYASABKAsyIS5mbHl0ZWlkbDIudHJpZ2dlci5UcmlnZ2VyRGV0YWlsc0IGukgDyAEBIuEBChNMaXN0VHJpZ2dlcnNSZXF1ZXN0Ei4KB3JlcXVlc3QYASABKAsyHS5mbHl0ZWlkbDIuY29tbW9uLkxpc3RSZXF1ZXN0EhkKA29yZxgCIAEoCUIKukgH2AEBcgIQAUgAEjkKCnByb2plY3RfaWQYAyABKAsyIy5mbHl0ZWlkbDIuY29tbW9uLlByb2plY3RJZGVudGlmaWVySAASMQoHdGFza19pZBgEIAEoCzIeLmZseXRlaWRsMi50YXNrLlRhc2tJZGVudGlmaWVySABCEQoIc2NvcGVfYnkSBbpIAggBIlMKFExpc3RUcmlnZ2Vyc1Jlc3BvbnNlEiwKCHRyaWdnZXJzGAEgAygLMhouZmx5dGVpZGwyLnRyaWdnZXIuVHJpZ2dlchINCgV0b2tlbhgCIAEoCSKHAQogR2V0VHJpZ2dlclJldmlzaW9uSGlzdG9yeVJlcXVlc3QSLgoHcmVxdWVzdBgBIAEoCzIdLmZseXRlaWRsMi5jb21tb24uTGlzdFJlcXVlc3QSMwoEbmFtZRgCIAEoCzIdLmZseXRlaWRsMi5jb21tb24uVHJpZ2dlck5hbWVCBrpIA8gBASJoCiFHZXRUcmlnZ2VyUmV2aXNpb25IaXN0b3J5UmVzcG9uc2USNAoIdHJpZ2dlcnMYASADKAsyIi5mbHl0ZWlkbDIudHJpZ2dlci5UcmlnZ2VyUmV2aXNpb24SDQoFdG9rZW4YAiABKAkiXwoVVXBkYXRlVHJpZ2dlcnNSZXF1ZXN0EjYKBW5hbWVzGAEgAygLMh0uZmx5dGVpZGwyLmNvbW1vbi5UcmlnZ2VyTmFtZUIIukgFkgECCAESDgoGYWN0aXZlGAIgASgIIhgKFlVwZGF0ZVRyaWdnZXJzUmVzcG9uc2UiTwoVRGVsZXRlVHJpZ2dlcnNSZXF1ZXN0EjYKBW5hbWVzGAEgAygLMh0uZmx5dGVpZGwyLmNvbW1vbi5UcmlnZ2VyTmFtZUIIukgFkgECCAEiGAoWRGVsZXRlVHJpZ2dlcnNSZXNwb25zZTK5BgoOVHJpZ2dlclNlcnZpY2USXgoLU2F2ZVRyaWdnZXISJS5mbHl0ZWlkbDIudHJpZ2dlci5TYXZlVHJpZ2dlclJlcXVlc3QaJi5mbHl0ZWlkbDIudHJpZ2dlci5TYXZlVHJpZ2dlclJlc3BvbnNlIgAScwoRR2V0VHJpZ2dlckRldGFpbHMSKy5mbHl0ZWlkbDIudHJpZ2dlci5HZXRUcmlnZ2VyRGV0YWlsc1JlcXVlc3QaLC5mbHl0ZWlkbDIudHJpZ2dlci5HZXRUcmlnZ2VyRGV0YWlsc1Jlc3BvbnNlIgOQAgESiwEKGUdldFRyaWdnZXJSZXZpc2lvbkRldGFpbHMSMy5mbHl0ZWlkbDIudHJpZ2dlci5HZXRUcmlnZ2VyUmV2aXNpb25EZXRhaWxzUmVxdWVzdBo0LmZseXRlaWRsMi50cmlnZ2VyLkdldFRyaWdnZXJSZXZpc2lvbkRldGFpbHNSZXNwb25zZSIDkAIBEmQKDExpc3RUcmlnZ2VycxImLmZseXRlaWRsMi50cmlnZ2VyLkxpc3RUcmlnZ2Vyc1JlcXVlc3QaJy5mbHl0ZWlkbDIudHJpZ2dlci5MaXN0VHJpZ2dlcnNSZXNwb25zZSIDkAIBEosBChlHZXRUcmlnZ2VyUmV2aXNpb25IaXN0b3J5EjMuZmx5dGVpZGwyLnRyaWdnZXIuR2V0VHJpZ2dlclJldmlzaW9uSGlzdG9yeVJlcXVlc3QaNC5mbHl0ZWlkbDIudHJpZ2dlci5HZXRUcmlnZ2VyUmV2aXNpb25IaXN0b3J5UmVzcG9uc2UiA5ACARJnCg5VcGRhdGVUcmlnZ2VycxIoLmZseXRlaWRsMi50cmlnZ2VyLlVwZGF0ZVRyaWdnZXJzUmVxdWVzdBopLmZseXRlaWRsMi50cmlnZ2VyLlVwZGF0ZVRyaWdnZXJzUmVzcG9uc2UiABJnCg5EZWxldGVUcmlnZ2VycxIoLmZseXRlaWRsMi50cmlnZ2VyLkRlbGV0ZVRyaWdnZXJzUmVxdWVzdBopLmZseXRlaWRsMi50cmlnZ2VyLkRlbGV0ZVRyaWdnZXJzUmVzcG9uc2UiAELKAQoVY29tLmZseXRlaWRsMi50cmlnZ2VyQhNUcmlnZ2VyU2VydmljZVByb3RvSAJQAVo1Z2l0aHViLmNvbS9mbHl0ZW9yZy9mbHl0ZS92Mi9nZW4vZ28vZmx5dGVpZGwyL3RyaWdnZXKiAgNGVFiqAhFGbHl0ZWlkbDIuVHJpZ2dlcsoCEUZseXRlaWRsMlxUcmlnZ2Vy4gIdRmx5dGVpZGwyXFRyaWdnZXJcR1BCTWV0YWRhdGHqAhJGbHl0ZWlkbDI6OlRyaWdnZXJiBnByb3RvMw", [file_buf_validate_validate, file_flyteidl2_common_identifier, file_flyteidl2_common_list, file_flyteidl2_task_task_definition, file_flyteidl2_trigger_trigger_definition]);

/**
 * Request message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.SaveTriggerRequest
 */
export type SaveTriggerRequest = Message<"flyteidl2.trigger.SaveTriggerRequest"> & {
  /**
   * @generated from field: flyteidl2.trigger.TriggerDetails trigger = 1;
   */
  trigger?: TriggerDetails;
};

/**
 * Describes the message flyteidl2.trigger.SaveTriggerRequest.
 * Use `create(SaveTriggerRequestSchema)` to create a new message.
 */
export const SaveTriggerRequestSchema: GenMessage<SaveTriggerRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 0);

/**
 * Response message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.SaveTriggerResponse
 */
export type SaveTriggerResponse = Message<"flyteidl2.trigger.SaveTriggerResponse"> & {
  /**
   * @generated from field: flyteidl2.trigger.TriggerDetails trigger = 1;
   */
  trigger?: TriggerDetails;
};

/**
 * Describes the message flyteidl2.trigger.SaveTriggerResponse.
 * Use `create(SaveTriggerResponseSchema)` to create a new message.
 */
export const SaveTriggerResponseSchema: GenMessage<SaveTriggerResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 1);

/**
 * Request message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.GetTriggerDetailsRequest
 */
export type GetTriggerDetailsRequest = Message<"flyteidl2.trigger.GetTriggerDetailsRequest"> & {
  /**
   * @generated from field: flyteidl2.common.TriggerName name = 1;
   */
  name?: TriggerName;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerDetailsRequest.
 * Use `create(GetTriggerDetailsRequestSchema)` to create a new message.
 */
export const GetTriggerDetailsRequestSchema: GenMessage<GetTriggerDetailsRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 2);

/**
 * Response message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.GetTriggerDetailsResponse
 */
export type GetTriggerDetailsResponse = Message<"flyteidl2.trigger.GetTriggerDetailsResponse"> & {
  /**
   * @generated from field: flyteidl2.trigger.TriggerDetails trigger = 1;
   */
  trigger?: TriggerDetails;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerDetailsResponse.
 * Use `create(GetTriggerDetailsResponseSchema)` to create a new message.
 */
export const GetTriggerDetailsResponseSchema: GenMessage<GetTriggerDetailsResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 3);

/**
 * Request message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.GetTriggerRevisionDetailsRequest
 */
export type GetTriggerRevisionDetailsRequest = Message<"flyteidl2.trigger.GetTriggerRevisionDetailsRequest"> & {
  /**
   * @generated from field: flyteidl2.common.TriggerIdentifier id = 1;
   */
  id?: TriggerIdentifier;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerRevisionDetailsRequest.
 * Use `create(GetTriggerRevisionDetailsRequestSchema)` to create a new message.
 */
export const GetTriggerRevisionDetailsRequestSchema: GenMessage<GetTriggerRevisionDetailsRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 4);

/**
 * Response message for saving a trigger.
 *
 * @generated from message flyteidl2.trigger.GetTriggerRevisionDetailsResponse
 */
export type GetTriggerRevisionDetailsResponse = Message<"flyteidl2.trigger.GetTriggerRevisionDetailsResponse"> & {
  /**
   * @generated from field: flyteidl2.trigger.TriggerDetails trigger = 1;
   */
  trigger?: TriggerDetails;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerRevisionDetailsResponse.
 * Use `create(GetTriggerRevisionDetailsResponseSchema)` to create a new message.
 */
export const GetTriggerRevisionDetailsResponseSchema: GenMessage<GetTriggerRevisionDetailsResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 5);

/**
 * @generated from message flyteidl2.trigger.ListTriggersRequest
 */
export type ListTriggersRequest = Message<"flyteidl2.trigger.ListTriggersRequest"> & {
  /**
   * Common list request parameters.
   *
   * @generated from field: flyteidl2.common.ListRequest request = 1;
   */
  request?: ListRequest;

  /**
   * @generated from oneof flyteidl2.trigger.ListTriggersRequest.scope_by
   */
  scopeBy: {
    /**
     * Organization name for filtering.
     *
     * @generated from field: string org = 2;
     */
    value: string;
    case: "org";
  } | {
    /**
     * Project identifier for filtering.
     *
     * @generated from field: flyteidl2.common.ProjectIdentifier project_id = 3;
     */
    value: ProjectIdentifier;
    case: "projectId";
  } | {
    /**
     * List all triggers attached to a given task.
     *
     * @generated from field: flyteidl2.task.TaskIdentifier task_id = 4;
     */
    value: TaskIdentifier;
    case: "taskId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.trigger.ListTriggersRequest.
 * Use `create(ListTriggersRequestSchema)` to create a new message.
 */
export const ListTriggersRequestSchema: GenMessage<ListTriggersRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 6);

/**
 * Response message for listing triggers.
 *
 * @generated from message flyteidl2.trigger.ListTriggersResponse
 */
export type ListTriggersResponse = Message<"flyteidl2.trigger.ListTriggersResponse"> & {
  /**
   * List of triggers matching the filter criteria.
   *
   * @generated from field: repeated flyteidl2.trigger.Trigger triggers = 1;
   */
  triggers: Trigger[];

  /**
   * Token for fetching the next page of results, if any.
   *
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message flyteidl2.trigger.ListTriggersResponse.
 * Use `create(ListTriggersResponseSchema)` to create a new message.
 */
export const ListTriggersResponseSchema: GenMessage<ListTriggersResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 7);

/**
 * @generated from message flyteidl2.trigger.GetTriggerRevisionHistoryRequest
 */
export type GetTriggerRevisionHistoryRequest = Message<"flyteidl2.trigger.GetTriggerRevisionHistoryRequest"> & {
  /**
   * @generated from field: flyteidl2.common.ListRequest request = 1;
   */
  request?: ListRequest;

  /**
   * @generated from field: flyteidl2.common.TriggerName name = 2;
   */
  name?: TriggerName;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerRevisionHistoryRequest.
 * Use `create(GetTriggerRevisionHistoryRequestSchema)` to create a new message.
 */
export const GetTriggerRevisionHistoryRequestSchema: GenMessage<GetTriggerRevisionHistoryRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 8);

/**
 * @generated from message flyteidl2.trigger.GetTriggerRevisionHistoryResponse
 */
export type GetTriggerRevisionHistoryResponse = Message<"flyteidl2.trigger.GetTriggerRevisionHistoryResponse"> & {
  /**
   * List of triggers matching the filter criteria.
   *
   * @generated from field: repeated flyteidl2.trigger.TriggerRevision triggers = 1;
   */
  triggers: TriggerRevision[];

  /**
   * Token for fetching the next page of results, if any.
   *
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message flyteidl2.trigger.GetTriggerRevisionHistoryResponse.
 * Use `create(GetTriggerRevisionHistoryResponseSchema)` to create a new message.
 */
export const GetTriggerRevisionHistoryResponseSchema: GenMessage<GetTriggerRevisionHistoryResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 9);

/**
 * Request message for updating some trigger spec fields for multiple triggers
 *
 * @generated from message flyteidl2.trigger.UpdateTriggersRequest
 */
export type UpdateTriggersRequest = Message<"flyteidl2.trigger.UpdateTriggersRequest"> & {
  /**
   * @generated from field: repeated flyteidl2.common.TriggerName names = 1;
   */
  names: TriggerName[];

  /**
   * @generated from field: bool active = 2;
   */
  active: boolean;
};

/**
 * Describes the message flyteidl2.trigger.UpdateTriggersRequest.
 * Use `create(UpdateTriggersRequestSchema)` to create a new message.
 */
export const UpdateTriggersRequestSchema: GenMessage<UpdateTriggersRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 10);

/**
 * Response message for updating some trigger spec fields for multiple triggers
 *
 * @generated from message flyteidl2.trigger.UpdateTriggersResponse
 */
export type UpdateTriggersResponse = Message<"flyteidl2.trigger.UpdateTriggersResponse"> & {
};

/**
 * Describes the message flyteidl2.trigger.UpdateTriggersResponse.
 * Use `create(UpdateTriggersResponseSchema)` to create a new message.
 */
export const UpdateTriggersResponseSchema: GenMessage<UpdateTriggersResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 11);

/**
 * Request message for activating or deactivating multiple triggers
 *
 * @generated from message flyteidl2.trigger.DeleteTriggersRequest
 */
export type DeleteTriggersRequest = Message<"flyteidl2.trigger.DeleteTriggersRequest"> & {
  /**
   * @generated from field: repeated flyteidl2.common.TriggerName names = 1;
   */
  names: TriggerName[];
};

/**
 * Describes the message flyteidl2.trigger.DeleteTriggersRequest.
 * Use `create(DeleteTriggersRequestSchema)` to create a new message.
 */
export const DeleteTriggersRequestSchema: GenMessage<DeleteTriggersRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 12);

/**
 * Response message for activating or deactivating multiple triggers.
 *
 * @generated from message flyteidl2.trigger.DeleteTriggersResponse
 */
export type DeleteTriggersResponse = Message<"flyteidl2.trigger.DeleteTriggersResponse"> & {
};

/**
 * Describes the message flyteidl2.trigger.DeleteTriggersResponse.
 * Use `create(DeleteTriggersResponseSchema)` to create a new message.
 */
export const DeleteTriggersResponseSchema: GenMessage<DeleteTriggersResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_trigger_trigger_service, 13);

/**
 * TriggerService provides an interface for managing triggers.
 *
 * @generated from service flyteidl2.trigger.TriggerService
 */
export const TriggerService: GenService<{
  /**
   * Create if trigger didn't exist previously.
   * Update if it already exists.
   * Re-create(or undelete) if it was soft-deleted.
   * Client must fetch the latest trigger in order to obtain the latest `trigger.id.revision`.
   * If trigger is not found, client can set `trigger.id.revision` to 1, it is ignored and set automatically by backend.
   * If trigger is found, client should set `trigger.id.revision` to the <latest>.
   * Backend validates that version is the latest and creates a new revision of the trigger.
   * Otherwise, operation is rejected(optimistic locking) and client must re-fetch trigger again.
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.SaveTrigger
   */
  saveTrigger: {
    methodKind: "unary";
    input: typeof SaveTriggerRequestSchema;
    output: typeof SaveTriggerResponseSchema;
  },
  /**
   * Get detailed info about the latest trigger revision
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.GetTriggerDetails
   */
  getTriggerDetails: {
    methodKind: "unary";
    input: typeof GetTriggerDetailsRequestSchema;
    output: typeof GetTriggerDetailsResponseSchema;
  },
  /**
   * Get detailed info about a specific trigger revision
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.GetTriggerRevisionDetails
   */
  getTriggerRevisionDetails: {
    methodKind: "unary";
    input: typeof GetTriggerRevisionDetailsRequestSchema;
    output: typeof GetTriggerRevisionDetailsResponseSchema;
  },
  /**
   * List basic info about triggers based on various filtering and sorting rules.
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.ListTriggers
   */
  listTriggers: {
    methodKind: "unary";
    input: typeof ListTriggersRequestSchema;
    output: typeof ListTriggersResponseSchema;
  },
  /**
   * GetTriggerRevisionHistory returns all revisions for a given trigger
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.GetTriggerRevisionHistory
   */
  getTriggerRevisionHistory: {
    methodKind: "unary";
    input: typeof GetTriggerRevisionHistoryRequestSchema;
    output: typeof GetTriggerRevisionHistoryResponseSchema;
  },
  /**
   * Update some trigger spec fields for multiple triggers at once
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.UpdateTriggers
   */
  updateTriggers: {
    methodKind: "unary";
    input: typeof UpdateTriggersRequestSchema;
    output: typeof UpdateTriggersResponseSchema;
  },
  /**
   * Soft-delete multiple triggers at once.
   *
   * @generated from rpc flyteidl2.trigger.TriggerService.DeleteTriggers
   */
  deleteTriggers: {
    methodKind: "unary";
    input: typeof DeleteTriggersRequestSchema;
    output: typeof DeleteTriggersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_flyteidl2_trigger_trigger_service, 0);


// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/workflow/queue_service.proto (package flyteidl2.workflow, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import type { ActionIdentifier, RunIdentifier } from "../common/identifier_pb.ts";
import { file_flyteidl2_common_identifier } from "../common/identifier_pb.ts";
import { file_flyteidl2_task_common } from "../task/common_pb.ts";
import type { RunSpec } from "../task/run_pb.ts";
import { file_flyteidl2_task_run } from "../task/run_pb.ts";
import type { ConditionAction, TaskAction, TraceAction } from "./run_definition_pb.ts";
import { file_flyteidl2_workflow_run_definition } from "./run_definition_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/workflow/queue_service.proto.
 */
export const file_flyteidl2_workflow_queue_service: GenFile = /*@__PURE__*/
  fileDesc("CiZmbHl0ZWlkbDIvd29ya2Zsb3cvcXVldWVfc2VydmljZS5wcm90bxISZmx5dGVpZGwyLndvcmtmbG93IsEDChRFbnF1ZXVlQWN0aW9uUmVxdWVzdBI9CglhY3Rpb25faWQYASABKAsyIi5mbHl0ZWlkbDIuY29tbW9uLkFjdGlvbklkZW50aWZpZXJCBrpIA8gBARIfChJwYXJlbnRfYWN0aW9uX25hbWUYAiABKAlIAYgBARIpCghydW5fc3BlYxgDIAEoCzIXLmZseXRlaWRsMi50YXNrLlJ1blNwZWMSGgoJaW5wdXRfdXJpGAYgASgJQge6SARyAhABEiAKD3J1bl9vdXRwdXRfYmFzZRgHIAEoCUIHukgEcgIQARINCgVncm91cBgIIAEoCRIPCgdzdWJqZWN0GAkgASgJEi4KBHRhc2sYCiABKAsyHi5mbHl0ZWlkbDIud29ya2Zsb3cuVGFza0FjdGlvbkgAEjAKBXRyYWNlGAsgASgLMh8uZmx5dGVpZGwyLndvcmtmbG93LlRyYWNlQWN0aW9uSAASOAoJY29uZGl0aW9uGAwgASgLMiMuZmx5dGVpZGwyLndvcmtmbG93LkNvbmRpdGlvbkFjdGlvbkgAQg0KBHNwZWMSBbpIAggBQhUKE19wYXJlbnRfYWN0aW9uX25hbWUiFwoVRW5xdWV1ZUFjdGlvblJlc3BvbnNlInAKFUFib3J0UXVldWVkUnVuUmVxdWVzdBI3CgZydW5faWQYASABKAsyHy5mbHl0ZWlkbDIuY29tbW9uLlJ1bklkZW50aWZpZXJCBrpIA8gBARITCgZyZWFzb24YAiABKAlIAIgBAUIJCgdfcmVhc29uIhgKFkFib3J0UXVldWVkUnVuUmVzcG9uc2UieQoYQWJvcnRRdWV1ZWRBY3Rpb25SZXF1ZXN0Ej0KCWFjdGlvbl9pZBgBIAEoCzIiLmZseXRlaWRsMi5jb21tb24uQWN0aW9uSWRlbnRpZmllckIGukgDyAEBEhMKBnJlYXNvbhgCIAEoCUgAiAEBQgkKB19yZWFzb24iGwoZQWJvcnRRdWV1ZWRBY3Rpb25SZXNwb25zZTLVAgoMUXVldWVTZXJ2aWNlEmYKDUVucXVldWVBY3Rpb24SKC5mbHl0ZWlkbDIud29ya2Zsb3cuRW5xdWV1ZUFjdGlvblJlcXVlc3QaKS5mbHl0ZWlkbDIud29ya2Zsb3cuRW5xdWV1ZUFjdGlvblJlc3BvbnNlIgASaQoOQWJvcnRRdWV1ZWRSdW4SKS5mbHl0ZWlkbDIud29ya2Zsb3cuQWJvcnRRdWV1ZWRSdW5SZXF1ZXN0GiouZmx5dGVpZGwyLndvcmtmbG93LkFib3J0UXVldWVkUnVuUmVzcG9uc2UiABJyChFBYm9ydFF1ZXVlZEFjdGlvbhIsLmZseXRlaWRsMi53b3JrZmxvdy5BYm9ydFF1ZXVlZEFjdGlvblJlcXVlc3QaLS5mbHl0ZWlkbDIud29ya2Zsb3cuQWJvcnRRdWV1ZWRBY3Rpb25SZXNwb25zZSIAQs4BChZjb20uZmx5dGVpZGwyLndvcmtmbG93QhFRdWV1ZVNlcnZpY2VQcm90b0gCUAFaNmdpdGh1Yi5jb20vZmx5dGVvcmcvZmx5dGUvdjIvZ2VuL2dvL2ZseXRlaWRsMi93b3JrZmxvd6ICA0ZXWKoCEkZseXRlaWRsMi5Xb3JrZmxvd8oCEkZseXRlaWRsMlxXb3JrZmxvd+ICHkZseXRlaWRsMlxXb3JrZmxvd1xHUEJNZXRhZGF0YeoCE0ZseXRlaWRsMjo6V29ya2Zsb3diBnByb3RvMw", [file_buf_validate_validate, file_flyteidl2_common_identifier, file_flyteidl2_task_common, file_flyteidl2_task_run, file_flyteidl2_workflow_run_definition]);

/**
 * request message for queuing an action.
 *
 * @generated from message flyteidl2.workflow.EnqueueActionRequest
 */
export type EnqueueActionRequest = Message<"flyteidl2.workflow.EnqueueActionRequest"> & {
  /**
   * the unique identifier for the action.
   *
   * @generated from field: flyteidl2.common.ActionIdentifier action_id = 1;
   */
  actionId?: ActionIdentifier;

  /**
   * an optional name for the parent action, if it exists. the remaining run metadata (ex. org,
   * project, domain) will be the same as the action_id defined above.
   *
   * @generated from field: optional string parent_action_name = 2;
   */
  parentActionName?: string;

  /**
   * Optional run spec passed in by the root action to be utilized by all downstream actions in the run.
   *
   * @generated from field: flyteidl2.task.RunSpec run_spec = 3;
   */
  runSpec?: RunSpec;

  /**
   * the path to the input data for this action.
   *
   * @generated from field: string input_uri = 6;
   */
  inputUri: string;

  /**
   * the run base path this action should write its output to.
   *
   * @generated from field: string run_output_base = 7;
   */
  runOutputBase: string;

  /**
   * group this action belongs to, if applicable.
   *
   * @generated from field: string group = 8;
   */
  group: string;

  /**
   * subject that created the run, if known.
   *
   * @generated from field: string subject = 9;
   */
  subject: string;

  /**
   * @generated from oneof flyteidl2.workflow.EnqueueActionRequest.spec
   */
  spec: {
    /**
     * @generated from field: flyteidl2.workflow.TaskAction task = 10;
     */
    value: TaskAction;
    case: "task";
  } | {
    /**
     * @generated from field: flyteidl2.workflow.TraceAction trace = 11;
     */
    value: TraceAction;
    case: "trace";
  } | {
    /**
     * @generated from field: flyteidl2.workflow.ConditionAction condition = 12;
     */
    value: ConditionAction;
    case: "condition";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.workflow.EnqueueActionRequest.
 * Use `create(EnqueueActionRequestSchema)` to create a new message.
 */
export const EnqueueActionRequestSchema: GenMessage<EnqueueActionRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 0);

/**
 * response message for queuing an action.
 *
 * @generated from message flyteidl2.workflow.EnqueueActionResponse
 */
export type EnqueueActionResponse = Message<"flyteidl2.workflow.EnqueueActionResponse"> & {
};

/**
 * Describes the message flyteidl2.workflow.EnqueueActionResponse.
 * Use `create(EnqueueActionResponseSchema)` to create a new message.
 */
export const EnqueueActionResponseSchema: GenMessage<EnqueueActionResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 1);

/**
 * request message for aborting a run.
 *
 * @generated from message flyteidl2.workflow.AbortQueuedRunRequest
 */
export type AbortQueuedRunRequest = Message<"flyteidl2.workflow.AbortQueuedRunRequest"> & {
  /**
   * the unique identifier for the run to be aborted.
   *
   * @generated from field: flyteidl2.common.RunIdentifier run_id = 1;
   */
  runId?: RunIdentifier;

  /**
   * Reason for aborting the run, if applicable.
   *
   * @generated from field: optional string reason = 2;
   */
  reason?: string;
};

/**
 * Describes the message flyteidl2.workflow.AbortQueuedRunRequest.
 * Use `create(AbortQueuedRunRequestSchema)` to create a new message.
 */
export const AbortQueuedRunRequestSchema: GenMessage<AbortQueuedRunRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 2);

/**
 * response message for aborting a run.
 *
 * @generated from message flyteidl2.workflow.AbortQueuedRunResponse
 */
export type AbortQueuedRunResponse = Message<"flyteidl2.workflow.AbortQueuedRunResponse"> & {
};

/**
 * Describes the message flyteidl2.workflow.AbortQueuedRunResponse.
 * Use `create(AbortQueuedRunResponseSchema)` to create a new message.
 */
export const AbortQueuedRunResponseSchema: GenMessage<AbortQueuedRunResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 3);

/**
 * @generated from message flyteidl2.workflow.AbortQueuedActionRequest
 */
export type AbortQueuedActionRequest = Message<"flyteidl2.workflow.AbortQueuedActionRequest"> & {
  /**
   * ActionId is the unique identifier for the action to be aborted
   *
   * @generated from field: flyteidl2.common.ActionIdentifier action_id = 1;
   */
  actionId?: ActionIdentifier;

  /**
   * Reason for aborting the action, if applicable.
   *
   * @generated from field: optional string reason = 2;
   */
  reason?: string;
};

/**
 * Describes the message flyteidl2.workflow.AbortQueuedActionRequest.
 * Use `create(AbortQueuedActionRequestSchema)` to create a new message.
 */
export const AbortQueuedActionRequestSchema: GenMessage<AbortQueuedActionRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 4);

/**
 * @generated from message flyteidl2.workflow.AbortQueuedActionResponse
 */
export type AbortQueuedActionResponse = Message<"flyteidl2.workflow.AbortQueuedActionResponse"> & {
};

/**
 * Describes the message flyteidl2.workflow.AbortQueuedActionResponse.
 * Use `create(AbortQueuedActionResponseSchema)` to create a new message.
 */
export const AbortQueuedActionResponseSchema: GenMessage<AbortQueuedActionResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_queue_service, 5);

/**
 * provides an interface for managing execution of runs over a collection of workers.
 *
 * @generated from service flyteidl2.workflow.QueueService
 */
export const QueueService: GenService<{
  /**
   * queue a new action for execution.
   *
   * @generated from rpc flyteidl2.workflow.QueueService.EnqueueAction
   */
  enqueueAction: {
    methodKind: "unary";
    input: typeof EnqueueActionRequestSchema;
    output: typeof EnqueueActionResponseSchema;
  },
  /**
   * abort a queued run.
   *
   * @generated from rpc flyteidl2.workflow.QueueService.AbortQueuedRun
   */
  abortQueuedRun: {
    methodKind: "unary";
    input: typeof AbortQueuedRunRequestSchema;
    output: typeof AbortQueuedRunResponseSchema;
  },
  /**
   * AbortAction aborts a single action that was previously queued or is currently being processed by a worker.
   *
   * @generated from rpc flyteidl2.workflow.QueueService.AbortQueuedAction
   */
  abortQueuedAction: {
    methodKind: "unary";
    input: typeof AbortQueuedActionRequestSchema;
    output: typeof AbortQueuedActionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_flyteidl2_workflow_queue_service, 0);


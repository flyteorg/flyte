// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/workflow/run_logs_service.proto (package flyteidl2.workflow, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { ActionIdentifier } from "../common/identifier_pb.ts";
import { file_flyteidl2_common_identifier } from "../common/identifier_pb.ts";
import type { LogLine } from "../logs/dataplane/payload_pb.ts";
import { file_flyteidl2_logs_dataplane_payload } from "../logs/dataplane/payload_pb.ts";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/workflow/run_logs_service.proto.
 */
export const file_flyteidl2_workflow_run_logs_service: GenFile = /*@__PURE__*/
  fileDesc("CilmbHl0ZWlkbDIvd29ya2Zsb3cvcnVuX2xvZ3Nfc2VydmljZS5wcm90bxISZmx5dGVpZGwyLndvcmtmbG93ImoKD1RhaWxMb2dzUmVxdWVzdBI9CglhY3Rpb25faWQYASABKAsyIi5mbHl0ZWlkbDIuY29tbW9uLkFjdGlvbklkZW50aWZpZXJCBrpIA8gBARIYCgdhdHRlbXB0GAIgASgNQge6SAQqAiAAIoUBChBUYWlsTG9nc1Jlc3BvbnNlEjcKBGxvZ3MYASADKAsyKS5mbHl0ZWlkbDIud29ya2Zsb3cuVGFpbExvZ3NSZXNwb25zZS5Mb2dzGjgKBExvZ3MSMAoFbGluZXMYASADKAsyIS5mbHl0ZWlkbDIubG9ncy5kYXRhcGxhbmUuTG9nTGluZTJuCg5SdW5Mb2dzU2VydmljZRJcCghUYWlsTG9ncxIjLmZseXRlaWRsMi53b3JrZmxvdy5UYWlsTG9nc1JlcXVlc3QaJC5mbHl0ZWlkbDIud29ya2Zsb3cuVGFpbExvZ3NSZXNwb25zZSIDkAIBMAFC0AEKFmNvbS5mbHl0ZWlkbDIud29ya2Zsb3dCE1J1bkxvZ3NTZXJ2aWNlUHJvdG9IAlABWjZnaXRodWIuY29tL2ZseXRlb3JnL2ZseXRlL3YyL2dlbi9nby9mbHl0ZWlkbDIvd29ya2Zsb3eiAgNGV1iqAhJGbHl0ZWlkbDIuV29ya2Zsb3fKAhJGbHl0ZWlkbDJcV29ya2Zsb3fiAh5GbHl0ZWlkbDJcV29ya2Zsb3dcR1BCTWV0YWRhdGHqAhNGbHl0ZWlkbDI6OldvcmtmbG93YgZwcm90bzM", [file_flyteidl2_common_identifier, file_flyteidl2_logs_dataplane_payload, file_buf_validate_validate]);

/**
 * Request message for tailing logs.
 *
 * @generated from message flyteidl2.workflow.TailLogsRequest
 */
export type TailLogsRequest = Message<"flyteidl2.workflow.TailLogsRequest"> & {
  /**
   * The action id.
   *
   * @generated from field: flyteidl2.common.ActionIdentifier action_id = 1;
   */
  actionId?: ActionIdentifier;

  /**
   * The attempt number.
   *
   * @generated from field: uint32 attempt = 2;
   */
  attempt: number;
};

/**
 * Describes the message flyteidl2.workflow.TailLogsRequest.
 * Use `create(TailLogsRequestSchema)` to create a new message.
 */
export const TailLogsRequestSchema: GenMessage<TailLogsRequest> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_run_logs_service, 0);

/**
 * Reponse message for tailing logs.
 *
 * @generated from message flyteidl2.workflow.TailLogsResponse
 */
export type TailLogsResponse = Message<"flyteidl2.workflow.TailLogsResponse"> & {
  /**
   * One or more batches of logs.
   *
   * @generated from field: repeated flyteidl2.workflow.TailLogsResponse.Logs logs = 1;
   */
  logs: TailLogsResponse_Logs[];
};

/**
 * Describes the message flyteidl2.workflow.TailLogsResponse.
 * Use `create(TailLogsResponseSchema)` to create a new message.
 */
export const TailLogsResponseSchema: GenMessage<TailLogsResponse> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_run_logs_service, 1);

/**
 * A batch of logs.
 *
 * @generated from message flyteidl2.workflow.TailLogsResponse.Logs
 */
export type TailLogsResponse_Logs = Message<"flyteidl2.workflow.TailLogsResponse.Logs"> & {
  /**
   * Structured log lines.
   *
   * @generated from field: repeated flyteidl2.logs.dataplane.LogLine lines = 1;
   */
  lines: LogLine[];
};

/**
 * Describes the message flyteidl2.workflow.TailLogsResponse.Logs.
 * Use `create(TailLogsResponse_LogsSchema)` to create a new message.
 */
export const TailLogsResponse_LogsSchema: GenMessage<TailLogsResponse_Logs> = /*@__PURE__*/
  messageDesc(file_flyteidl2_workflow_run_logs_service, 1, 0);

/**
 * RunLogsService provides an interface for streaming logs.
 *
 * @generated from service flyteidl2.workflow.RunLogsService
 */
export const RunLogsService: GenService<{
  /**
   * @generated from rpc flyteidl2.workflow.RunLogsService.TailLogs
   */
  tailLogs: {
    methodKind: "server_streaming";
    input: typeof TailLogsRequestSchema;
    output: typeof TailLogsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_flyteidl2_workflow_run_logs_service, 0);


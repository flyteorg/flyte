// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/task/common.proto (package flyteidl2.task, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import type { Parameter } from "../core/interface_pb.ts";
import { file_flyteidl2_core_interface } from "../core/interface_pb.ts";
import type { KeyValuePair, Literal } from "../core/literals_pb.ts";
import { file_flyteidl2_core_literals } from "../core/literals_pb.ts";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/task/common.proto.
 */
export const file_flyteidl2_task_common: GenFile = /*@__PURE__*/
  fileDesc("ChtmbHl0ZWlkbDIvdGFzay9jb21tb24ucHJvdG8SDmZseXRlaWRsMi50YXNrIkwKDk5hbWVkUGFyYW1ldGVyEgwKBG5hbWUYASABKAkSLAoJcGFyYW1ldGVyGAIgASgLMhkuZmx5dGVpZGwyLmNvcmUuUGFyYW1ldGVyIooBCglGaXhlZFJhdGUSFgoFdmFsdWUYASABKA1CB7pIBCoCIAASNQoEdW5pdBgCIAEoDjIdLmZseXRlaWRsMi50YXNrLkZpeGVkUmF0ZVVuaXRCCLpIBYIBAiAAEi4KCnN0YXJ0X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIoUBCghTY2hlZHVsZRIpCgRyYXRlGAEgASgLMhkuZmx5dGVpZGwyLnRhc2suRml4ZWRSYXRlSAASGQoPY3Jvbl9leHByZXNzaW9uGAIgASgJSAASHgoWa2lja29mZl90aW1lX2lucHV0X2FyZxgDIAEoCUITCgpleHByZXNzaW9uEgW6SAIIASLXAQoVVHJpZ2dlckF1dG9tYXRpb25TcGVjEkIKBHR5cGUYASABKA4yKi5mbHl0ZWlkbDIudGFzay5UcmlnZ2VyQXV0b21hdGlvblNwZWMuVHlwZUIIukgFggECIAASLAoIc2NoZWR1bGUYAiABKAsyGC5mbHl0ZWlkbDIudGFzay5TY2hlZHVsZUgAIj4KBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEg0KCVRZUEVfTk9ORRABEhEKDVRZUEVfU0NIRURVTEUQAkIMCgphdXRvbWF0aW9uIkQKDE5hbWVkTGl0ZXJhbBIMCgRuYW1lGAEgASgJEiYKBXZhbHVlGAIgASgLMhcuZmx5dGVpZGwyLmNvcmUuTGl0ZXJhbCI6ChBPdXRwdXRSZWZlcmVuY2VzEhIKCm91dHB1dF91cmkYASABKAkSEgoKcmVwb3J0X3VyaRgCIAEoCSJnCgZJbnB1dHMSLgoIbGl0ZXJhbHMYASADKAsyHC5mbHl0ZWlkbDIudGFzay5OYW1lZExpdGVyYWwSLQoHY29udGV4dBgCIAMoCzIcLmZseXRlaWRsMi5jb3JlLktleVZhbHVlUGFpciI5CgdPdXRwdXRzEi4KCGxpdGVyYWxzGAEgAygLMhwuZmx5dGVpZGwyLnRhc2suTmFtZWRMaXRlcmFsKn8KDUZpeGVkUmF0ZVVuaXQSHwobRklYRURfUkFURV9VTklUX1VOU1BFQ0lGSUVEEAASGgoWRklYRURfUkFURV9VTklUX01JTlVURRABEhgKFEZJWEVEX1JBVEVfVU5JVF9IT1VSEAISFwoTRklYRURfUkFURV9VTklUX0RBWRADQrABChJjb20uZmx5dGVpZGwyLnRhc2tCC0NvbW1vblByb3RvSAJQAVoyZ2l0aHViLmNvbS9mbHl0ZW9yZy9mbHl0ZS92Mi9nZW4vZ28vZmx5dGVpZGwyL3Rhc2uiAgNGVFiqAg5GbHl0ZWlkbDIuVGFza8oCDkZseXRlaWRsMlxUYXNr4gIaRmx5dGVpZGwyXFRhc2tcR1BCTWV0YWRhdGHqAg9GbHl0ZWlkbDI6OlRhc2tiBnByb3RvMw", [file_buf_validate_validate, file_flyteidl2_core_interface, file_flyteidl2_core_literals, file_google_protobuf_timestamp]);

/**
 * @generated from message flyteidl2.task.NamedParameter
 */
export type NamedParameter = Message<"flyteidl2.task.NamedParameter"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: flyteidl2.core.Parameter parameter = 2;
   */
  parameter?: Parameter;
};

/**
 * Describes the message flyteidl2.task.NamedParameter.
 * Use `create(NamedParameterSchema)` to create a new message.
 */
export const NamedParameterSchema: GenMessage<NamedParameter> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 0);

/**
 * Option for schedules run at a certain frequency e.g. every 2 minutes.
 *
 * @generated from message flyteidl2.task.FixedRate
 */
export type FixedRate = Message<"flyteidl2.task.FixedRate"> & {
  /**
   * @generated from field: uint32 value = 1;
   */
  value: number;

  /**
   * @generated from field: flyteidl2.task.FixedRateUnit unit = 2;
   */
  unit: FixedRateUnit;

  /**
   * Optional, timestamp after which rate should be calculated. Can be only in future.
   * E.g. We create a rate schedule "every 5 minutes" with start_time="12:00" inactive.
   * Activate it at "12:04".
   * Trigger should fire at "12:05" as it adds 5 minutes to start_time="12:00".
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message flyteidl2.task.FixedRate.
 * Use `create(FixedRateSchema)` to create a new message.
 */
export const FixedRateSchema: GenMessage<FixedRate> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 1);

/**
 * Defines complete set of information required to trigger an execution on a schedule.
 *
 * @generated from message flyteidl2.task.Schedule
 */
export type Schedule = Message<"flyteidl2.task.Schedule"> & {
  /**
   * @generated from oneof flyteidl2.task.Schedule.expression
   */
  expression: {
    /**
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     *
     * @generated from field: flyteidl2.task.FixedRate rate = 1;
     */
    value: FixedRate;
    case: "rate";
  } | {
    /**
     * @generated from field: string cron_expression = 2;
     */
    value: string;
    case: "cronExpression";
  } | { case: undefined; value?: undefined };

  /**
   * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
   *
   * @generated from field: string kickoff_time_input_arg = 3;
   */
  kickoffTimeInputArg: string;
};

/**
 * Describes the message flyteidl2.task.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 2);

/**
 * @generated from message flyteidl2.task.TriggerAutomationSpec
 */
export type TriggerAutomationSpec = Message<"flyteidl2.task.TriggerAutomationSpec"> & {
  /**
   * Explicitly defines trigger automation type.
   *
   * @generated from field: flyteidl2.task.TriggerAutomationSpec.Type type = 1;
   */
  type: TriggerAutomationSpec_Type;

  /**
   * @generated from oneof flyteidl2.task.TriggerAutomationSpec.automation
   */
  automation: {
    /**
     * @generated from field: flyteidl2.task.Schedule schedule = 2;
     */
    value: Schedule;
    case: "schedule";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.task.TriggerAutomationSpec.
 * Use `create(TriggerAutomationSpecSchema)` to create a new message.
 */
export const TriggerAutomationSpecSchema: GenMessage<TriggerAutomationSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 3);

/**
 * Specifies type of the automation attached to trigger if any.
 *
 * @generated from enum flyteidl2.task.TriggerAutomationSpec.Type
 */
export enum TriggerAutomationSpec_Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: TYPE_SCHEDULE = 2;
   */
  SCHEDULE = 2,
}

/**
 * Describes the enum flyteidl2.task.TriggerAutomationSpec.Type.
 */
export const TriggerAutomationSpec_TypeSchema: GenEnum<TriggerAutomationSpec_Type> = /*@__PURE__*/
  enumDesc(file_flyteidl2_task_common, 3, 0);

/**
 * Named literal value.
 *
 * @generated from message flyteidl2.task.NamedLiteral
 */
export type NamedLiteral = Message<"flyteidl2.task.NamedLiteral"> & {
  /**
   * Name of the literal.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Literal value.
   *
   * @generated from field: flyteidl2.core.Literal value = 2;
   */
  value?: Literal;
};

/**
 * Describes the message flyteidl2.task.NamedLiteral.
 * Use `create(NamedLiteralSchema)` to create a new message.
 */
export const NamedLiteralSchema: GenMessage<NamedLiteral> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 4);

/**
 * Output references.
 *
 * @generated from message flyteidl2.task.OutputReferences
 */
export type OutputReferences = Message<"flyteidl2.task.OutputReferences"> & {
  /**
   * The output uri.
   *
   * @generated from field: string output_uri = 1;
   */
  outputUri: string;

  /**
   * Native URI to HTML report
   *
   * @generated from field: string report_uri = 2;
   */
  reportUri: string;
};

/**
 * Describes the message flyteidl2.task.OutputReferences.
 * Use `create(OutputReferencesSchema)` to create a new message.
 */
export const OutputReferencesSchema: GenMessage<OutputReferences> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 5);

/**
 * Input payload for an action.
 *
 * @generated from message flyteidl2.task.Inputs
 */
export type Inputs = Message<"flyteidl2.task.Inputs"> & {
  /**
   * Ordered inputs. THIS FIELD MUST REMAIN FIRST as this would break Run service assumptions if it were to move.
   *
   * @generated from field: repeated flyteidl2.task.NamedLiteral literals = 1;
   */
  literals: NamedLiteral[];

  /**
   * Context for the action. If an action receives context, it'll automatically pass it to any actions it spawns.
   * Context will not be used for cache key computation.
   * Examples for context include:
   *  - User-provided metadata that is not part of the action's inputs.
   *  - Information about the environment the action is running in (e.g. cluster, region, etc.)
   *  - Tracing information about the action
   *
   * @generated from field: repeated flyteidl2.core.KeyValuePair context = 2;
   */
  context: KeyValuePair[];
};

/**
 * Describes the message flyteidl2.task.Inputs.
 * Use `create(InputsSchema)` to create a new message.
 */
export const InputsSchema: GenMessage<Inputs> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 6);

/**
 * Output payload for an action.
 *
 * @generated from message flyteidl2.task.Outputs
 */
export type Outputs = Message<"flyteidl2.task.Outputs"> & {
  /**
   * Ordered outputs. THIS FIELD MUST REMAIN FIRST as this would break Run service assumptions if it were to move.
   *
   * @generated from field: repeated flyteidl2.task.NamedLiteral literals = 1;
   */
  literals: NamedLiteral[];
};

/**
 * Describes the message flyteidl2.task.Outputs.
 * Use `create(OutputsSchema)` to create a new message.
 */
export const OutputsSchema: GenMessage<Outputs> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_common, 7);

/**
 * Represents a frequency at which to run a schedule.
 *
 * @generated from enum flyteidl2.task.FixedRateUnit
 */
export enum FixedRateUnit {
  /**
   * @generated from enum value: FIXED_RATE_UNIT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FIXED_RATE_UNIT_MINUTE = 1;
   */
  MINUTE = 1,

  /**
   * @generated from enum value: FIXED_RATE_UNIT_HOUR = 2;
   */
  HOUR = 2,

  /**
   * @generated from enum value: FIXED_RATE_UNIT_DAY = 3;
   */
  DAY = 3,
}

/**
 * Describes the enum flyteidl2.task.FixedRateUnit.
 */
export const FixedRateUnitSchema: GenEnum<FixedRateUnit> = /*@__PURE__*/
  enumDesc(file_flyteidl2_task_common, 0);


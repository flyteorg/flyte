// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/task/task_definition.proto (package flyteidl2.task, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.ts";
import { file_flyteidl2_common_identifier } from "../common/identifier_pb.ts";
import type { EnrichedIdentity } from "../common/identity_pb.ts";
import { file_flyteidl2_common_identity } from "../common/identity_pb.ts";
import type { TypedInterface } from "../core/interface_pb.ts";
import { file_flyteidl2_core_interface } from "../core/interface_pb.ts";
import type { TaskTemplate } from "../core/tasks_pb.ts";
import { file_flyteidl2_core_tasks } from "../core/tasks_pb.ts";
import type { Inputs, NamedParameter, TriggerAutomationSpec } from "./common_pb.ts";
import { file_flyteidl2_task_common } from "./common_pb.ts";
import type { Environment } from "./environment_pb.ts";
import { file_flyteidl2_task_environment } from "./environment_pb.ts";
import type { RunSpec } from "./run_pb.ts";
import { file_flyteidl2_task_run } from "./run_pb.ts";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/task/task_definition.proto.
 */
export const file_flyteidl2_task_task_definition: GenFile = /*@__PURE__*/
  fileDesc("CiRmbHl0ZWlkbDIvdGFzay90YXNrX2RlZmluaXRpb24ucHJvdG8SDmZseXRlaWRsMi50YXNrInMKCFRhc2tOYW1lEhYKA29yZxgBIAEoCUIJukgGcgQQARg/EhoKB3Byb2plY3QYAiABKAlCCbpIBnIEEAEYPxIZCgZkb21haW4YAyABKAlCCbpIBnIEEAEYPxIYCgRuYW1lGAQgASgJQgq6SAdyBRABGP8BIpUBCg5UYXNrSWRlbnRpZmllchIWCgNvcmcYASABKAlCCbpIBnIEEAEYPxIaCgdwcm9qZWN0GAIgASgJQgm6SAZyBBABGD8SGQoGZG9tYWluGAMgASgJQgm6SAZyBBABGD8SGAoEbmFtZRgEIAEoCUIKukgHcgUQARj/ARIaCgd2ZXJzaW9uGAUgASgJQgm6SAZyBBABGD8i1AEKE1Rhc2tUcmlnZ2Vyc1N1bW1hcnkSQAoPYXV0b21hdGlvbl9zcGVjGAEgASgLMiUuZmx5dGVpZGwyLnRhc2suVHJpZ2dlckF1dG9tYXRpb25TcGVjSAASQQoFc3RhdHMYAiABKAsyMC5mbHl0ZWlkbDIudGFzay5UYXNrVHJpZ2dlcnNTdW1tYXJ5LlRyaWdnZXJTdGF0c0gAGi0KDFRyaWdnZXJTdGF0cxINCgV0b3RhbBgBIAEoDRIOCgZhY3RpdmUYAiABKA1CCQoHc3VtbWFyeSL4AQoMVGFza01ldGFkYXRhEj8KC2RlcGxveWVkX2J5GAEgASgLMiIuZmx5dGVpZGwyLmNvbW1vbi5FbnJpY2hlZElkZW50aXR5Qga6SAPIAQESFQoNZnVuY3Rpb25fbmFtZRgCIAEoCRI3CgtkZXBsb3llZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCBrpIA8gBARIYChBlbnZpcm9ubWVudF9uYW1lGAQgASgJEj0KEHRyaWdnZXJzX3N1bW1hcnkYBSABKAsyIy5mbHl0ZWlkbDIudGFzay5UYXNrVHJpZ2dlcnNTdW1tYXJ5IncKBFRhc2sSNwoHdGFza19pZBgBIAEoCzIeLmZseXRlaWRsMi50YXNrLlRhc2tJZGVudGlmaWVyQga6SAPIAQESNgoIbWV0YWRhdGEYAiABKAsyHC5mbHl0ZWlkbDIudGFzay5UYXNrTWV0YWRhdGFCBrpIA8gBASLOAQoIVGFza1NwZWMSOwoNdGFza190ZW1wbGF0ZRgBIAEoCzIcLmZseXRlaWRsMi5jb3JlLlRhc2tUZW1wbGF0ZUIGukgDyAEBEjYKDmRlZmF1bHRfaW5wdXRzGAIgAygLMh4uZmx5dGVpZGwyLnRhc2suTmFtZWRQYXJhbWV0ZXISGwoKc2hvcnRfbmFtZRgDIAEoCUIHukgEcgIYPxIwCgtlbnZpcm9ubWVudBgEIAEoCzIbLmZseXRlaWRsMi50YXNrLkVudmlyb25tZW50Ij4KCVRyYWNlU3BlYxIxCglpbnRlcmZhY2UYASABKAsyHi5mbHl0ZWlkbDIuY29yZS5UeXBlZEludGVyZmFjZSKuAQoLVGFza0RldGFpbHMSNwoHdGFza19pZBgBIAEoCzIeLmZseXRlaWRsMi50YXNrLlRhc2tJZGVudGlmaWVyQga6SAPIAQESNgoIbWV0YWRhdGEYAiABKAsyHC5mbHl0ZWlkbDIudGFzay5UYXNrTWV0YWRhdGFCBrpIA8gBARIuCgRzcGVjGAMgASgLMhguZmx5dGVpZGwyLnRhc2suVGFza1NwZWNCBrpIA8gBASKeAQoLVGFza1RyaWdnZXISGAoEbmFtZRgBIAEoCUIKukgHcgUQARj/ARI1CgRzcGVjGAIgASgLMh8uZmx5dGVpZGwyLnRhc2suVGFza1RyaWdnZXJTcGVjQga6SAPIAQESPgoPYXV0b21hdGlvbl9zcGVjGAMgASgLMiUuZmx5dGVpZGwyLnRhc2suVHJpZ2dlckF1dG9tYXRpb25TcGVjInQKD1Rhc2tUcmlnZ2VyU3BlYxIOCgZhY3RpdmUYASABKAgSJgoGaW5wdXRzGAIgASgLMhYuZmx5dGVpZGwyLnRhc2suSW5wdXRzEikKCHJ1bl9zcGVjGAMgASgLMhcuZmx5dGVpZGwyLnRhc2suUnVuU3BlY0K4AQoSY29tLmZseXRlaWRsMi50YXNrQhNUYXNrRGVmaW5pdGlvblByb3RvSAJQAVoyZ2l0aHViLmNvbS9mbHl0ZW9yZy9mbHl0ZS92Mi9nZW4vZ28vZmx5dGVpZGwyL3Rhc2uiAgNGVFiqAg5GbHl0ZWlkbDIuVGFza8oCDkZseXRlaWRsMlxUYXNr4gIaRmx5dGVpZGwyXFRhc2tcR1BCTWV0YWRhdGHqAg9GbHl0ZWlkbDI6OlRhc2tiBnByb3RvMw", [file_buf_validate_validate, file_flyteidl2_common_identifier, file_flyteidl2_common_identity, file_flyteidl2_core_interface, file_flyteidl2_core_tasks, file_flyteidl2_task_common, file_flyteidl2_task_environment, file_flyteidl2_task_run, file_google_protobuf_timestamp]);

/**
 * Name of a task. It may have multiple versions deployed.
 *
 * @generated from message flyteidl2.task.TaskName
 */
export type TaskName = Message<"flyteidl2.task.TaskName"> & {
  /**
   * Org this task belongs to.
   *
   * @generated from field: string org = 1;
   */
  org: string;

  /**
   * Project this task belongs to.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Domain this task belongs to.
   *
   * @generated from field: string domain = 3;
   */
  domain: string;

  /**
   * Unique name of the task. Should not be interpreted/parsed. Use `short_name` and `environment_name` for user facing names.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message flyteidl2.task.TaskName.
 * Use `create(TaskNameSchema)` to create a new message.
 */
export const TaskNameSchema: GenMessage<TaskName> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 0);

/**
 * TaskIdentifier is the unique identifier for a task.
 *
 * @generated from message flyteidl2.task.TaskIdentifier
 */
export type TaskIdentifier = Message<"flyteidl2.task.TaskIdentifier"> & {
  /**
   * Org this task belongs to.
   *
   * @generated from field: string org = 1;
   */
  org: string;

  /**
   * Project this task belongs to.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Domain this task belongs to.
   *
   * @generated from field: string domain = 3;
   */
  domain: string;

  /**
   * Unique name of the task. Should not be interpreted/parsed. Use `short_name` and `environment_name` for user facing names.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Version of the task.
   *
   * @generated from field: string version = 5;
   */
  version: string;
};

/**
 * Describes the message flyteidl2.task.TaskIdentifier.
 * Use `create(TaskIdentifierSchema)` to create a new message.
 */
export const TaskIdentifierSchema: GenMessage<TaskIdentifier> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 1);

/**
 * @generated from message flyteidl2.task.TaskTriggersSummary
 */
export type TaskTriggersSummary = Message<"flyteidl2.task.TaskTriggersSummary"> & {
  /**
   * @generated from oneof flyteidl2.task.TaskTriggersSummary.summary
   */
  summary: {
    /**
     * @generated from field: flyteidl2.task.TriggerAutomationSpec automation_spec = 1;
     */
    value: TriggerAutomationSpec;
    case: "automationSpec";
  } | {
    /**
     * @generated from field: flyteidl2.task.TaskTriggersSummary.TriggerStats stats = 2;
     */
    value: TaskTriggersSummary_TriggerStats;
    case: "stats";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.task.TaskTriggersSummary.
 * Use `create(TaskTriggersSummarySchema)` to create a new message.
 */
export const TaskTriggersSummarySchema: GenMessage<TaskTriggersSummary> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 2);

/**
 * @generated from message flyteidl2.task.TaskTriggersSummary.TriggerStats
 */
export type TaskTriggersSummary_TriggerStats = Message<"flyteidl2.task.TaskTriggersSummary.TriggerStats"> & {
  /**
   * @generated from field: uint32 total = 1;
   */
  total: number;

  /**
   * @generated from field: uint32 active = 2;
   */
  active: number;
};

/**
 * Describes the message flyteidl2.task.TaskTriggersSummary.TriggerStats.
 * Use `create(TaskTriggersSummary_TriggerStatsSchema)` to create a new message.
 */
export const TaskTriggersSummary_TriggerStatsSchema: GenMessage<TaskTriggersSummary_TriggerStats> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 2, 0);

/**
 * TaskMetadata is static, lightweight metadata about a task.
 *
 * @generated from message flyteidl2.task.TaskMetadata
 */
export type TaskMetadata = Message<"flyteidl2.task.TaskMetadata"> & {
  /**
   * Identity that deployed the task.
   *
   * @generated from field: flyteidl2.common.EnrichedIdentity deployed_by = 1;
   */
  deployedBy?: EnrichedIdentity;

  /**
   * The function name for this task
   *
   * @generated from field: string function_name = 2;
   */
  functionName: string;

  /**
   * The time the task was deployed
   *
   * @generated from field: google.protobuf.Timestamp deployed_at = 3;
   */
  deployedAt?: Timestamp;

  /**
   * The environment name for this task, if present.
   *
   * @generated from field: string environment_name = 4;
   */
  environmentName: string;

  /**
   * Brief overview of attached triggers if any.
   *
   * @generated from field: flyteidl2.task.TaskTriggersSummary triggers_summary = 5;
   */
  triggersSummary?: TaskTriggersSummary;
};

/**
 * Describes the message flyteidl2.task.TaskMetadata.
 * Use `create(TaskMetadataSchema)` to create a new message.
 */
export const TaskMetadataSchema: GenMessage<TaskMetadata> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 3);

/**
 * Lightweight representation of a task.
 *
 * @generated from message flyteidl2.task.Task
 */
export type Task = Message<"flyteidl2.task.Task"> & {
  /**
   * Id for this task.
   *
   * @generated from field: flyteidl2.task.TaskIdentifier task_id = 1;
   */
  taskId?: TaskIdentifier;

  /**
   * Metadata for this task.
   *
   * @generated from field: flyteidl2.task.TaskMetadata metadata = 2;
   */
  metadata?: TaskMetadata;
};

/**
 * Describes the message flyteidl2.task.Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 4);

/**
 * Specification for a task.
 *
 * @generated from message flyteidl2.task.TaskSpec
 */
export type TaskSpec = Message<"flyteidl2.task.TaskSpec"> & {
  /**
   * The template for this task.
   *
   * @generated from field: flyteidl2.core.TaskTemplate task_template = 1;
   */
  taskTemplate?: TaskTemplate;

  /**
   * Ordered default inputs.
   * These can be overridden when an run is created.
   * Client should not send required=true flag in underlying flyteidl2.core.Parameter.
   *
   * @generated from field: repeated flyteidl2.task.NamedParameter default_inputs = 2;
   */
  defaultInputs: NamedParameter[];

  /**
   * User facing display name for this task. Not required to be unique.
   * This is passed in via the SDK when the task is created and is either a user defined override or the name of the task.
   *
   * @generated from field: string short_name = 3;
   */
  shortName: string;

  /**
   * Optional environment for this task. Note, some tasks may not be run in the context of an environment.
   *
   * @generated from field: flyteidl2.task.Environment environment = 4;
   */
  environment?: Environment;
};

/**
 * Describes the message flyteidl2.task.TaskSpec.
 * Use `create(TaskSpecSchema)` to create a new message.
 */
export const TaskSpecSchema: GenMessage<TaskSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 5);

/**
 * Specification for a trace action.
 *
 * @generated from message flyteidl2.task.TraceSpec
 */
export type TraceSpec = Message<"flyteidl2.task.TraceSpec"> & {
  /**
   * A strongly typed interface for the trace.
   *
   * @generated from field: flyteidl2.core.TypedInterface interface = 1;
   */
  interface?: TypedInterface;
};

/**
 * Describes the message flyteidl2.task.TraceSpec.
 * Use `create(TraceSpecSchema)` to create a new message.
 */
export const TraceSpecSchema: GenMessage<TraceSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 6);

/**
 * Detailed information about a task.
 *
 * @generated from message flyteidl2.task.TaskDetails
 */
export type TaskDetails = Message<"flyteidl2.task.TaskDetails"> & {
  /**
   * Id for this task.
   *
   * @generated from field: flyteidl2.task.TaskIdentifier task_id = 1;
   */
  taskId?: TaskIdentifier;

  /**
   * Metadata for this task.
   *
   * @generated from field: flyteidl2.task.TaskMetadata metadata = 2;
   */
  metadata?: TaskMetadata;

  /**
   * Specification for this task.
   *
   * @generated from field: flyteidl2.task.TaskSpec spec = 3;
   */
  spec?: TaskSpec;
};

/**
 * Describes the message flyteidl2.task.TaskDetails.
 * Use `create(TaskDetailsSchema)` to create a new message.
 */
export const TaskDetailsSchema: GenMessage<TaskDetails> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 7);

/**
 * Contains details about a single trigger attached to a task. Should only be used in DeployTask endpoint.
 *
 * @generated from message flyteidl2.task.TaskTrigger
 */
export type TaskTrigger = Message<"flyteidl2.task.TaskTrigger"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: flyteidl2.task.TaskTriggerSpec spec = 2;
   */
  spec?: TaskTriggerSpec;

  /**
   * Optional automation spec.
   *
   * @generated from field: flyteidl2.task.TriggerAutomationSpec automation_spec = 3;
   */
  automationSpec?: TriggerAutomationSpec;
};

/**
 * Describes the message flyteidl2.task.TaskTrigger.
 * Use `create(TaskTriggerSchema)` to create a new message.
 */
export const TaskTriggerSchema: GenMessage<TaskTrigger> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 8);

/**
 * TaskTriggerSpec this is a copy of TriggerSpec without mandatory 'task_version' field.
 * This is supposed to be used only in DeployTask endpoint where 'task_version' is already provided in task_id.
 *
 * @generated from message flyteidl2.task.TaskTriggerSpec
 */
export type TaskTriggerSpec = Message<"flyteidl2.task.TaskTriggerSpec"> & {
  /**
   * Whether trigger is active
   *
   * @generated from field: bool active = 1;
   */
  active: boolean;

  /**
   * Inputs for triggered task.
   *
   * @generated from field: flyteidl2.task.Inputs inputs = 2;
   */
  inputs?: Inputs;

  /**
   * The run spec for triggered task.
   *
   * @generated from field: flyteidl2.task.RunSpec run_spec = 3;
   */
  runSpec?: RunSpec;
};

/**
 * Describes the message flyteidl2.task.TaskTriggerSpec.
 * Use `create(TaskTriggerSpecSchema)` to create a new message.
 */
export const TaskTriggerSpecSchema: GenMessage<TaskTriggerSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_task_task_definition, 9);


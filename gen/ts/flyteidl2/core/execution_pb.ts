// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file flyteidl2/core/execution.proto (package flyteidl2.core, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file flyteidl2/core/execution.proto.
 */
export const file_flyteidl2_core_execution: GenFile = /*@__PURE__*/
  fileDesc("Ch5mbHl0ZWlkbDIvY29yZS9leGVjdXRpb24ucHJvdG8SDmZseXRlaWRsMi5jb3JlIqcBChFXb3JrZmxvd0V4ZWN1dGlvbiKRAQoFUGhhc2USDQoJVU5ERUZJTkVEEAASCgoGUVVFVUVEEAESCwoHUlVOTklORxACEg4KClNVQ0NFRURJTkcQAxINCglTVUNDRUVERUQQBBILCgdGQUlMSU5HEAUSCgoGRkFJTEVEEAYSCwoHQUJPUlRFRBAHEg0KCVRJTUVEX09VVBAIEgwKCEFCT1JUSU5HEAkitgEKDU5vZGVFeGVjdXRpb24ipAEKBVBoYXNlEg0KCVVOREVGSU5FRBAAEgoKBlFVRVVFRBABEgsKB1JVTk5JTkcQAhINCglTVUNDRUVERUQQAxILCgdGQUlMSU5HEAQSCgoGRkFJTEVEEAUSCwoHQUJPUlRFRBAGEgsKB1NLSVBQRUQQBxINCglUSU1FRF9PVVQQCBITCg9EWU5BTUlDX1JVTk5JTkcQCRINCglSRUNPVkVSRUQQCiKsAQoNVGFza0V4ZWN1dGlvbiKaAQoFUGhhc2USDQoJVU5ERUZJTkVEEAASCgoGUVVFVUVEEAESCwoHUlVOTklORxACEg0KCVNVQ0NFRURFRBADEgsKB0FCT1JURUQQBBIKCgZGQUlMRUQQBRIQCgxJTklUSUFMSVpJTkcQBhIZChVXQUlUSU5HX0ZPUl9SRVNPVVJDRVMQBxIUChBSRVRSWUFCTEVfRkFJTEVEEAgi6QEKDkV4ZWN1dGlvbkVycm9yEgwKBGNvZGUYASABKAkSDwoHbWVzc2FnZRgCIAEoCRIRCgllcnJvcl91cmkYAyABKAkSNgoEa2luZBgEIAEoDjIoLmZseXRlaWRsMi5jb3JlLkV4ZWN1dGlvbkVycm9yLkVycm9yS2luZBItCgl0aW1lc3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg4KBndvcmtlchgGIAEoCSIuCglFcnJvcktpbmQSCwoHVU5LTk9XThAAEggKBFVTRVIQARIKCgZTWVNURU0QAiLmAgoHVGFza0xvZxILCgN1cmkYASABKAkSDAoEbmFtZRgCIAEoCRI9Cg5tZXNzYWdlX2Zvcm1hdBgDIAEoDjIlLmZseXRlaWRsMi5jb3JlLlRhc2tMb2cuTWVzc2FnZUZvcm1hdBImCgN0dGwYBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SGAoQU2hvd1doaWxlUGVuZGluZxgFIAEoCBIYChBIaWRlT25jZUZpbmlzaGVkGAYgASgIEjMKCWxpbmtfdHlwZRgHIAEoDjIgLmZseXRlaWRsMi5jb3JlLlRhc2tMb2cuTGlua1R5cGUSDQoFcmVhZHkYCCABKAgiLwoNTWVzc2FnZUZvcm1hdBILCgdVTktOT1dOEAASBwoDQ1NWEAESCAoESlNPThACIjAKCExpbmtUeXBlEgwKCEVYVEVSTkFMEAASDQoJREFTSEJPQVJEEAESBwoDSURFEAIiUwoKTG9nQ29udGV4dBIrCgRwb2RzGAEgAygLMh0uZmx5dGVpZGwyLmNvcmUuUG9kTG9nQ29udGV4dBIYChBwcmltYXJ5X3BvZF9uYW1lGAIgASgJIsUBCg1Qb2RMb2dDb250ZXh0EhEKCW5hbWVzcGFjZRgBIAEoCRIQCghwb2RfbmFtZRgCIAEoCRI0Cgpjb250YWluZXJzGAMgAygLMiAuZmx5dGVpZGwyLmNvcmUuQ29udGFpbmVyQ29udGV4dBIeChZwcmltYXJ5X2NvbnRhaW5lcl9uYW1lGAQgASgJEjkKD2luaXRfY29udGFpbmVycxgFIAMoCzIgLmZseXRlaWRsMi5jb3JlLkNvbnRhaW5lckNvbnRleHQi8QEKEENvbnRhaW5lckNvbnRleHQSFgoOY29udGFpbmVyX25hbWUYASABKAkSQAoHcHJvY2VzcxgCIAEoCzIvLmZseXRlaWRsMi5jb3JlLkNvbnRhaW5lckNvbnRleHQuUHJvY2Vzc0NvbnRleHQaggEKDlByb2Nlc3NDb250ZXh0EjgKFGNvbnRhaW5lcl9zdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI2ChJjb250YWluZXJfZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIkoKFFF1YWxpdHlPZlNlcnZpY2VTcGVjEjIKD3F1ZXVlaW5nX2J1ZGdldBgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiLEAQoQUXVhbGl0eU9mU2VydmljZRI1CgR0aWVyGAEgASgOMiUuZmx5dGVpZGwyLmNvcmUuUXVhbGl0eU9mU2VydmljZS5UaWVySAASNAoEc3BlYxgCIAEoCzIkLmZseXRlaWRsMi5jb3JlLlF1YWxpdHlPZlNlcnZpY2VTcGVjSAAiNAoEVGllchINCglVTkRFRklORUQQABIICgRISUdIEAESCgoGTUVESVVNEAISBwoDTE9XEANCDQoLZGVzaWduYXRpb25CswEKEmNvbS5mbHl0ZWlkbDIuY29yZUIORXhlY3V0aW9uUHJvdG9IAlABWjJnaXRodWIuY29tL2ZseXRlb3JnL2ZseXRlL3YyL2dlbi9nby9mbHl0ZWlkbDIvY29yZaICA0ZDWKoCDkZseXRlaWRsMi5Db3JlygIORmx5dGVpZGwyXENvcmXiAhpGbHl0ZWlkbDJcQ29yZVxHUEJNZXRhZGF0YeoCD0ZseXRlaWRsMjo6Q29yZWIGcHJvdG8z", [file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * Indicates various phases of Workflow Execution
 *
 * @generated from message flyteidl2.core.WorkflowExecution
 */
export type WorkflowExecution = Message<"flyteidl2.core.WorkflowExecution"> & {
};

/**
 * Describes the message flyteidl2.core.WorkflowExecution.
 * Use `create(WorkflowExecutionSchema)` to create a new message.
 */
export const WorkflowExecutionSchema: GenMessage<WorkflowExecution> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 0);

/**
 * @generated from enum flyteidl2.core.WorkflowExecution.Phase
 */
export enum WorkflowExecution_Phase {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: SUCCEEDING = 3;
   */
  SUCCEEDING = 3,

  /**
   * @generated from enum value: SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * @generated from enum value: FAILING = 5;
   */
  FAILING = 5,

  /**
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * @generated from enum value: ABORTED = 7;
   */
  ABORTED = 7,

  /**
   * @generated from enum value: TIMED_OUT = 8;
   */
  TIMED_OUT = 8,

  /**
   * @generated from enum value: ABORTING = 9;
   */
  ABORTING = 9,
}

/**
 * Describes the enum flyteidl2.core.WorkflowExecution.Phase.
 */
export const WorkflowExecution_PhaseSchema: GenEnum<WorkflowExecution_Phase> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 0, 0);

/**
 * Indicates various phases of Node Execution that only include the time spent to run the nodes/workflows
 *
 * @generated from message flyteidl2.core.NodeExecution
 */
export type NodeExecution = Message<"flyteidl2.core.NodeExecution"> & {
};

/**
 * Describes the message flyteidl2.core.NodeExecution.
 * Use `create(NodeExecutionSchema)` to create a new message.
 */
export const NodeExecutionSchema: GenMessage<NodeExecution> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 1);

/**
 * @generated from enum flyteidl2.core.NodeExecution.Phase
 */
export enum NodeExecution_Phase {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * @generated from enum value: FAILING = 4;
   */
  FAILING = 4,

  /**
   * @generated from enum value: FAILED = 5;
   */
  FAILED = 5,

  /**
   * @generated from enum value: ABORTED = 6;
   */
  ABORTED = 6,

  /**
   * @generated from enum value: SKIPPED = 7;
   */
  SKIPPED = 7,

  /**
   * @generated from enum value: TIMED_OUT = 8;
   */
  TIMED_OUT = 8,

  /**
   * @generated from enum value: DYNAMIC_RUNNING = 9;
   */
  DYNAMIC_RUNNING = 9,

  /**
   * @generated from enum value: RECOVERED = 10;
   */
  RECOVERED = 10,
}

/**
 * Describes the enum flyteidl2.core.NodeExecution.Phase.
 */
export const NodeExecution_PhaseSchema: GenEnum<NodeExecution_Phase> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 1, 0);

/**
 * Phases that task plugins can go through. Not all phases may be applicable to a specific plugin task,
 * but this is the cumulative list that customers may want to know about for their task.
 *
 * @generated from message flyteidl2.core.TaskExecution
 */
export type TaskExecution = Message<"flyteidl2.core.TaskExecution"> & {
};

/**
 * Describes the message flyteidl2.core.TaskExecution.
 * Use `create(TaskExecutionSchema)` to create a new message.
 */
export const TaskExecutionSchema: GenMessage<TaskExecution> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 2);

/**
 * @generated from enum flyteidl2.core.TaskExecution.Phase
 */
export enum TaskExecution_Phase {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * @generated from enum value: ABORTED = 4;
   */
  ABORTED = 4,

  /**
   * @generated from enum value: FAILED = 5;
   */
  FAILED = 5,

  /**
   * To indicate cases where task is initializing, like: ErrImagePull, ContainerCreating, PodInitializing
   *
   * @generated from enum value: INITIALIZING = 6;
   */
  INITIALIZING = 6,

  /**
   * To address cases, where underlying resource is not available: Backoff error, Resource quota exceeded
   *
   * @generated from enum value: WAITING_FOR_RESOURCES = 7;
   */
  WAITING_FOR_RESOURCES = 7,

  /**
   * @generated from enum value: RETRYABLE_FAILED = 8;
   */
  RETRYABLE_FAILED = 8,
}

/**
 * Describes the enum flyteidl2.core.TaskExecution.Phase.
 */
export const TaskExecution_PhaseSchema: GenEnum<TaskExecution_Phase> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 2, 0);

/**
 * Represents the error message from the execution.
 *
 * @generated from message flyteidl2.core.ExecutionError
 */
export type ExecutionError = Message<"flyteidl2.core.ExecutionError"> & {
  /**
   * Error code indicates a grouping of a type of error.
   * More Info: <Link>
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * Detailed description of the error - including stack trace.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Full error contents accessible via a URI
   *
   * @generated from field: string error_uri = 3;
   */
  errorUri: string;

  /**
   * @generated from field: flyteidl2.core.ExecutionError.ErrorKind kind = 4;
   */
  kind: ExecutionError_ErrorKind;

  /**
   * Timestamp of the error
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 5;
   */
  timestamp?: Timestamp;

  /**
   * Worker that generated the error
   *
   * @generated from field: string worker = 6;
   */
  worker: string;
};

/**
 * Describes the message flyteidl2.core.ExecutionError.
 * Use `create(ExecutionErrorSchema)` to create a new message.
 */
export const ExecutionErrorSchema: GenMessage<ExecutionError> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 3);

/**
 * Error type: System or User
 *
 * @generated from enum flyteidl2.core.ExecutionError.ErrorKind
 */
export enum ExecutionError_ErrorKind {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: USER = 1;
   */
  USER = 1,

  /**
   * @generated from enum value: SYSTEM = 2;
   */
  SYSTEM = 2,
}

/**
 * Describes the enum flyteidl2.core.ExecutionError.ErrorKind.
 */
export const ExecutionError_ErrorKindSchema: GenEnum<ExecutionError_ErrorKind> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 3, 0);

/**
 * Log information for the task that is specific to a log sink
 * When our log story is flushed out, we may have more metadata here like log link expiry
 *
 * @generated from message flyteidl2.core.TaskLog
 */
export type TaskLog = Message<"flyteidl2.core.TaskLog"> & {
  /**
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: flyteidl2.core.TaskLog.MessageFormat message_format = 3;
   */
  messageFormat: TaskLog_MessageFormat;

  /**
   * @generated from field: google.protobuf.Duration ttl = 4;
   */
  ttl?: Duration;

  /**
   * @generated from field: bool ShowWhilePending = 5;
   */
  ShowWhilePending: boolean;

  /**
   * @generated from field: bool HideOnceFinished = 6;
   */
  HideOnceFinished: boolean;

  /**
   * @generated from field: flyteidl2.core.TaskLog.LinkType link_type = 7;
   */
  linkType: TaskLog_LinkType;

  /**
   * @generated from field: bool ready = 8;
   */
  ready: boolean;
};

/**
 * Describes the message flyteidl2.core.TaskLog.
 * Use `create(TaskLogSchema)` to create a new message.
 */
export const TaskLogSchema: GenMessage<TaskLog> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 4);

/**
 * @generated from enum flyteidl2.core.TaskLog.MessageFormat
 */
export enum TaskLog_MessageFormat {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: CSV = 1;
   */
  CSV = 1,

  /**
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,
}

/**
 * Describes the enum flyteidl2.core.TaskLog.MessageFormat.
 */
export const TaskLog_MessageFormatSchema: GenEnum<TaskLog_MessageFormat> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 4, 0);

/**
 * @generated from enum flyteidl2.core.TaskLog.LinkType
 */
export enum TaskLog_LinkType {
  /**
   * The link for task log. For example, the aws cloudwatch logs, gcp stackdriver logs, etc.
   *
   * @generated from enum value: EXTERNAL = 0;
   */
  EXTERNAL = 0,

  /**
   * The link for spark UI, ray dashboard, etc.
   *
   * @generated from enum value: DASHBOARD = 1;
   */
  DASHBOARD = 1,

  /**
   * The link for vscode or other IDEs.
   *
   * @generated from enum value: IDE = 2;
   */
  IDE = 2,
}

/**
 * Describes the enum flyteidl2.core.TaskLog.LinkType.
 */
export const TaskLog_LinkTypeSchema: GenEnum<TaskLog_LinkType> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 4, 1);

/**
 * Contains metadata required to identify logs produces by a set of pods
 *
 * @generated from message flyteidl2.core.LogContext
 */
export type LogContext = Message<"flyteidl2.core.LogContext"> & {
  /**
   * @generated from field: repeated flyteidl2.core.PodLogContext pods = 1;
   */
  pods: PodLogContext[];

  /**
   * @generated from field: string primary_pod_name = 2;
   */
  primaryPodName: string;
};

/**
 * Describes the message flyteidl2.core.LogContext.
 * Use `create(LogContextSchema)` to create a new message.
 */
export const LogContextSchema: GenMessage<LogContext> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 5);

/**
 * Contains metadata required to identify logs produces by a single pod
 *
 * @generated from message flyteidl2.core.PodLogContext
 */
export type PodLogContext = Message<"flyteidl2.core.PodLogContext"> & {
  /**
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * @generated from field: string pod_name = 2;
   */
  podName: string;

  /**
   * @generated from field: repeated flyteidl2.core.ContainerContext containers = 3;
   */
  containers: ContainerContext[];

  /**
   * @generated from field: string primary_container_name = 4;
   */
  primaryContainerName: string;

  /**
   * @generated from field: repeated flyteidl2.core.ContainerContext init_containers = 5;
   */
  initContainers: ContainerContext[];
};

/**
 * Describes the message flyteidl2.core.PodLogContext.
 * Use `create(PodLogContextSchema)` to create a new message.
 */
export const PodLogContextSchema: GenMessage<PodLogContext> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 6);

/**
 * Contains metadata required to identify logs produces by a single container
 *
 * @generated from message flyteidl2.core.ContainerContext
 */
export type ContainerContext = Message<"flyteidl2.core.ContainerContext"> & {
  /**
   * @generated from field: string container_name = 1;
   */
  containerName: string;

  /**
   * @generated from field: flyteidl2.core.ContainerContext.ProcessContext process = 2;
   */
  process?: ContainerContext_ProcessContext;
};

/**
 * Describes the message flyteidl2.core.ContainerContext.
 * Use `create(ContainerContextSchema)` to create a new message.
 */
export const ContainerContextSchema: GenMessage<ContainerContext> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 7);

/**
 * Contains metadata required to identify logs produces by a single light-weight process that was run inside a container
 *
 * @generated from message flyteidl2.core.ContainerContext.ProcessContext
 */
export type ContainerContext_ProcessContext = Message<"flyteidl2.core.ContainerContext.ProcessContext"> & {
  /**
   * @generated from field: google.protobuf.Timestamp container_start_time = 1;
   */
  containerStartTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp container_end_time = 2;
   */
  containerEndTime?: Timestamp;
};

/**
 * Describes the message flyteidl2.core.ContainerContext.ProcessContext.
 * Use `create(ContainerContext_ProcessContextSchema)` to create a new message.
 */
export const ContainerContext_ProcessContextSchema: GenMessage<ContainerContext_ProcessContext> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 7, 0);

/**
 * Represents customized execution run-time attributes.
 *
 * @generated from message flyteidl2.core.QualityOfServiceSpec
 */
export type QualityOfServiceSpec = Message<"flyteidl2.core.QualityOfServiceSpec"> & {
  /**
   * Indicates how much queueing delay an execution can tolerate.
   *
   * @generated from field: google.protobuf.Duration queueing_budget = 1;
   */
  queueingBudget?: Duration;
};

/**
 * Describes the message flyteidl2.core.QualityOfServiceSpec.
 * Use `create(QualityOfServiceSpecSchema)` to create a new message.
 */
export const QualityOfServiceSpecSchema: GenMessage<QualityOfServiceSpec> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 8);

/**
 * Indicates the priority of an execution.
 *
 * @generated from message flyteidl2.core.QualityOfService
 */
export type QualityOfService = Message<"flyteidl2.core.QualityOfService"> & {
  /**
   * @generated from oneof flyteidl2.core.QualityOfService.designation
   */
  designation: {
    /**
     * @generated from field: flyteidl2.core.QualityOfService.Tier tier = 1;
     */
    value: QualityOfService_Tier;
    case: "tier";
  } | {
    /**
     * @generated from field: flyteidl2.core.QualityOfServiceSpec spec = 2;
     */
    value: QualityOfServiceSpec;
    case: "spec";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl2.core.QualityOfService.
 * Use `create(QualityOfServiceSchema)` to create a new message.
 */
export const QualityOfServiceSchema: GenMessage<QualityOfService> = /*@__PURE__*/
  messageDesc(file_flyteidl2_core_execution, 9);

/**
 * @generated from enum flyteidl2.core.QualityOfService.Tier
 */
export enum QualityOfService_Tier {
  /**
   * Default: no quality of service specified.
   *
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: HIGH = 1;
   */
  HIGH = 1,

  /**
   * @generated from enum value: MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * @generated from enum value: LOW = 3;
   */
  LOW = 3,
}

/**
 * Describes the enum flyteidl2.core.QualityOfService.Tier.
 */
export const QualityOfService_TierSchema: GenEnum<QualityOfService_Tier> = /*@__PURE__*/
  enumDesc(file_flyteidl2_core_execution, 9, 0);


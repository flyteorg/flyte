// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file core/artifact_id.proto (package flyteidl.core, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_core_identifier } from "./identifier_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file core/artifact_id.proto.
 */
export const file_core_artifact_id: GenFile = /*@__PURE__*/
  fileDesc("ChZjb3JlL2FydGlmYWN0X2lkLnByb3RvEg1mbHl0ZWlkbC5jb3JlIkkKC0FydGlmYWN0S2V5Eg8KB3Byb2plY3QYASABKAkSDgoGZG9tYWluGAIgASgJEgwKBG5hbWUYAyABKAkSCwoDb3JnGAQgASgJIp4BChNBcnRpZmFjdEJpbmRpbmdEYXRhEhcKDXBhcnRpdGlvbl9rZXkYBSABKAlIABIgChZiaW5kX3RvX3RpbWVfcGFydGl0aW9uGAYgASgISAASNAoOdGltZV90cmFuc2Zvcm0YByABKAsyHC5mbHl0ZWlkbC5jb3JlLlRpbWVUcmFuc2Zvcm1CEAoOcGFydGl0aW9uX2RhdGFKBAgBEAUiRwoNVGltZVRyYW5zZm9ybRIRCgl0cmFuc2Zvcm0YASABKAkSIwoCb3AYAiABKA4yFy5mbHl0ZWlkbC5jb3JlLk9wZXJhdG9yIh8KEElucHV0QmluZGluZ0RhdGESCwoDdmFyGAEgASgJIhAKDlJ1bnRpbWVCaW5kaW5nIpQCCgpMYWJlbFZhbHVlEhYKDHN0YXRpY192YWx1ZRgBIAEoCUgAEjAKCnRpbWVfdmFsdWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASPwoRdHJpZ2dlcmVkX2JpbmRpbmcYAyABKAsyIi5mbHl0ZWlkbC5jb3JlLkFydGlmYWN0QmluZGluZ0RhdGFIABI4Cg1pbnB1dF9iaW5kaW5nGAQgASgLMh8uZmx5dGVpZGwuY29yZS5JbnB1dEJpbmRpbmdEYXRhSAASOAoPcnVudGltZV9iaW5kaW5nGAUgASgLMh0uZmx5dGVpZGwuY29yZS5SdW50aW1lQmluZGluZ0gAQgcKBXZhbHVlIooBCgpQYXJ0aXRpb25zEjMKBXZhbHVlGAEgAygLMiQuZmx5dGVpZGwuY29yZS5QYXJ0aXRpb25zLlZhbHVlRW50cnkaRwoKVmFsdWVFbnRyeRILCgNrZXkYASABKAkSKAoFdmFsdWUYAiABKAsyGS5mbHl0ZWlkbC5jb3JlLkxhYmVsVmFsdWU6AjgBImoKDVRpbWVQYXJ0aXRpb24SKAoFdmFsdWUYASABKAsyGS5mbHl0ZWlkbC5jb3JlLkxhYmVsVmFsdWUSLwoLZ3JhbnVsYXJpdHkYAiABKA4yGi5mbHl0ZWlkbC5jb3JlLkdyYW51bGFyaXR5IrQBCgpBcnRpZmFjdElEEjAKDGFydGlmYWN0X2tleRgBIAEoCzIaLmZseXRlaWRsLmNvcmUuQXJ0aWZhY3RLZXkSDwoHdmVyc2lvbhgCIAEoCRItCgpwYXJ0aXRpb25zGAMgASgLMhkuZmx5dGVpZGwuY29yZS5QYXJ0aXRpb25zEjQKDnRpbWVfcGFydGl0aW9uGAQgASgLMhwuZmx5dGVpZGwuY29yZS5UaW1lUGFydGl0aW9uImkKC0FydGlmYWN0VGFnEjAKDGFydGlmYWN0X2tleRgBIAEoCzIaLmZseXRlaWRsLmNvcmUuQXJ0aWZhY3RLZXkSKAoFdmFsdWUYAiABKAsyGS5mbHl0ZWlkbC5jb3JlLkxhYmVsVmFsdWUiyQEKDUFydGlmYWN0UXVlcnkSMAoLYXJ0aWZhY3RfaWQYASABKAsyGS5mbHl0ZWlkbC5jb3JlLkFydGlmYWN0SURIABIyCgxhcnRpZmFjdF90YWcYAiABKAsyGi5mbHl0ZWlkbC5jb3JlLkFydGlmYWN0VGFnSAASDQoDdXJpGAMgASgJSAASNQoHYmluZGluZxgEIAEoCzIiLmZseXRlaWRsLmNvcmUuQXJ0aWZhY3RCaW5kaW5nRGF0YUgAQgwKCmlkZW50aWZpZXIqQgoLR3JhbnVsYXJpdHkSCQoFVU5TRVQQABIKCgZNSU5VVEUQARIICgRIT1VSEAISBwoDREFZEAMSCQoFTU9OVEgQBCofCghPcGVyYXRvchIJCgVNSU5VUxAAEggKBFBMVVMQAUKlAQoRY29tLmZseXRlaWRsLmNvcmVCD0FydGlmYWN0SWRQcm90b0gCUAFaKGdpdGh1Yi5jb20vZmx5dGVvcmcvZmx5dGUvdjIvZ2VuL2dvL2NvcmWiAgNGQ1iqAg1GbHl0ZWlkbC5Db3JlygINRmx5dGVpZGxcQ29yZeICGUZseXRlaWRsXENvcmVcR1BCTWV0YWRhdGHqAg5GbHl0ZWlkbDo6Q29yZWIGcHJvdG8z", [file_google_protobuf_timestamp, file_core_identifier]);

/**
 * @generated from message flyteidl.core.ArtifactKey
 */
export type ArtifactKey = Message<"flyteidl.core.ArtifactKey"> & {
  /**
   * Project and domain and suffix needs to be unique across a given artifact store.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string org = 4;
   */
  org: string;
};

/**
 * Describes the message flyteidl.core.ArtifactKey.
 * Use `create(ArtifactKeySchema)` to create a new message.
 */
export const ArtifactKeySchema: GenMessage<ArtifactKey> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 0);

/**
 * Only valid for triggers
 *
 * @generated from message flyteidl.core.ArtifactBindingData
 */
export type ArtifactBindingData = Message<"flyteidl.core.ArtifactBindingData"> & {
  /**
   * These two fields are only relevant in the partition value case
   *
   * @generated from oneof flyteidl.core.ArtifactBindingData.partition_data
   */
  partitionData: {
    /**
     * @generated from field: string partition_key = 5;
     */
    value: string;
    case: "partitionKey";
  } | {
    /**
     * @generated from field: bool bind_to_time_partition = 6;
     */
    value: boolean;
    case: "bindToTimePartition";
  } | { case: undefined; value?: undefined };

  /**
   * This is only relevant in the time partition case
   *
   * @generated from field: flyteidl.core.TimeTransform time_transform = 7;
   */
  timeTransform?: TimeTransform;
};

/**
 * Describes the message flyteidl.core.ArtifactBindingData.
 * Use `create(ArtifactBindingDataSchema)` to create a new message.
 */
export const ArtifactBindingDataSchema: GenMessage<ArtifactBindingData> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 1);

/**
 * @generated from message flyteidl.core.TimeTransform
 */
export type TimeTransform = Message<"flyteidl.core.TimeTransform"> & {
  /**
   * @generated from field: string transform = 1;
   */
  transform: string;

  /**
   * @generated from field: flyteidl.core.Operator op = 2;
   */
  op: Operator;
};

/**
 * Describes the message flyteidl.core.TimeTransform.
 * Use `create(TimeTransformSchema)` to create a new message.
 */
export const TimeTransformSchema: GenMessage<TimeTransform> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 2);

/**
 * @generated from message flyteidl.core.InputBindingData
 */
export type InputBindingData = Message<"flyteidl.core.InputBindingData"> & {
  /**
   * @generated from field: string var = 1;
   */
  var: string;
};

/**
 * Describes the message flyteidl.core.InputBindingData.
 * Use `create(InputBindingDataSchema)` to create a new message.
 */
export const InputBindingDataSchema: GenMessage<InputBindingData> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 3);

/**
 * @generated from message flyteidl.core.RuntimeBinding
 */
export type RuntimeBinding = Message<"flyteidl.core.RuntimeBinding"> & {
};

/**
 * Describes the message flyteidl.core.RuntimeBinding.
 * Use `create(RuntimeBindingSchema)` to create a new message.
 */
export const RuntimeBindingSchema: GenMessage<RuntimeBinding> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 4);

/**
 * @generated from message flyteidl.core.LabelValue
 */
export type LabelValue = Message<"flyteidl.core.LabelValue"> & {
  /**
   * @generated from oneof flyteidl.core.LabelValue.value
   */
  value: {
    /**
     * The string static value is for use in the Partitions object
     *
     * @generated from field: string static_value = 1;
     */
    value: string;
    case: "staticValue";
  } | {
    /**
     * The time value is for use in the TimePartition case
     *
     * @generated from field: google.protobuf.Timestamp time_value = 2;
     */
    value: Timestamp;
    case: "timeValue";
  } | {
    /**
     * @generated from field: flyteidl.core.ArtifactBindingData triggered_binding = 3;
     */
    value: ArtifactBindingData;
    case: "triggeredBinding";
  } | {
    /**
     * @generated from field: flyteidl.core.InputBindingData input_binding = 4;
     */
    value: InputBindingData;
    case: "inputBinding";
  } | {
    /**
     * @generated from field: flyteidl.core.RuntimeBinding runtime_binding = 5;
     */
    value: RuntimeBinding;
    case: "runtimeBinding";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl.core.LabelValue.
 * Use `create(LabelValueSchema)` to create a new message.
 */
export const LabelValueSchema: GenMessage<LabelValue> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 5);

/**
 * @generated from message flyteidl.core.Partitions
 */
export type Partitions = Message<"flyteidl.core.Partitions"> & {
  /**
   * @generated from field: map<string, flyteidl.core.LabelValue> value = 1;
   */
  value: { [key: string]: LabelValue };
};

/**
 * Describes the message flyteidl.core.Partitions.
 * Use `create(PartitionsSchema)` to create a new message.
 */
export const PartitionsSchema: GenMessage<Partitions> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 6);

/**
 * @generated from message flyteidl.core.TimePartition
 */
export type TimePartition = Message<"flyteidl.core.TimePartition"> & {
  /**
   * @generated from field: flyteidl.core.LabelValue value = 1;
   */
  value?: LabelValue;

  /**
   * @generated from field: flyteidl.core.Granularity granularity = 2;
   */
  granularity: Granularity;
};

/**
 * Describes the message flyteidl.core.TimePartition.
 * Use `create(TimePartitionSchema)` to create a new message.
 */
export const TimePartitionSchema: GenMessage<TimePartition> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 7);

/**
 * @generated from message flyteidl.core.ArtifactID
 */
export type ArtifactID = Message<"flyteidl.core.ArtifactID"> & {
  /**
   * @generated from field: flyteidl.core.ArtifactKey artifact_key = 1;
   */
  artifactKey?: ArtifactKey;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * Think of a partition as a tag on an Artifact, except it's a key-value pair.
   * Different partitions naturally have different versions (execution ids).
   *
   * @generated from field: flyteidl.core.Partitions partitions = 3;
   */
  partitions?: Partitions;

  /**
   * There is no such thing as an empty time partition - if it's not set, then there is no time partition.
   *
   * @generated from field: flyteidl.core.TimePartition time_partition = 4;
   */
  timePartition?: TimePartition;
};

/**
 * Describes the message flyteidl.core.ArtifactID.
 * Use `create(ArtifactIDSchema)` to create a new message.
 */
export const ArtifactIDSchema: GenMessage<ArtifactID> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 8);

/**
 * @generated from message flyteidl.core.ArtifactTag
 */
export type ArtifactTag = Message<"flyteidl.core.ArtifactTag"> & {
  /**
   * @generated from field: flyteidl.core.ArtifactKey artifact_key = 1;
   */
  artifactKey?: ArtifactKey;

  /**
   * @generated from field: flyteidl.core.LabelValue value = 2;
   */
  value?: LabelValue;
};

/**
 * Describes the message flyteidl.core.ArtifactTag.
 * Use `create(ArtifactTagSchema)` to create a new message.
 */
export const ArtifactTagSchema: GenMessage<ArtifactTag> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 9);

/**
 * Uniqueness constraints for Artifacts
 *  - project, domain, name, version, partitions
 * Option 2 (tags are standalone, point to an individual artifact id):
 *  - project, domain, name, alias (points to one partition if partitioned)
 *  - project, domain, name, partition key, partition value
 *
 * @generated from message flyteidl.core.ArtifactQuery
 */
export type ArtifactQuery = Message<"flyteidl.core.ArtifactQuery"> & {
  /**
   * @generated from oneof flyteidl.core.ArtifactQuery.identifier
   */
  identifier: {
    /**
     * @generated from field: flyteidl.core.ArtifactID artifact_id = 1;
     */
    value: ArtifactID;
    case: "artifactId";
  } | {
    /**
     * @generated from field: flyteidl.core.ArtifactTag artifact_tag = 2;
     */
    value: ArtifactTag;
    case: "artifactTag";
  } | {
    /**
     * @generated from field: string uri = 3;
     */
    value: string;
    case: "uri";
  } | {
    /**
     * This is used in the trigger case, where a user specifies a value for an input that is one of the triggering
     * artifacts, or a partition value derived from a triggering artifact.
     *
     * @generated from field: flyteidl.core.ArtifactBindingData binding = 4;
     */
    value: ArtifactBindingData;
    case: "binding";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message flyteidl.core.ArtifactQuery.
 * Use `create(ArtifactQuerySchema)` to create a new message.
 */
export const ArtifactQuerySchema: GenMessage<ArtifactQuery> = /*@__PURE__*/
  messageDesc(file_core_artifact_id, 10);

/**
 * @generated from enum flyteidl.core.Granularity
 */
export enum Granularity {
  /**
   * @generated from enum value: UNSET = 0;
   */
  UNSET = 0,

  /**
   * @generated from enum value: MINUTE = 1;
   */
  MINUTE = 1,

  /**
   * @generated from enum value: HOUR = 2;
   */
  HOUR = 2,

  /**
   * default
   *
   * @generated from enum value: DAY = 3;
   */
  DAY = 3,

  /**
   * @generated from enum value: MONTH = 4;
   */
  MONTH = 4,
}

/**
 * Describes the enum flyteidl.core.Granularity.
 */
export const GranularitySchema: GenEnum<Granularity> = /*@__PURE__*/
  enumDesc(file_core_artifact_id, 0);

/**
 * @generated from enum flyteidl.core.Operator
 */
export enum Operator {
  /**
   * @generated from enum value: MINUS = 0;
   */
  MINUS = 0,

  /**
   * @generated from enum value: PLUS = 1;
   */
  PLUS = 1,
}

/**
 * Describes the enum flyteidl.core.Operator.
 */
export const OperatorSchema: GenEnum<Operator> = /*@__PURE__*/
  enumDesc(file_core_artifact_id, 1);


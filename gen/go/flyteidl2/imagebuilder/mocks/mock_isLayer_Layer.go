// Code generated by mockery. DO NOT EDIT.

package imagebuilder

import mock "github.com/stretchr/testify/mock"

// isLayer_Layer is an autogenerated mock type for the isLayer_Layer type
type isLayer_Layer struct {
	mock.Mock
}

type isLayer_Layer_Expecter struct {
	mock *mock.Mock
}

func (_m *isLayer_Layer) EXPECT() *isLayer_Layer_Expecter {
	return &isLayer_Layer_Expecter{mock: &_m.Mock}
}

// isLayer_Layer provides a mock function with no fields
func (_m *isLayer_Layer) isLayer_Layer() {
	_m.Called()
}

// isLayer_Layer_isLayer_Layer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isLayer_Layer'
type isLayer_Layer_isLayer_Layer_Call struct {
	*mock.Call
}

// isLayer_Layer is a helper method to define mock.On call
func (_e *isLayer_Layer_Expecter) isLayer_Layer() *isLayer_Layer_isLayer_Layer_Call {
	return &isLayer_Layer_isLayer_Layer_Call{Call: _e.mock.On("isLayer_Layer")}
}

func (_c *isLayer_Layer_isLayer_Layer_Call) Run(run func()) *isLayer_Layer_isLayer_Layer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isLayer_Layer_isLayer_Layer_Call) Return() *isLayer_Layer_isLayer_Layer_Call {
	_c.Call.Return()
	return _c
}

func (_c *isLayer_Layer_isLayer_Layer_Call) RunAndReturn(run func()) *isLayer_Layer_isLayer_Layer_Call {
	_c.Run(run)
	return _c
}

// newIsLayer_Layer creates a new instance of isLayer_Layer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsLayer_Layer(t interface {
	mock.TestingT
	Cleanup(func())
}) *isLayer_Layer {
	mock := &isLayer_Layer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

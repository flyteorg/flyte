// Code generated by mockery. DO NOT EDIT.

package imagebuilder

import mock "github.com/stretchr/testify/mock"

// UnsafeImageServiceServer is an autogenerated mock type for the UnsafeImageServiceServer type
type UnsafeImageServiceServer struct {
	mock.Mock
}

type UnsafeImageServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeImageServiceServer) EXPECT() *UnsafeImageServiceServer_Expecter {
	return &UnsafeImageServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedImageServiceServer provides a mock function with no fields
func (_m *UnsafeImageServiceServer) mustEmbedUnimplementedImageServiceServer() {
	_m.Called()
}

// UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedImageServiceServer'
type UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedImageServiceServer is a helper method to define mock.On call
func (_e *UnsafeImageServiceServer_Expecter) mustEmbedUnimplementedImageServiceServer() *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call {
	return &UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedImageServiceServer")}
}

func (_c *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call) Run(run func()) *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call) Return() *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call) RunAndReturn(run func()) *UnsafeImageServiceServer_mustEmbedUnimplementedImageServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeImageServiceServer creates a new instance of UnsafeImageServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeImageServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeImageServiceServer {
	mock := &UnsafeImageServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/app/app_definition.proto

package app

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/common"
	core "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for deployment status of the app.
type Status_DeploymentStatus int32

const (
	// Unspecified deployment status.
	Status_DEPLOYMENT_STATUS_UNSPECIFIED Status_DeploymentStatus = 0
	// Deployment is enabled but hasn't been assigned to a cluster yet.
	Status_DEPLOYMENT_STATUS_UNASSIGNED Status_DeploymentStatus = 1
	// Deployment is assigned to a cluster but hasn't been acknowledged yet.
	Status_DEPLOYMENT_STATUS_ASSIGNED Status_DeploymentStatus = 2
	// Deployment is picked up by a cluster but is awaiting deployment.
	Status_DEPLOYMENT_STATUS_PENDING Status_DeploymentStatus = 3
	// Deployment is disabled.
	Status_DEPLOYMENT_STATUS_STOPPED Status_DeploymentStatus = 4
	// Deployment is completed. Please use DEPLOYMENT_STATUS_ACTIVE instead.
	//
	// Deprecated: Marked as deprecated in flyteidl2/app/app_definition.proto.
	Status_DEPLOYMENT_STATUS_STARTED Status_DeploymentStatus = 5
	// Deployment has failed.
	Status_DEPLOYMENT_STATUS_FAILED Status_DeploymentStatus = 6
	// Deployment is completed.
	Status_DEPLOYMENT_STATUS_ACTIVE Status_DeploymentStatus = 7
	// Triggered in response to desired app replicas > actual app replicas
	Status_DEPLOYMENT_STATUS_SCALING_UP Status_DeploymentStatus = 8
	// Triggered in response to desired app replicas < actual app replicas
	Status_DEPLOYMENT_STATUS_SCALING_DOWN Status_DeploymentStatus = 9
	// Triggered in response to the latest app spec changing
	Status_DEPLOYMENT_STATUS_DEPLOYING Status_DeploymentStatus = 10
)

// Enum value maps for Status_DeploymentStatus.
var (
	Status_DeploymentStatus_name = map[int32]string{
		0:  "DEPLOYMENT_STATUS_UNSPECIFIED",
		1:  "DEPLOYMENT_STATUS_UNASSIGNED",
		2:  "DEPLOYMENT_STATUS_ASSIGNED",
		3:  "DEPLOYMENT_STATUS_PENDING",
		4:  "DEPLOYMENT_STATUS_STOPPED",
		5:  "DEPLOYMENT_STATUS_STARTED",
		6:  "DEPLOYMENT_STATUS_FAILED",
		7:  "DEPLOYMENT_STATUS_ACTIVE",
		8:  "DEPLOYMENT_STATUS_SCALING_UP",
		9:  "DEPLOYMENT_STATUS_SCALING_DOWN",
		10: "DEPLOYMENT_STATUS_DEPLOYING",
	}
	Status_DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UNSPECIFIED":  0,
		"DEPLOYMENT_STATUS_UNASSIGNED":   1,
		"DEPLOYMENT_STATUS_ASSIGNED":     2,
		"DEPLOYMENT_STATUS_PENDING":      3,
		"DEPLOYMENT_STATUS_STOPPED":      4,
		"DEPLOYMENT_STATUS_STARTED":      5,
		"DEPLOYMENT_STATUS_FAILED":       6,
		"DEPLOYMENT_STATUS_ACTIVE":       7,
		"DEPLOYMENT_STATUS_SCALING_UP":   8,
		"DEPLOYMENT_STATUS_SCALING_DOWN": 9,
		"DEPLOYMENT_STATUS_DEPLOYING":    10,
	}
)

func (x Status_DeploymentStatus) Enum() *Status_DeploymentStatus {
	p := new(Status_DeploymentStatus)
	*p = x
	return p
}

func (x Status_DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl2_app_app_definition_proto_enumTypes[0].Descriptor()
}

func (Status_DeploymentStatus) Type() protoreflect.EnumType {
	return &file_flyteidl2_app_app_definition_proto_enumTypes[0]
}

func (x Status_DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_DeploymentStatus.Descriptor instead.
func (Status_DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{5, 0}
}

// Enum for deployment status of the app.
type Spec_DesiredState int32

const (
	// Unspecified state
	Spec_DESIRED_STATE_UNSPECIFIED Spec_DesiredState = 0
	// Deployment is disabled.
	Spec_DESIRED_STATE_STOPPED Spec_DesiredState = 1
	// Deployment is completed. Please use DESIRED_STATE_ACTIVE instead.
	//
	// Deprecated: Marked as deprecated in flyteidl2/app/app_definition.proto.
	Spec_DESIRED_STATE_STARTED Spec_DesiredState = 2
	// Deployment is completed.
	Spec_DESIRED_STATE_ACTIVE Spec_DesiredState = 3
)

// Enum value maps for Spec_DesiredState.
var (
	Spec_DesiredState_name = map[int32]string{
		0: "DESIRED_STATE_UNSPECIFIED",
		1: "DESIRED_STATE_STOPPED",
		2: "DESIRED_STATE_STARTED",
		3: "DESIRED_STATE_ACTIVE",
	}
	Spec_DesiredState_value = map[string]int32{
		"DESIRED_STATE_UNSPECIFIED": 0,
		"DESIRED_STATE_STOPPED":     1,
		"DESIRED_STATE_STARTED":     2,
		"DESIRED_STATE_ACTIVE":      3,
	}
)

func (x Spec_DesiredState) Enum() *Spec_DesiredState {
	p := new(Spec_DesiredState)
	*p = x
	return p
}

func (x Spec_DesiredState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Spec_DesiredState) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl2_app_app_definition_proto_enumTypes[1].Descriptor()
}

func (Spec_DesiredState) Type() protoreflect.EnumType {
	return &file_flyteidl2_app_app_definition_proto_enumTypes[1]
}

func (x Spec_DesiredState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Spec_DesiredState.Descriptor instead.
func (Spec_DesiredState) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{8, 0}
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Org that the app belongs to.
	Org string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	// Project that the app belongs to.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Domain that the app belongs to.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Name that the user provided for the app.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{0}
}

func (x *Identifier) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *Identifier) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Identifier) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Identifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the app.
	Id *Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Revision of the app object.
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	// Labels for the app.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{1}
}

func (x *Meta) GetId() *Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Meta) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Meta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// For internal usage only. This message is used to wrap the app message with the host.
type AppWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*AppWrapper_App
	//	*AppWrapper_AppId
	Payload isAppWrapper_Payload `protobuf_oneof:"payload"`
}

func (x *AppWrapper) Reset() {
	*x = AppWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWrapper) ProtoMessage() {}

func (x *AppWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWrapper.ProtoReflect.Descriptor instead.
func (*AppWrapper) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{2}
}

func (x *AppWrapper) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (m *AppWrapper) GetPayload() isAppWrapper_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AppWrapper) GetApp() *App {
	if x, ok := x.GetPayload().(*AppWrapper_App); ok {
		return x.App
	}
	return nil
}

func (x *AppWrapper) GetAppId() *Identifier {
	if x, ok := x.GetPayload().(*AppWrapper_AppId); ok {
		return x.AppId
	}
	return nil
}

type isAppWrapper_Payload interface {
	isAppWrapper_Payload()
}

type AppWrapper_App struct {
	App *App `protobuf:"bytes,2,opt,name=app,proto3,oneof"`
}

type AppWrapper_AppId struct {
	AppId *Identifier `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3,oneof"`
}

func (*AppWrapper_App) isAppWrapper_Payload() {}

func (*AppWrapper_AppId) isAppWrapper_Payload() {}

// Represents an app with its specification and status.
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the app.
	Metadata *Meta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Specification of the app.
	Spec *Spec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Status of the app.
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{3}
}

func (x *App) GetMetadata() *Meta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *App) GetSpec() *Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *App) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Represents the condition of an app.
type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Last transition time of the condition.
	LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
	// Deployment status of the app.
	DeploymentStatus Status_DeploymentStatus `protobuf:"varint,2,opt,name=deployment_status,json=deploymentStatus,proto3,enum=flyteidl2.app.Status_DeploymentStatus" json:"deployment_status,omitempty"`
	// Message for the condition.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Revision the Condition applies to. This can be used by consumers
	// to introspect and visualize which revisions are up.
	Revision uint64 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// Actor is the principal that caused the condition.
	Actor *common.EnrichedIdentity `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{4}
}

func (x *Condition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

func (x *Condition) GetDeploymentStatus() Status_DeploymentStatus {
	if x != nil {
		return x.DeploymentStatus
	}
	return Status_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Condition) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Condition) GetActor() *common.EnrichedIdentity {
	if x != nil {
		return x.Actor
	}
	return nil
}

// Represents the status of an app.
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignedCluster string `protobuf:"bytes,1,opt,name=assigned_cluster,json=assignedCluster,proto3" json:"assigned_cluster,omitempty"`
	// Current number of replicas.
	CurrentReplicas uint32 `protobuf:"varint,2,opt,name=current_replicas,json=currentReplicas,proto3" json:"current_replicas,omitempty"`
	// List of public URLs for the app.
	Ingress *Ingress `protobuf:"bytes,3,opt,name=ingress,proto3" json:"ingress,omitempty"`
	// CreatedAt is the time when the app was first created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// LastUpdatedAt is the time when the app was last updated
	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	// Conditions for the app.
	Conditions []*Condition `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// LeaseExpiration refers to how long the app is leased to a cluster for it to start processing it. If the lease
	// period expires, the cluster will no longer be allowed to update this app and another cluster can pick it up.
	LeaseExpiration *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=lease_expiration,json=leaseExpiration,proto3" json:"lease_expiration,omitempty"`
	// K8sMetadata contains metadata about the app in the K8s cluster.
	K8SMetadata        *K8SMetadata        `protobuf:"bytes,8,opt,name=k8s_metadata,json=k8sMetadata,proto3" json:"k8s_metadata,omitempty"`
	MaterializedInputs *MaterializedInputs `protobuf:"bytes,9,opt,name=materialized_inputs,json=materializedInputs,proto3" json:"materialized_inputs,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{5}
}

func (x *Status) GetAssignedCluster() string {
	if x != nil {
		return x.AssignedCluster
	}
	return ""
}

func (x *Status) GetCurrentReplicas() uint32 {
	if x != nil {
		return x.CurrentReplicas
	}
	return 0
}

func (x *Status) GetIngress() *Ingress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *Status) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Status) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *Status) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Status) GetLeaseExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.LeaseExpiration
	}
	return nil
}

func (x *Status) GetK8SMetadata() *K8SMetadata {
	if x != nil {
		return x.K8SMetadata
	}
	return nil
}

func (x *Status) GetMaterializedInputs() *MaterializedInputs {
	if x != nil {
		return x.MaterializedInputs
	}
	return nil
}

type K8SMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace points to the namespace the app is deployed in.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8SMetadata) Reset() {
	*x = K8SMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SMetadata) ProtoMessage() {}

func (x *K8SMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SMetadata.ProtoReflect.Descriptor instead.
func (*K8SMetadata) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{6}
}

func (x *K8SMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Ingress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public URL of the app.
	PublicUrl string `protobuf:"bytes,1,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	// Canonical name (CNAME) URL of the app.
	CnameUrl string `protobuf:"bytes,2,opt,name=cname_url,json=cnameUrl,proto3" json:"cname_url,omitempty"`
	// VPC URL of the app.
	VpcUrl string `protobuf:"bytes,3,opt,name=vpc_url,json=vpcUrl,proto3" json:"vpc_url,omitempty"`
}

func (x *Ingress) Reset() {
	*x = Ingress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingress) ProtoMessage() {}

func (x *Ingress) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingress.ProtoReflect.Descriptor instead.
func (*Ingress) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{7}
}

func (x *Ingress) GetPublicUrl() string {
	if x != nil {
		return x.PublicUrl
	}
	return ""
}

func (x *Ingress) GetCnameUrl() string {
	if x != nil {
		return x.CnameUrl
	}
	return ""
}

func (x *Ingress) GetVpcUrl() string {
	if x != nil {
		return x.VpcUrl
	}
	return ""
}

// Represents the specification of an app.
type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Payload of the app, which can be either a container or a K8s pod.
	//
	// Types that are assignable to AppPayload:
	//
	//	*Spec_Container
	//	*Spec_Pod
	AppPayload isSpec_AppPayload `protobuf_oneof:"app_payload"`
	// Autoscaling configuration for the app.
	Autoscaling *AutoscalingConfig `protobuf:"bytes,3,opt,name=autoscaling,proto3" json:"autoscaling,omitempty"`
	// Ingress configuration for the app.
	Ingress *IngressConfig `protobuf:"bytes,4,opt,name=ingress,proto3" json:"ingress,omitempty"`
	// Deployment status of the app.
	DesiredState Spec_DesiredState `protobuf:"varint,5,opt,name=desired_state,json=desiredState,proto3,enum=flyteidl2.app.Spec_DesiredState" json:"desired_state,omitempty"`
	// ClusterPool to place this app on. By default it'll use the default cluster pool.
	ClusterPool string `protobuf:"bytes,6,opt,name=cluster_pool,json=clusterPool,proto3" json:"cluster_pool,omitempty"`
	// Set of image specifications for the app.
	Images *ImageSpecSet `protobuf:"bytes,7,opt,name=images,proto3" json:"images,omitempty"`
	// security_context encapsulates security attributes requested to run this task.
	SecurityContext *SecurityContext `protobuf:"bytes,8,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	// Encapsulates all non-standard resources, not captured by
	// v1.ResourceRequirements, to allocate to a task.
	ExtendedResources *core.ExtendedResources `protobuf:"bytes,9,opt,name=extended_resources,json=extendedResources,proto3" json:"extended_resources,omitempty"`
	// Runtime metadata for the app.
	RuntimeMetadata *common.RuntimeMetadata `protobuf:"bytes,10,opt,name=runtime_metadata,json=runtimeMetadata,proto3" json:"runtime_metadata,omitempty"`
	// Profile of the app.
	Profile *Profile `protobuf:"bytes,11,opt,name=profile,proto3" json:"profile,omitempty"`
	// Creator of the app is the first principal that provisioned this app. Other principals may
	// interact with the app by updating its spec or stopping/starting it.
	Creator *common.EnrichedIdentity `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
	// Inputs of the app.
	Inputs *InputList `protobuf:"bytes,13,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Links  []*Link    `protobuf:"bytes,14,rep,name=links,proto3" json:"links,omitempty"`
	// Timeout configuration for the app.
	Timeouts *TimeoutConfig `protobuf:"bytes,15,opt,name=timeouts,proto3" json:"timeouts,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{8}
}

func (m *Spec) GetAppPayload() isSpec_AppPayload {
	if m != nil {
		return m.AppPayload
	}
	return nil
}

func (x *Spec) GetContainer() *core.Container {
	if x, ok := x.GetAppPayload().(*Spec_Container); ok {
		return x.Container
	}
	return nil
}

func (x *Spec) GetPod() *core.K8SPod {
	if x, ok := x.GetAppPayload().(*Spec_Pod); ok {
		return x.Pod
	}
	return nil
}

func (x *Spec) GetAutoscaling() *AutoscalingConfig {
	if x != nil {
		return x.Autoscaling
	}
	return nil
}

func (x *Spec) GetIngress() *IngressConfig {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *Spec) GetDesiredState() Spec_DesiredState {
	if x != nil {
		return x.DesiredState
	}
	return Spec_DESIRED_STATE_UNSPECIFIED
}

func (x *Spec) GetClusterPool() string {
	if x != nil {
		return x.ClusterPool
	}
	return ""
}

func (x *Spec) GetImages() *ImageSpecSet {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Spec) GetSecurityContext() *SecurityContext {
	if x != nil {
		return x.SecurityContext
	}
	return nil
}

func (x *Spec) GetExtendedResources() *core.ExtendedResources {
	if x != nil {
		return x.ExtendedResources
	}
	return nil
}

func (x *Spec) GetRuntimeMetadata() *common.RuntimeMetadata {
	if x != nil {
		return x.RuntimeMetadata
	}
	return nil
}

func (x *Spec) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Spec) GetCreator() *common.EnrichedIdentity {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *Spec) GetInputs() *InputList {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Spec) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Spec) GetTimeouts() *TimeoutConfig {
	if x != nil {
		return x.Timeouts
	}
	return nil
}

type isSpec_AppPayload interface {
	isSpec_AppPayload()
}

type Spec_Container struct {
	// Container payload.
	Container *core.Container `protobuf:"bytes,1,opt,name=container,proto3,oneof"`
}

type Spec_Pod struct {
	// K8s pod payload.
	Pod *core.K8SPod `protobuf:"bytes,2,opt,name=pod,proto3,oneof"`
}

func (*Spec_Container) isSpec_AppPayload() {}

func (*Spec_Pod) isSpec_AppPayload() {}

// Represents a link to an external resource (Arize project link, W&B dashboard, etc)
type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL of the external service.
	// This can be an absolute or relative path.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Human readable name of the external service.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Whether the path is absolute (default) or relative.
	IsRelative bool `protobuf:"varint,3,opt,name=is_relative,json=isRelative,proto3" json:"is_relative,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{9}
}

func (x *Link) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Link) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Link) GetIsRelative() bool {
	if x != nil {
		return x.IsRelative
	}
	return false
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a unique identifier of the input within the list of inputs of the app
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Input_StringValue
	//	*Input_ArtifactQuery
	//	*Input_ArtifactId
	//	*Input_AppId
	Value isInput_Value `protobuf_oneof:"value"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{10}
}

func (x *Input) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Input) GetValue() isInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Input) GetStringValue() string {
	if x, ok := x.GetValue().(*Input_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Input) GetArtifactQuery() *core.ArtifactQuery {
	if x, ok := x.GetValue().(*Input_ArtifactQuery); ok {
		return x.ArtifactQuery
	}
	return nil
}

func (x *Input) GetArtifactId() *core.ArtifactID {
	if x, ok := x.GetValue().(*Input_ArtifactId); ok {
		return x.ArtifactId
	}
	return nil
}

func (x *Input) GetAppId() *Identifier {
	if x, ok := x.GetValue().(*Input_AppId); ok {
		return x.AppId
	}
	return nil
}

type isInput_Value interface {
	isInput_Value()
}

type Input_StringValue struct {
	// StringValue is a plain string value for the input
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Input_ArtifactQuery struct {
	// ArtifactQuery is that should result in a single artifact that will be used as the input to the app at runtime.
	// The artifact will be pinned at the time of the app creation.
	ArtifactQuery *core.ArtifactQuery `protobuf:"bytes,3,opt,name=artifact_query,json=artifactQuery,proto3,oneof"`
}

type Input_ArtifactId struct {
	// ArtifactId is an identifier of an artifact that will be used as the input to the app at runtime.
	ArtifactId *core.ArtifactID `protobuf:"bytes,4,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

type Input_AppId struct {
	// ID of the app.
	AppId *Identifier `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3,oneof"`
}

func (*Input_StringValue) isInput_Value() {}

func (*Input_ArtifactQuery) isInput_Value() {}

func (*Input_ArtifactId) isInput_Value() {}

func (*Input_AppId) isInput_Value() {}

type MaterializedInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MaterializedInput `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Revision of the app object that we materialized the input for.
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *MaterializedInputs) Reset() {
	*x = MaterializedInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterializedInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterializedInputs) ProtoMessage() {}

func (x *MaterializedInputs) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterializedInputs.ProtoReflect.Descriptor instead.
func (*MaterializedInputs) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{11}
}

func (x *MaterializedInputs) GetItems() []*MaterializedInput {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MaterializedInputs) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type MaterializedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a unique identifier of the input within the list of inputs of the app
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//
	//	*MaterializedInput_ArtifactId
	Value isMaterializedInput_Value `protobuf_oneof:"value"`
}

func (x *MaterializedInput) Reset() {
	*x = MaterializedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterializedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterializedInput) ProtoMessage() {}

func (x *MaterializedInput) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterializedInput.ProtoReflect.Descriptor instead.
func (*MaterializedInput) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{12}
}

func (x *MaterializedInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *MaterializedInput) GetValue() isMaterializedInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *MaterializedInput) GetArtifactId() *core.ArtifactID {
	if x, ok := x.GetValue().(*MaterializedInput_ArtifactId); ok {
		return x.ArtifactId
	}
	return nil
}

type isMaterializedInput_Value interface {
	isMaterializedInput_Value()
}

type MaterializedInput_ArtifactId struct {
	// ArtifactId is an identifier of an artifact that will be used as the input to the app at runtime.
	ArtifactId *core.ArtifactID `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

func (*MaterializedInput_ArtifactId) isMaterializedInput_Value() {}

// InputList is a list of dependencies for the app.
type InputList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Items is the list of inputs to fulfil for the app.
	Items []*Input `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InputList) Reset() {
	*x = InputList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputList) ProtoMessage() {}

func (x *InputList) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputList.ProtoReflect.Descriptor instead.
func (*InputList) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{13}
}

func (x *InputList) GetItems() []*Input {
	if x != nil {
		return x.Items
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App Type (e.g. FastAPI, Flask, VLLM, NIM etc.)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Friendly name of the app.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Short description of the app.
	ShortDescription string `protobuf:"bytes,3,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// Icon URL of the app.
	IconUrl string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{14}
}

func (x *Profile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Profile) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

// SecurityContext holds security attributes that apply to tasks.
type SecurityContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// run_as encapsulates the identity a pod should run as. If the task fills in multiple fields here, it'll be up to the
	// backend plugin to choose the appropriate identity for the execution engine the task will run on.
	RunAs *core.Identity `protobuf:"bytes,1,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// secrets indicate the list of secrets the task needs in order to proceed. Secrets will be mounted/passed to the
	// pod as it starts. If the plugin responsible for kicking of the task will not run it on a flyte cluster (e.g. AWS
	// Batch), it's the responsibility of the plugin to fetch the secret (which means propeller identity will need access
	// to the secret) and to pass it to the remote execution engine.
	Secrets []*core.Secret `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"`
	// AllowAnonymous indicates if the app should be accessible without authentication. This assumes the app will handle
	// its own authentication or that it's a public app.
	AllowAnonymous bool `protobuf:"varint,5,opt,name=allow_anonymous,json=allowAnonymous,proto3" json:"allow_anonymous,omitempty"`
}

func (x *SecurityContext) Reset() {
	*x = SecurityContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityContext) ProtoMessage() {}

func (x *SecurityContext) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityContext.ProtoReflect.Descriptor instead.
func (*SecurityContext) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{15}
}

func (x *SecurityContext) GetRunAs() *core.Identity {
	if x != nil {
		return x.RunAs
	}
	return nil
}

func (x *SecurityContext) GetSecrets() []*core.Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *SecurityContext) GetAllowAnonymous() bool {
	if x != nil {
		return x.AllowAnonymous
	}
	return false
}

type ImageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tag of the image.
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// URL of the build job for the image.
	BuildJobUrl string `protobuf:"bytes,2,opt,name=build_job_url,json=buildJobUrl,proto3" json:"build_job_url,omitempty"`
}

func (x *ImageSpec) Reset() {
	*x = ImageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpec) ProtoMessage() {}

func (x *ImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpec.ProtoReflect.Descriptor instead.
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{16}
}

func (x *ImageSpec) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ImageSpec) GetBuildJobUrl() string {
	if x != nil {
		return x.BuildJobUrl
	}
	return ""
}

type ImageSpecSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of image specifications.
	Images []*ImageSpec `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImageSpecSet) Reset() {
	*x = ImageSpecSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSpecSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpecSet) ProtoMessage() {}

func (x *ImageSpecSet) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpecSet.ProtoReflect.Descriptor instead.
func (*ImageSpecSet) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{17}
}

func (x *ImageSpecSet) GetImages() []*ImageSpec {
	if x != nil {
		return x.Images
	}
	return nil
}

// Represents the ingress configuration of an app.
type IngressConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates if the app should be private.
	Private bool `protobuf:"varint,1,opt,name=private,proto3" json:"private,omitempty"`
	// Subdomain for the app. If not specified, a random subdomain will be generated.
	Subdomain string `protobuf:"bytes,2,opt,name=subdomain,proto3" json:"subdomain,omitempty"`
	// Canonical name (CNAME) for the app.
	Cname string `protobuf:"bytes,3,opt,name=cname,proto3" json:"cname,omitempty"`
}

func (x *IngressConfig) Reset() {
	*x = IngressConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressConfig) ProtoMessage() {}

func (x *IngressConfig) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressConfig.ProtoReflect.Descriptor instead.
func (*IngressConfig) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{18}
}

func (x *IngressConfig) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *IngressConfig) GetSubdomain() string {
	if x != nil {
		return x.Subdomain
	}
	return ""
}

func (x *IngressConfig) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

// Represents the autoscaling configuration of an app.
type AutoscalingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Configuration for the number of replicas.
	Replicas *Replicas `protobuf:"bytes,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The period for scaling down the object.
	ScaledownPeriod *durationpb.Duration `protobuf:"bytes,2,opt,name=scaledown_period,json=scaledownPeriod,proto3" json:"scaledown_period,omitempty"`
	// Metric for scaling the app.
	ScalingMetric *ScalingMetric `protobuf:"bytes,3,opt,name=scaling_metric,json=scalingMetric,proto3" json:"scaling_metric,omitempty"`
}

func (x *AutoscalingConfig) Reset() {
	*x = AutoscalingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingConfig) ProtoMessage() {}

func (x *AutoscalingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingConfig.ProtoReflect.Descriptor instead.
func (*AutoscalingConfig) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{19}
}

func (x *AutoscalingConfig) GetReplicas() *Replicas {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *AutoscalingConfig) GetScaledownPeriod() *durationpb.Duration {
	if x != nil {
		return x.ScaledownPeriod
	}
	return nil
}

func (x *AutoscalingConfig) GetScalingMetric() *ScalingMetric {
	if x != nil {
		return x.ScalingMetric
	}
	return nil
}

// ScalingMetric allows different scaling strategies for the app.
// See: https://knative.dev/docs/serving/autoscaling/autoscaling-metrics/
type ScalingMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Metric:
	//
	//	*ScalingMetric_RequestRate
	//	*ScalingMetric_Concurrency
	Metric isScalingMetric_Metric `protobuf_oneof:"metric"`
}

func (x *ScalingMetric) Reset() {
	*x = ScalingMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalingMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingMetric) ProtoMessage() {}

func (x *ScalingMetric) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingMetric.ProtoReflect.Descriptor instead.
func (*ScalingMetric) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{20}
}

func (m *ScalingMetric) GetMetric() isScalingMetric_Metric {
	if m != nil {
		return m.Metric
	}
	return nil
}

func (x *ScalingMetric) GetRequestRate() *RequestRate {
	if x, ok := x.GetMetric().(*ScalingMetric_RequestRate); ok {
		return x.RequestRate
	}
	return nil
}

func (x *ScalingMetric) GetConcurrency() *Concurrency {
	if x, ok := x.GetMetric().(*ScalingMetric_Concurrency); ok {
		return x.Concurrency
	}
	return nil
}

type isScalingMetric_Metric interface {
	isScalingMetric_Metric()
}

type ScalingMetric_RequestRate struct {
	// Configuration for scaling based on request rate.
	RequestRate *RequestRate `protobuf:"bytes,1,opt,name=request_rate,json=requestRate,proto3,oneof"`
}

type ScalingMetric_Concurrency struct {
	// Configuration for scaling based on concurrency.
	Concurrency *Concurrency `protobuf:"bytes,2,opt,name=concurrency,proto3,oneof"`
}

func (*ScalingMetric_RequestRate) isScalingMetric_Metric() {}

func (*ScalingMetric_Concurrency) isScalingMetric_Metric() {}

// This section enables scaling based on the request concurrency. Concurrency calculates how many
// requests are being processed at the same time. This is useful for apps that take longer to process
// requests (e.g. seconds)
// The autoscaler has a default window of 60 seconds to calculate the concurrency value. However, it has
// panic mode that kicks in if the request rate jumps to 2x its value within 6 seconds. If that's
// triggered, it'll start scaling up immediately instead of waiting for the full 60 seconds.
type Concurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the target value for the scaling configuration.
	// default=100
	TargetValue uint32 `protobuf:"varint,1,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`
}

func (x *Concurrency) Reset() {
	*x = Concurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concurrency) ProtoMessage() {}

func (x *Concurrency) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concurrency.ProtoReflect.Descriptor instead.
func (*Concurrency) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{21}
}

func (x *Concurrency) GetTargetValue() uint32 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

// RequestRate enables scaling based on the request rate. Request rate calculates how many requests
// the app is receiving per second.
// The autoscaler has a default window of 60 seconds to calculate the request rate. However, it has
// panic mode that kicks in if the request rate jumps to 2x its value within 6 seconds. If that's
// triggered, it'll start scaling up immediately instead of waiting for the full 60 seconds.
type RequestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the target value for the scaling configuration.
	// default=100
	TargetValue uint32 `protobuf:"varint,1,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`
}

func (x *RequestRate) Reset() {
	*x = RequestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRate) ProtoMessage() {}

func (x *RequestRate) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRate.ProtoReflect.Descriptor instead.
func (*RequestRate) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{22}
}

func (x *RequestRate) GetTargetValue() uint32 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

// Represents the configuration for the number of replicas.
type Replicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum number of replicas.
	Min uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum number of replicas.
	Max uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Replicas) Reset() {
	*x = Replicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replicas) ProtoMessage() {}

func (x *Replicas) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replicas.ProtoReflect.Descriptor instead.
func (*Replicas) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{23}
}

func (x *Replicas) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Replicas) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type TimeoutConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the maximum duration that the request instance
	// is allowed to respond to a request. If unspecified, a system default will
	// be provided.
	// default=300s
	RequestTimeout *durationpb.Duration `protobuf:"bytes,1,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
}

func (x *TimeoutConfig) Reset() {
	*x = TimeoutConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_app_app_definition_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeoutConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutConfig) ProtoMessage() {}

func (x *TimeoutConfig) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_app_app_definition_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutConfig.ProtoReflect.Descriptor instead.
func (*TimeoutConfig) Descriptor() ([]byte, []int) {
	return file_flyteidl2_app_app_definition_proto_rawDescGZIP(), []int{24}
}

func (x *TimeoutConfig) GetRequestTimeout() *durationpb.Duration {
	if x != nil {
		return x.RequestTimeout
	}
	return nil
}

var File_flyteidl2_app_app_definition_proto protoreflect.FileDescriptor

var file_flyteidl2_app_app_definition_proto_rawDesc = []byte{
	0x0a, 0x22, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x61, 0x70, 0x70, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x4e, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xba, 0x48, 0x37, 0x72,
	0x35, 0x10, 0x01, 0x18, 0x1e, 0x32, 0x2f, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x28, 0x3f, 0x3a, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x2d, 0x5d, 0x7b, 0x30, 0x2c, 0x36, 0x31, 0x7d, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a,
	0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32,
	0x02, 0x28, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x87, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x41, 0x70, 0x70, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x32, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x03,
	0x41, 0x70, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa7, 0x02, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x14, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02,
	0x28, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xaa, 0x07, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x10,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x12, 0x30, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x6b, 0x38, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x4b, 0x38, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6b, 0x38, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x52, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0xfb, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x45,
	0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a,
	0x1c, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1d,
	0x0a, 0x19, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x12, 0x21, 0x0a,
	0x19, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x02, 0x08, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1c,
	0x0a, 0x18, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x08, 0x12, 0x22,
	0x0a, 0x1e, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x09, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x49, 0x4e,
	0x47, 0x10, 0x0a, 0x22, 0x2b, 0x0a, 0x0b, 0x4b, 0x38, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0xd8, 0x01, 0x01, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x09, 0x63, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0xd8, 0x01, 0x01, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x08, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x24, 0x0a, 0x07, 0x76, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd8, 0x01, 0x01, 0x72, 0x03, 0x88, 0x01, 0x01,
	0x52, 0x06, 0x76, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x22, 0x94, 0x08, 0x0a, 0x04, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x03,
	0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x50, 0x6f,
	0x64, 0x48, 0x00, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0b, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x07,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x33,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x50,
	0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x11, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x4c, 0x0a, 0x10, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x15, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x42, 0x14, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22,
	0x5a, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x05,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x46, 0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x71, 0x0a, 0x12, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x32, 0x02, 0x28, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7f,
	0x0a, 0x11, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49,
	0x44, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x42,
	0x0e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22,
	0x37, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x11,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64,
	0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0xa9, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x72, 0x75, 0x6e,
	0x41, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x41, 0x0a, 0x09, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x55, 0x72, 0x6c, 0x22, 0x40, 0x0a, 0x0c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5d,
	0x0a, 0x0d, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd3, 0x01,
	0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x43,
	0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0f, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28, 0x00,
	0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a,
	0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22,
	0x62, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x51, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0xaa, 0x01, 0x07, 0x22, 0x03, 0x08, 0x90,
	0x1c, 0x32, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x42, 0xb1, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x42, 0x12, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50,
	0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2f, 0x61, 0x70, 0x70, 0xa2, 0x02, 0x03, 0x46, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x41, 0x70, 0x70, 0xca, 0x02, 0x0d, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x41, 0x70, 0x70, 0xe2, 0x02, 0x19, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x3a, 0x3a, 0x41, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl2_app_app_definition_proto_rawDescOnce sync.Once
	file_flyteidl2_app_app_definition_proto_rawDescData = file_flyteidl2_app_app_definition_proto_rawDesc
)

func file_flyteidl2_app_app_definition_proto_rawDescGZIP() []byte {
	file_flyteidl2_app_app_definition_proto_rawDescOnce.Do(func() {
		file_flyteidl2_app_app_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_app_app_definition_proto_rawDescData)
	})
	return file_flyteidl2_app_app_definition_proto_rawDescData
}

var file_flyteidl2_app_app_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_flyteidl2_app_app_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_flyteidl2_app_app_definition_proto_goTypes = []interface{}{
	(Status_DeploymentStatus)(0),    // 0: flyteidl2.app.Status.DeploymentStatus
	(Spec_DesiredState)(0),          // 1: flyteidl2.app.Spec.DesiredState
	(*Identifier)(nil),              // 2: flyteidl2.app.Identifier
	(*Meta)(nil),                    // 3: flyteidl2.app.Meta
	(*AppWrapper)(nil),              // 4: flyteidl2.app.AppWrapper
	(*App)(nil),                     // 5: flyteidl2.app.App
	(*Condition)(nil),               // 6: flyteidl2.app.Condition
	(*Status)(nil),                  // 7: flyteidl2.app.Status
	(*K8SMetadata)(nil),             // 8: flyteidl2.app.K8sMetadata
	(*Ingress)(nil),                 // 9: flyteidl2.app.Ingress
	(*Spec)(nil),                    // 10: flyteidl2.app.Spec
	(*Link)(nil),                    // 11: flyteidl2.app.Link
	(*Input)(nil),                   // 12: flyteidl2.app.Input
	(*MaterializedInputs)(nil),      // 13: flyteidl2.app.MaterializedInputs
	(*MaterializedInput)(nil),       // 14: flyteidl2.app.MaterializedInput
	(*InputList)(nil),               // 15: flyteidl2.app.InputList
	(*Profile)(nil),                 // 16: flyteidl2.app.Profile
	(*SecurityContext)(nil),         // 17: flyteidl2.app.SecurityContext
	(*ImageSpec)(nil),               // 18: flyteidl2.app.ImageSpec
	(*ImageSpecSet)(nil),            // 19: flyteidl2.app.ImageSpecSet
	(*IngressConfig)(nil),           // 20: flyteidl2.app.IngressConfig
	(*AutoscalingConfig)(nil),       // 21: flyteidl2.app.AutoscalingConfig
	(*ScalingMetric)(nil),           // 22: flyteidl2.app.ScalingMetric
	(*Concurrency)(nil),             // 23: flyteidl2.app.Concurrency
	(*RequestRate)(nil),             // 24: flyteidl2.app.RequestRate
	(*Replicas)(nil),                // 25: flyteidl2.app.Replicas
	(*TimeoutConfig)(nil),           // 26: flyteidl2.app.TimeoutConfig
	nil,                             // 27: flyteidl2.app.Meta.LabelsEntry
	(*timestamppb.Timestamp)(nil),   // 28: google.protobuf.Timestamp
	(*common.EnrichedIdentity)(nil), // 29: flyteidl2.common.EnrichedIdentity
	(*core.Container)(nil),          // 30: flyteidl2.core.Container
	(*core.K8SPod)(nil),             // 31: flyteidl2.core.K8sPod
	(*core.ExtendedResources)(nil),  // 32: flyteidl2.core.ExtendedResources
	(*common.RuntimeMetadata)(nil),  // 33: flyteidl2.common.RuntimeMetadata
	(*core.ArtifactQuery)(nil),      // 34: flyteidl2.core.ArtifactQuery
	(*core.ArtifactID)(nil),         // 35: flyteidl2.core.ArtifactID
	(*core.Identity)(nil),           // 36: flyteidl2.core.Identity
	(*core.Secret)(nil),             // 37: flyteidl2.core.Secret
	(*durationpb.Duration)(nil),     // 38: google.protobuf.Duration
}
var file_flyteidl2_app_app_definition_proto_depIdxs = []int32{
	2,  // 0: flyteidl2.app.Meta.id:type_name -> flyteidl2.app.Identifier
	27, // 1: flyteidl2.app.Meta.labels:type_name -> flyteidl2.app.Meta.LabelsEntry
	5,  // 2: flyteidl2.app.AppWrapper.app:type_name -> flyteidl2.app.App
	2,  // 3: flyteidl2.app.AppWrapper.app_id:type_name -> flyteidl2.app.Identifier
	3,  // 4: flyteidl2.app.App.metadata:type_name -> flyteidl2.app.Meta
	10, // 5: flyteidl2.app.App.spec:type_name -> flyteidl2.app.Spec
	7,  // 6: flyteidl2.app.App.status:type_name -> flyteidl2.app.Status
	28, // 7: flyteidl2.app.Condition.last_transition_time:type_name -> google.protobuf.Timestamp
	0,  // 8: flyteidl2.app.Condition.deployment_status:type_name -> flyteidl2.app.Status.DeploymentStatus
	29, // 9: flyteidl2.app.Condition.actor:type_name -> flyteidl2.common.EnrichedIdentity
	9,  // 10: flyteidl2.app.Status.ingress:type_name -> flyteidl2.app.Ingress
	28, // 11: flyteidl2.app.Status.created_at:type_name -> google.protobuf.Timestamp
	28, // 12: flyteidl2.app.Status.last_updated_at:type_name -> google.protobuf.Timestamp
	6,  // 13: flyteidl2.app.Status.conditions:type_name -> flyteidl2.app.Condition
	28, // 14: flyteidl2.app.Status.lease_expiration:type_name -> google.protobuf.Timestamp
	8,  // 15: flyteidl2.app.Status.k8s_metadata:type_name -> flyteidl2.app.K8sMetadata
	13, // 16: flyteidl2.app.Status.materialized_inputs:type_name -> flyteidl2.app.MaterializedInputs
	30, // 17: flyteidl2.app.Spec.container:type_name -> flyteidl2.core.Container
	31, // 18: flyteidl2.app.Spec.pod:type_name -> flyteidl2.core.K8sPod
	21, // 19: flyteidl2.app.Spec.autoscaling:type_name -> flyteidl2.app.AutoscalingConfig
	20, // 20: flyteidl2.app.Spec.ingress:type_name -> flyteidl2.app.IngressConfig
	1,  // 21: flyteidl2.app.Spec.desired_state:type_name -> flyteidl2.app.Spec.DesiredState
	19, // 22: flyteidl2.app.Spec.images:type_name -> flyteidl2.app.ImageSpecSet
	17, // 23: flyteidl2.app.Spec.security_context:type_name -> flyteidl2.app.SecurityContext
	32, // 24: flyteidl2.app.Spec.extended_resources:type_name -> flyteidl2.core.ExtendedResources
	33, // 25: flyteidl2.app.Spec.runtime_metadata:type_name -> flyteidl2.common.RuntimeMetadata
	16, // 26: flyteidl2.app.Spec.profile:type_name -> flyteidl2.app.Profile
	29, // 27: flyteidl2.app.Spec.creator:type_name -> flyteidl2.common.EnrichedIdentity
	15, // 28: flyteidl2.app.Spec.inputs:type_name -> flyteidl2.app.InputList
	11, // 29: flyteidl2.app.Spec.links:type_name -> flyteidl2.app.Link
	26, // 30: flyteidl2.app.Spec.timeouts:type_name -> flyteidl2.app.TimeoutConfig
	34, // 31: flyteidl2.app.Input.artifact_query:type_name -> flyteidl2.core.ArtifactQuery
	35, // 32: flyteidl2.app.Input.artifact_id:type_name -> flyteidl2.core.ArtifactID
	2,  // 33: flyteidl2.app.Input.app_id:type_name -> flyteidl2.app.Identifier
	14, // 34: flyteidl2.app.MaterializedInputs.items:type_name -> flyteidl2.app.MaterializedInput
	35, // 35: flyteidl2.app.MaterializedInput.artifact_id:type_name -> flyteidl2.core.ArtifactID
	12, // 36: flyteidl2.app.InputList.items:type_name -> flyteidl2.app.Input
	36, // 37: flyteidl2.app.SecurityContext.run_as:type_name -> flyteidl2.core.Identity
	37, // 38: flyteidl2.app.SecurityContext.secrets:type_name -> flyteidl2.core.Secret
	18, // 39: flyteidl2.app.ImageSpecSet.images:type_name -> flyteidl2.app.ImageSpec
	25, // 40: flyteidl2.app.AutoscalingConfig.replicas:type_name -> flyteidl2.app.Replicas
	38, // 41: flyteidl2.app.AutoscalingConfig.scaledown_period:type_name -> google.protobuf.Duration
	22, // 42: flyteidl2.app.AutoscalingConfig.scaling_metric:type_name -> flyteidl2.app.ScalingMetric
	24, // 43: flyteidl2.app.ScalingMetric.request_rate:type_name -> flyteidl2.app.RequestRate
	23, // 44: flyteidl2.app.ScalingMetric.concurrency:type_name -> flyteidl2.app.Concurrency
	38, // 45: flyteidl2.app.TimeoutConfig.request_timeout:type_name -> google.protobuf.Duration
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_flyteidl2_app_app_definition_proto_init() }
func file_flyteidl2_app_app_definition_proto_init() {
	if File_flyteidl2_app_app_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_app_app_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterializedInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterializedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageSpecSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalingMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_app_app_definition_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeoutConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flyteidl2_app_app_definition_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AppWrapper_App)(nil),
		(*AppWrapper_AppId)(nil),
	}
	file_flyteidl2_app_app_definition_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Spec_Container)(nil),
		(*Spec_Pod)(nil),
	}
	file_flyteidl2_app_app_definition_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Input_StringValue)(nil),
		(*Input_ArtifactQuery)(nil),
		(*Input_ArtifactId)(nil),
		(*Input_AppId)(nil),
	}
	file_flyteidl2_app_app_definition_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*MaterializedInput_ArtifactId)(nil),
	}
	file_flyteidl2_app_app_definition_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ScalingMetric_RequestRate)(nil),
		(*ScalingMetric_Concurrency)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_app_app_definition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl2_app_app_definition_proto_goTypes,
		DependencyIndexes: file_flyteidl2_app_app_definition_proto_depIdxs,
		EnumInfos:         file_flyteidl2_app_app_definition_proto_enumTypes,
		MessageInfos:      file_flyteidl2_app_app_definition_proto_msgTypes,
	}.Build()
	File_flyteidl2_app_app_definition_proto = out.File
	file_flyteidl2_app_app_definition_proto_rawDesc = nil
	file_flyteidl2_app_app_definition_proto_goTypes = nil
	file_flyteidl2_app_app_definition_proto_depIdxs = nil
}

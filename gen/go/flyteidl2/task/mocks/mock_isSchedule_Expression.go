// Code generated by mockery. DO NOT EDIT.

package task

import mock "github.com/stretchr/testify/mock"

// isSchedule_Expression is an autogenerated mock type for the isSchedule_Expression type
type isSchedule_Expression struct {
	mock.Mock
}

type isSchedule_Expression_Expecter struct {
	mock *mock.Mock
}

func (_m *isSchedule_Expression) EXPECT() *isSchedule_Expression_Expecter {
	return &isSchedule_Expression_Expecter{mock: &_m.Mock}
}

// isSchedule_Expression provides a mock function with no fields
func (_m *isSchedule_Expression) isSchedule_Expression() {
	_m.Called()
}

// isSchedule_Expression_isSchedule_Expression_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isSchedule_Expression'
type isSchedule_Expression_isSchedule_Expression_Call struct {
	*mock.Call
}

// isSchedule_Expression is a helper method to define mock.On call
func (_e *isSchedule_Expression_Expecter) isSchedule_Expression() *isSchedule_Expression_isSchedule_Expression_Call {
	return &isSchedule_Expression_isSchedule_Expression_Call{Call: _e.mock.On("isSchedule_Expression")}
}

func (_c *isSchedule_Expression_isSchedule_Expression_Call) Run(run func()) *isSchedule_Expression_isSchedule_Expression_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isSchedule_Expression_isSchedule_Expression_Call) Return() *isSchedule_Expression_isSchedule_Expression_Call {
	_c.Call.Return()
	return _c
}

func (_c *isSchedule_Expression_isSchedule_Expression_Call) RunAndReturn(run func()) *isSchedule_Expression_isSchedule_Expression_Call {
	_c.Run(run)
	return _c
}

// newIsSchedule_Expression creates a new instance of isSchedule_Expression. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsSchedule_Expression(t interface {
	mock.TestingT
	Cleanup(func())
}) *isSchedule_Expression {
	mock := &isSchedule_Expression{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

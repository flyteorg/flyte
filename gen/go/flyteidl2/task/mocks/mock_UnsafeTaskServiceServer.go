// Code generated by mockery. DO NOT EDIT.

package task

import mock "github.com/stretchr/testify/mock"

// UnsafeTaskServiceServer is an autogenerated mock type for the UnsafeTaskServiceServer type
type UnsafeTaskServiceServer struct {
	mock.Mock
}

type UnsafeTaskServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeTaskServiceServer) EXPECT() *UnsafeTaskServiceServer_Expecter {
	return &UnsafeTaskServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedTaskServiceServer provides a mock function with no fields
func (_m *UnsafeTaskServiceServer) mustEmbedUnimplementedTaskServiceServer() {
	_m.Called()
}

// UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedTaskServiceServer'
type UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedTaskServiceServer is a helper method to define mock.On call
func (_e *UnsafeTaskServiceServer_Expecter) mustEmbedUnimplementedTaskServiceServer() *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call {
	return &UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedTaskServiceServer")}
}

func (_c *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call) Run(run func()) *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call) Return() *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call) RunAndReturn(run func()) *UnsafeTaskServiceServer_mustEmbedUnimplementedTaskServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeTaskServiceServer creates a new instance of UnsafeTaskServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeTaskServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeTaskServiceServer {
	mock := &UnsafeTaskServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

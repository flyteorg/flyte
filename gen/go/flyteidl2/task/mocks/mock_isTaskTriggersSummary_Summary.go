// Code generated by mockery. DO NOT EDIT.

package task

import mock "github.com/stretchr/testify/mock"

// isTaskTriggersSummary_Summary is an autogenerated mock type for the isTaskTriggersSummary_Summary type
type isTaskTriggersSummary_Summary struct {
	mock.Mock
}

type isTaskTriggersSummary_Summary_Expecter struct {
	mock *mock.Mock
}

func (_m *isTaskTriggersSummary_Summary) EXPECT() *isTaskTriggersSummary_Summary_Expecter {
	return &isTaskTriggersSummary_Summary_Expecter{mock: &_m.Mock}
}

// isTaskTriggersSummary_Summary provides a mock function with no fields
func (_m *isTaskTriggersSummary_Summary) isTaskTriggersSummary_Summary() {
	_m.Called()
}

// isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isTaskTriggersSummary_Summary'
type isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call struct {
	*mock.Call
}

// isTaskTriggersSummary_Summary is a helper method to define mock.On call
func (_e *isTaskTriggersSummary_Summary_Expecter) isTaskTriggersSummary_Summary() *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call {
	return &isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call{Call: _e.mock.On("isTaskTriggersSummary_Summary")}
}

func (_c *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call) Run(run func()) *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call) Return() *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call {
	_c.Call.Return()
	return _c
}

func (_c *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call) RunAndReturn(run func()) *isTaskTriggersSummary_Summary_isTaskTriggersSummary_Summary_Call {
	_c.Run(run)
	return _c
}

// newIsTaskTriggersSummary_Summary creates a new instance of isTaskTriggersSummary_Summary. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsTaskTriggersSummary_Summary(t interface {
	mock.TestingT
	Cleanup(func())
}) *isTaskTriggersSummary_Summary {
	mock := &isTaskTriggersSummary_Summary{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/task/task_service.proto

package task

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for deploying a task.
type DeployTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user provided task id.
	TaskId *TaskIdentifier `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Specification for the task.
	Spec *TaskSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional, set of triggers for a given task. Replaces previous set of triggers entirely if any.
	Triggers []*TaskTrigger `protobuf:"bytes,3,rep,name=triggers,proto3" json:"triggers,omitempty"`
}

func (x *DeployTaskRequest) Reset() {
	*x = DeployTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTaskRequest) ProtoMessage() {}

func (x *DeployTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTaskRequest.ProtoReflect.Descriptor instead.
func (*DeployTaskRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{0}
}

func (x *DeployTaskRequest) GetTaskId() *TaskIdentifier {
	if x != nil {
		return x.TaskId
	}
	return nil
}

func (x *DeployTaskRequest) GetSpec() *TaskSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DeployTaskRequest) GetTriggers() []*TaskTrigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

// Response message for deploying a task.
type DeployTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployTaskResponse) Reset() {
	*x = DeployTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTaskResponse) ProtoMessage() {}

func (x *DeployTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTaskResponse.ProtoReflect.Descriptor instead.
func (*DeployTaskResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{1}
}

// Request message for getting detailed information about a task.
type GetTaskDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the task.
	TaskId *TaskIdentifier `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskDetailsRequest) Reset() {
	*x = GetTaskDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskDetailsRequest) ProtoMessage() {}

func (x *GetTaskDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetTaskDetailsRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskDetailsRequest) GetTaskId() *TaskIdentifier {
	if x != nil {
		return x.TaskId
	}
	return nil
}

// Response message for deploying a task.
type GetTaskDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Detailed information about the task.
	Details *TaskDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetTaskDetailsResponse) Reset() {
	*x = GetTaskDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskDetailsResponse) ProtoMessage() {}

func (x *GetTaskDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetTaskDetailsResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskDetailsResponse) GetDetails() *TaskDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common list request parameters.
	Request *common.ListRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// Types that are assignable to ScopeBy:
	//
	//	*ListTasksRequest_Org
	//	*ListTasksRequest_ProjectId
	ScopeBy isListTasksRequest_ScopeBy `protobuf_oneof:"scope_by"`
	// Known filters for listing tasks.
	KnownFilters []*ListTasksRequest_KnownFilter `protobuf:"bytes,4,rep,name=known_filters,json=knownFilters,proto3" json:"known_filters,omitempty"`
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListTasksRequest) GetRequest() *common.ListRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (m *ListTasksRequest) GetScopeBy() isListTasksRequest_ScopeBy {
	if m != nil {
		return m.ScopeBy
	}
	return nil
}

func (x *ListTasksRequest) GetOrg() string {
	if x, ok := x.GetScopeBy().(*ListTasksRequest_Org); ok {
		return x.Org
	}
	return ""
}

func (x *ListTasksRequest) GetProjectId() *common.ProjectIdentifier {
	if x, ok := x.GetScopeBy().(*ListTasksRequest_ProjectId); ok {
		return x.ProjectId
	}
	return nil
}

func (x *ListTasksRequest) GetKnownFilters() []*ListTasksRequest_KnownFilter {
	if x != nil {
		return x.KnownFilters
	}
	return nil
}

type isListTasksRequest_ScopeBy interface {
	isListTasksRequest_ScopeBy()
}

type ListTasksRequest_Org struct {
	// Organization name for filtering.
	Org string `protobuf:"bytes,2,opt,name=org,proto3,oneof"`
}

type ListTasksRequest_ProjectId struct {
	// Project identifier for filtering.
	ProjectId *common.ProjectIdentifier `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3,oneof"`
}

func (*ListTasksRequest_Org) isListTasksRequest_ScopeBy() {}

func (*ListTasksRequest_ProjectId) isListTasksRequest_ScopeBy() {}

type ListTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// Pagination token for the next page of tasks.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListTasksResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListTasksRequest_KnownFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FilterBy:
	//
	//	*ListTasksRequest_KnownFilter_DeployedBy
	FilterBy isListTasksRequest_KnownFilter_FilterBy `protobuf_oneof:"filter_by"`
}

func (x *ListTasksRequest_KnownFilter) Reset() {
	*x = ListTasksRequest_KnownFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_task_task_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksRequest_KnownFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest_KnownFilter) ProtoMessage() {}

func (x *ListTasksRequest_KnownFilter) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_task_task_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest_KnownFilter.ProtoReflect.Descriptor instead.
func (*ListTasksRequest_KnownFilter) Descriptor() ([]byte, []int) {
	return file_flyteidl2_task_task_service_proto_rawDescGZIP(), []int{4, 0}
}

func (m *ListTasksRequest_KnownFilter) GetFilterBy() isListTasksRequest_KnownFilter_FilterBy {
	if m != nil {
		return m.FilterBy
	}
	return nil
}

func (x *ListTasksRequest_KnownFilter) GetDeployedBy() string {
	if x, ok := x.GetFilterBy().(*ListTasksRequest_KnownFilter_DeployedBy); ok {
		return x.DeployedBy
	}
	return ""
}

type isListTasksRequest_KnownFilter_FilterBy interface {
	isListTasksRequest_KnownFilter_FilterBy()
}

type ListTasksRequest_KnownFilter_DeployedBy struct {
	// Filter by user
	DeployedBy string `protobuf:"bytes,1,opt,name=deployed_by,json=deployedBy,proto3,oneof"`
}

func (*ListTasksRequest_KnownFilter_DeployedBy) isListTasksRequest_KnownFilter_FilterBy() {}

var File_flyteidl2_task_task_service_proto protoreflect.FileDescriptor

var file_flyteidl2_task_task_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x1a, 0x21, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd6, 0x02,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x6f,
	0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xd8, 0x01, 0x01,
	0x72, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x44, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x51, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0b, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x42, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x42, 0x11, 0x0a, 0x08, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x62, 0x79, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x55, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xa1, 0x02,
	0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x55, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02,
	0x01, 0x42, 0xb5, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0xa2, 0x02, 0x03, 0x46, 0x54, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0xca, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0xe2, 0x02, 0x1a, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x3a, 0x3a, 0x54, 0x61, 0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_flyteidl2_task_task_service_proto_rawDescOnce sync.Once
	file_flyteidl2_task_task_service_proto_rawDescData = file_flyteidl2_task_task_service_proto_rawDesc
)

func file_flyteidl2_task_task_service_proto_rawDescGZIP() []byte {
	file_flyteidl2_task_task_service_proto_rawDescOnce.Do(func() {
		file_flyteidl2_task_task_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_task_task_service_proto_rawDescData)
	})
	return file_flyteidl2_task_task_service_proto_rawDescData
}

var file_flyteidl2_task_task_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_flyteidl2_task_task_service_proto_goTypes = []interface{}{
	(*DeployTaskRequest)(nil),            // 0: flyteidl2.task.DeployTaskRequest
	(*DeployTaskResponse)(nil),           // 1: flyteidl2.task.DeployTaskResponse
	(*GetTaskDetailsRequest)(nil),        // 2: flyteidl2.task.GetTaskDetailsRequest
	(*GetTaskDetailsResponse)(nil),       // 3: flyteidl2.task.GetTaskDetailsResponse
	(*ListTasksRequest)(nil),             // 4: flyteidl2.task.ListTasksRequest
	(*ListTasksResponse)(nil),            // 5: flyteidl2.task.ListTasksResponse
	(*ListTasksRequest_KnownFilter)(nil), // 6: flyteidl2.task.ListTasksRequest.KnownFilter
	(*TaskIdentifier)(nil),               // 7: flyteidl2.task.TaskIdentifier
	(*TaskSpec)(nil),                     // 8: flyteidl2.task.TaskSpec
	(*TaskTrigger)(nil),                  // 9: flyteidl2.task.TaskTrigger
	(*TaskDetails)(nil),                  // 10: flyteidl2.task.TaskDetails
	(*common.ListRequest)(nil),           // 11: flyteidl2.common.ListRequest
	(*common.ProjectIdentifier)(nil),     // 12: flyteidl2.common.ProjectIdentifier
	(*Task)(nil),                         // 13: flyteidl2.task.Task
}
var file_flyteidl2_task_task_service_proto_depIdxs = []int32{
	7,  // 0: flyteidl2.task.DeployTaskRequest.task_id:type_name -> flyteidl2.task.TaskIdentifier
	8,  // 1: flyteidl2.task.DeployTaskRequest.spec:type_name -> flyteidl2.task.TaskSpec
	9,  // 2: flyteidl2.task.DeployTaskRequest.triggers:type_name -> flyteidl2.task.TaskTrigger
	7,  // 3: flyteidl2.task.GetTaskDetailsRequest.task_id:type_name -> flyteidl2.task.TaskIdentifier
	10, // 4: flyteidl2.task.GetTaskDetailsResponse.details:type_name -> flyteidl2.task.TaskDetails
	11, // 5: flyteidl2.task.ListTasksRequest.request:type_name -> flyteidl2.common.ListRequest
	12, // 6: flyteidl2.task.ListTasksRequest.project_id:type_name -> flyteidl2.common.ProjectIdentifier
	6,  // 7: flyteidl2.task.ListTasksRequest.known_filters:type_name -> flyteidl2.task.ListTasksRequest.KnownFilter
	13, // 8: flyteidl2.task.ListTasksResponse.tasks:type_name -> flyteidl2.task.Task
	0,  // 9: flyteidl2.task.TaskService.DeployTask:input_type -> flyteidl2.task.DeployTaskRequest
	2,  // 10: flyteidl2.task.TaskService.GetTaskDetails:input_type -> flyteidl2.task.GetTaskDetailsRequest
	4,  // 11: flyteidl2.task.TaskService.ListTasks:input_type -> flyteidl2.task.ListTasksRequest
	1,  // 12: flyteidl2.task.TaskService.DeployTask:output_type -> flyteidl2.task.DeployTaskResponse
	3,  // 13: flyteidl2.task.TaskService.GetTaskDetails:output_type -> flyteidl2.task.GetTaskDetailsResponse
	5,  // 14: flyteidl2.task.TaskService.ListTasks:output_type -> flyteidl2.task.ListTasksResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_flyteidl2_task_task_service_proto_init() }
func file_flyteidl2_task_task_service_proto_init() {
	if File_flyteidl2_task_task_service_proto != nil {
		return
	}
	file_flyteidl2_task_task_definition_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_task_task_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_task_task_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksRequest_KnownFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flyteidl2_task_task_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ListTasksRequest_Org)(nil),
		(*ListTasksRequest_ProjectId)(nil),
	}
	file_flyteidl2_task_task_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListTasksRequest_KnownFilter_DeployedBy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_task_task_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flyteidl2_task_task_service_proto_goTypes,
		DependencyIndexes: file_flyteidl2_task_task_service_proto_depIdxs,
		MessageInfos:      file_flyteidl2_task_task_service_proto_msgTypes,
	}.Build()
	File_flyteidl2_task_task_service_proto = out.File
	file_flyteidl2_task_task_service_proto_rawDesc = nil
	file_flyteidl2_task_task_service_proto_goTypes = nil
	file_flyteidl2_task_task_service_proto_depIdxs = nil
}

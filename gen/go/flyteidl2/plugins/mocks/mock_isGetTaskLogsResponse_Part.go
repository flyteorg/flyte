// Code generated by mockery. DO NOT EDIT.

package plugins

import mock "github.com/stretchr/testify/mock"

// isGetTaskLogsResponse_Part is an autogenerated mock type for the isGetTaskLogsResponse_Part type
type isGetTaskLogsResponse_Part struct {
	mock.Mock
}

type isGetTaskLogsResponse_Part_Expecter struct {
	mock *mock.Mock
}

func (_m *isGetTaskLogsResponse_Part) EXPECT() *isGetTaskLogsResponse_Part_Expecter {
	return &isGetTaskLogsResponse_Part_Expecter{mock: &_m.Mock}
}

// isGetTaskLogsResponse_Part provides a mock function with no fields
func (_m *isGetTaskLogsResponse_Part) isGetTaskLogsResponse_Part() {
	_m.Called()
}

// isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isGetTaskLogsResponse_Part'
type isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call struct {
	*mock.Call
}

// isGetTaskLogsResponse_Part is a helper method to define mock.On call
func (_e *isGetTaskLogsResponse_Part_Expecter) isGetTaskLogsResponse_Part() *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call {
	return &isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call{Call: _e.mock.On("isGetTaskLogsResponse_Part")}
}

func (_c *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call) Run(run func()) *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call) Return() *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call {
	_c.Call.Return()
	return _c
}

func (_c *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call) RunAndReturn(run func()) *isGetTaskLogsResponse_Part_isGetTaskLogsResponse_Part_Call {
	_c.Run(run)
	return _c
}

// newIsGetTaskLogsResponse_Part creates a new instance of isGetTaskLogsResponse_Part. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsGetTaskLogsResponse_Part(t interface {
	mock.TestingT
	Cleanup(func())
}) *isGetTaskLogsResponse_Part {
	mock := &isGetTaskLogsResponse_Part{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

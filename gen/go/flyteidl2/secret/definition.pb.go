// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/secret/definition.proto

package secret

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretType int32

const (
	// Default, unspecified secret type. Assumed to be generic and no type specific handling required.
	SecretType_SECRET_TYPE_GENERIC SecretType = 0
	// Secret used specifically for pulling images from a container registry.
	SecretType_SECRET_TYPE_IMAGE_PULL_SECRET SecretType = 1
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0: "SECRET_TYPE_GENERIC",
		1: "SECRET_TYPE_IMAGE_PULL_SECRET",
	}
	SecretType_value = map[string]int32{
		"SECRET_TYPE_GENERIC":           0,
		"SECRET_TYPE_IMAGE_PULL_SECRET": 1,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl2_secret_definition_proto_enumTypes[0].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_flyteidl2_secret_definition_proto_enumTypes[0]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{0}
}

type OverallStatus int32

const (
	OverallStatus_UNSPECIFIED       OverallStatus = 0
	OverallStatus_PARTIALLY_PRESENT OverallStatus = 1 // Exists in some cluster
	OverallStatus_FULLY_PRESENT     OverallStatus = 2 // Exists in all enabled clusters
	OverallStatus_UNKNOWN_STATUS    OverallStatus = 3 // Status is unknown
)

// Enum value maps for OverallStatus.
var (
	OverallStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PARTIALLY_PRESENT",
		2: "FULLY_PRESENT",
		3: "UNKNOWN_STATUS",
	}
	OverallStatus_value = map[string]int32{
		"UNSPECIFIED":       0,
		"PARTIALLY_PRESENT": 1,
		"FULLY_PRESENT":     2,
		"UNKNOWN_STATUS":    3,
	}
)

func (x OverallStatus) Enum() *OverallStatus {
	p := new(OverallStatus)
	*p = x
	return p
}

func (x OverallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl2_secret_definition_proto_enumTypes[1].Descriptor()
}

func (OverallStatus) Type() protoreflect.EnumType {
	return &file_flyteidl2_secret_definition_proto_enumTypes[1]
}

func (x OverallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverallStatus.Descriptor instead.
func (OverallStatus) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{1}
}

type SecretPresenceStatus int32

const (
	SecretPresenceStatus_UNKNOWN SecretPresenceStatus = 0
	SecretPresenceStatus_MISSING SecretPresenceStatus = 1 // Secret is missing in the cluster
	SecretPresenceStatus_PRESENT SecretPresenceStatus = 2 // Secret is present in the cluster
)

// Enum value maps for SecretPresenceStatus.
var (
	SecretPresenceStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "MISSING",
		2: "PRESENT",
	}
	SecretPresenceStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"MISSING": 1,
		"PRESENT": 2,
	}
)

func (x SecretPresenceStatus) Enum() *SecretPresenceStatus {
	p := new(SecretPresenceStatus)
	*p = x
	return p
}

func (x SecretPresenceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretPresenceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl2_secret_definition_proto_enumTypes[2].Descriptor()
}

func (SecretPresenceStatus) Type() protoreflect.EnumType {
	return &file_flyteidl2_secret_definition_proto_enumTypes[2]
}

func (x SecretPresenceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretPresenceStatus.Descriptor instead.
func (SecretPresenceStatus) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{2}
}

// SecretSpec contains information used for creating/updating the secret.
// Mainly it contains the value of the secret
// In future we could add meta info like tags, rotation config, whether stored secret has any binary format etc for storage/retrieval.
type SecretSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*SecretSpec_StringValue
	//	*SecretSpec_BinaryValue
	Value isSecretSpec_Value `protobuf_oneof:"value"`
	// The secret type
	Type SecretType `protobuf:"varint,3,opt,name=type,proto3,enum=flyteidl2.secret.SecretType" json:"type,omitempty"`
}

func (x *SecretSpec) Reset() {
	*x = SecretSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSpec) ProtoMessage() {}

func (x *SecretSpec) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSpec.ProtoReflect.Descriptor instead.
func (*SecretSpec) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{0}
}

func (m *SecretSpec) GetValue() isSecretSpec_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SecretSpec) GetStringValue() string {
	if x, ok := x.GetValue().(*SecretSpec_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *SecretSpec) GetBinaryValue() []byte {
	if x, ok := x.GetValue().(*SecretSpec_BinaryValue); ok {
		return x.BinaryValue
	}
	return nil
}

func (x *SecretSpec) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return SecretType_SECRET_TYPE_GENERIC
}

type isSecretSpec_Value interface {
	isSecretSpec_Value()
}

type SecretSpec_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type SecretSpec_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,2,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

func (*SecretSpec_StringValue) isSecretSpec_Value() {}

func (*SecretSpec_BinaryValue) isSecretSpec_Value() {}

// SecretIdentifier contains the uniquely identifiable way of storing or retrieving the secret
// Name and scope combination are used for defining the format for storage and retrieval of the secret
// For eg : for org scope secrets
// storage format org:<org-name>:name:secret-name
type SecretIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Only org scoped resources are supported right now
	Organization string `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	// domain scoped secret
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Project-domain scoped secret
	Project string `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *SecretIdentifier) Reset() {
	*x = SecretIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretIdentifier) ProtoMessage() {}

func (x *SecretIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretIdentifier.ProtoReflect.Descriptor instead.
func (*SecretIdentifier) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{1}
}

func (x *SecretIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecretIdentifier) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *SecretIdentifier) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SecretIdentifier) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// SecretMetadata contain meta info about the secret
type SecretMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// created_time of the secret.
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// secret_status reports the overall status of the secret across all the clusters.
	// This relies on number of clusters queried which relies on there enabled state.
	SecretStatus *SecretStatus `protobuf:"bytes,2,opt,name=secret_status,json=secretStatus,proto3" json:"secret_status,omitempty"`
	// The secret type
	Type SecretType `protobuf:"varint,3,opt,name=type,proto3,enum=flyteidl2.secret.SecretType" json:"type,omitempty"`
}

func (x *SecretMetadata) Reset() {
	*x = SecretMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretMetadata) ProtoMessage() {}

func (x *SecretMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretMetadata.ProtoReflect.Descriptor instead.
func (*SecretMetadata) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{2}
}

func (x *SecretMetadata) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *SecretMetadata) GetSecretStatus() *SecretStatus {
	if x != nil {
		return x.SecretStatus
	}
	return nil
}

func (x *SecretMetadata) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return SecretType_SECRET_TYPE_GENERIC
}

// SecretStatus contains the status of the secret across all the clusters
type SecretStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// overall_status reports the overall status of the secret across all the clusters.
	OverallStatus OverallStatus `protobuf:"varint,1,opt,name=overall_status,json=overallStatus,proto3,enum=flyteidl2.secret.OverallStatus" json:"overall_status,omitempty"`
	// cluster_status reports the status of the secret in each cluster
	ClusterStatus []*ClusterSecretStatus `protobuf:"bytes,2,rep,name=cluster_status,json=clusterStatus,proto3" json:"cluster_status,omitempty"`
}

func (x *SecretStatus) Reset() {
	*x = SecretStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretStatus) ProtoMessage() {}

func (x *SecretStatus) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretStatus.ProtoReflect.Descriptor instead.
func (*SecretStatus) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{3}
}

func (x *SecretStatus) GetOverallStatus() OverallStatus {
	if x != nil {
		return x.OverallStatus
	}
	return OverallStatus_UNSPECIFIED
}

func (x *SecretStatus) GetClusterStatus() []*ClusterSecretStatus {
	if x != nil {
		return x.ClusterStatus
	}
	return nil
}

// ClusterSecretStatus contains the status of the secret in a cluster
type ClusterSecretStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *common.ClusterIdentifier `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// presence_status reports the status of the secret in the cluster
	PresenceStatus SecretPresenceStatus `protobuf:"varint,2,opt,name=presence_status,json=presenceStatus,proto3,enum=flyteidl2.secret.SecretPresenceStatus" json:"presence_status,omitempty"`
}

func (x *ClusterSecretStatus) Reset() {
	*x = ClusterSecretStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSecretStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSecretStatus) ProtoMessage() {}

func (x *ClusterSecretStatus) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSecretStatus.ProtoReflect.Descriptor instead.
func (*ClusterSecretStatus) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterSecretStatus) GetCluster() *common.ClusterIdentifier {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ClusterSecretStatus) GetPresenceStatus() SecretPresenceStatus {
	if x != nil {
		return x.PresenceStatus
	}
	return SecretPresenceStatus_UNKNOWN
}

// Secret is the returned object for Get and List calls which returns the identifier of the secret along with
// meta information in future about the creation data, update date, tags etc
// This doesn't contain the value of the secret
type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *SecretIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SecretMetadata *SecretMetadata   `protobuf:"bytes,2,opt,name=secret_metadata,json=secretMetadata,proto3" json:"secret_metadata,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_secret_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_secret_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_flyteidl2_secret_definition_proto_rawDescGZIP(), []int{5}
}

func (x *Secret) GetId() *SecretIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Secret) GetSecretMetadata() *SecretMetadata {
	if x != nil {
		return x.SecretMetadata
	}
	return nil
}

var File_flyteidl2_secret_definition_proto protoreflect.FileDescriptor

var file_flyteidl2_secret_definition_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08,
	0x01, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x48, 0x16, 0x72, 0x14, 0x10, 0x01, 0x32, 0x10, 0x5e,
	0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x2b, 0x24, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a,
	0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x13,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x32,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x49, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x48, 0x0a,
	0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x49, 0x43, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x01, 0x2a, 0x5e, 0x0a, 0x0d, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x4c, 0x4c, 0x59, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x03, 0x2a, 0x3d, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0xc0, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42,
	0x0f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x02, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f,
	0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0xa2, 0x02, 0x03, 0x46, 0x53, 0x58,
	0xaa, 0x02, 0x10, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0xca, 0x02, 0x10, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0xe2, 0x02, 0x1c, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x5c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x3a, 0x3a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_flyteidl2_secret_definition_proto_rawDescOnce sync.Once
	file_flyteidl2_secret_definition_proto_rawDescData = file_flyteidl2_secret_definition_proto_rawDesc
)

func file_flyteidl2_secret_definition_proto_rawDescGZIP() []byte {
	file_flyteidl2_secret_definition_proto_rawDescOnce.Do(func() {
		file_flyteidl2_secret_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_secret_definition_proto_rawDescData)
	})
	return file_flyteidl2_secret_definition_proto_rawDescData
}

var file_flyteidl2_secret_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_flyteidl2_secret_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_flyteidl2_secret_definition_proto_goTypes = []interface{}{
	(SecretType)(0),                  // 0: flyteidl2.secret.SecretType
	(OverallStatus)(0),               // 1: flyteidl2.secret.OverallStatus
	(SecretPresenceStatus)(0),        // 2: flyteidl2.secret.SecretPresenceStatus
	(*SecretSpec)(nil),               // 3: flyteidl2.secret.SecretSpec
	(*SecretIdentifier)(nil),         // 4: flyteidl2.secret.SecretIdentifier
	(*SecretMetadata)(nil),           // 5: flyteidl2.secret.SecretMetadata
	(*SecretStatus)(nil),             // 6: flyteidl2.secret.SecretStatus
	(*ClusterSecretStatus)(nil),      // 7: flyteidl2.secret.ClusterSecretStatus
	(*Secret)(nil),                   // 8: flyteidl2.secret.Secret
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
	(*common.ClusterIdentifier)(nil), // 10: flyteidl2.common.ClusterIdentifier
}
var file_flyteidl2_secret_definition_proto_depIdxs = []int32{
	0,  // 0: flyteidl2.secret.SecretSpec.type:type_name -> flyteidl2.secret.SecretType
	9,  // 1: flyteidl2.secret.SecretMetadata.created_time:type_name -> google.protobuf.Timestamp
	6,  // 2: flyteidl2.secret.SecretMetadata.secret_status:type_name -> flyteidl2.secret.SecretStatus
	0,  // 3: flyteidl2.secret.SecretMetadata.type:type_name -> flyteidl2.secret.SecretType
	1,  // 4: flyteidl2.secret.SecretStatus.overall_status:type_name -> flyteidl2.secret.OverallStatus
	7,  // 5: flyteidl2.secret.SecretStatus.cluster_status:type_name -> flyteidl2.secret.ClusterSecretStatus
	10, // 6: flyteidl2.secret.ClusterSecretStatus.cluster:type_name -> flyteidl2.common.ClusterIdentifier
	2,  // 7: flyteidl2.secret.ClusterSecretStatus.presence_status:type_name -> flyteidl2.secret.SecretPresenceStatus
	4,  // 8: flyteidl2.secret.Secret.id:type_name -> flyteidl2.secret.SecretIdentifier
	5,  // 9: flyteidl2.secret.Secret.secret_metadata:type_name -> flyteidl2.secret.SecretMetadata
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_flyteidl2_secret_definition_proto_init() }
func file_flyteidl2_secret_definition_proto_init() {
	if File_flyteidl2_secret_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_secret_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_secret_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_secret_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_secret_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_secret_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSecretStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_secret_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flyteidl2_secret_definition_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SecretSpec_StringValue)(nil),
		(*SecretSpec_BinaryValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_secret_definition_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl2_secret_definition_proto_goTypes,
		DependencyIndexes: file_flyteidl2_secret_definition_proto_depIdxs,
		EnumInfos:         file_flyteidl2_secret_definition_proto_enumTypes,
		MessageInfos:      file_flyteidl2_secret_definition_proto_msgTypes,
	}.Build()
	File_flyteidl2_secret_definition_proto = out.File
	file_flyteidl2_secret_definition_proto_rawDesc = nil
	file_flyteidl2_secret_definition_proto_goTypes = nil
	file_flyteidl2_secret_definition_proto_depIdxs = nil
}

// Code generated by mockery. DO NOT EDIT.

package secret

import mock "github.com/stretchr/testify/mock"

// isSecretSpec_Value is an autogenerated mock type for the isSecretSpec_Value type
type isSecretSpec_Value struct {
	mock.Mock
}

type isSecretSpec_Value_Expecter struct {
	mock *mock.Mock
}

func (_m *isSecretSpec_Value) EXPECT() *isSecretSpec_Value_Expecter {
	return &isSecretSpec_Value_Expecter{mock: &_m.Mock}
}

// isSecretSpec_Value provides a mock function with no fields
func (_m *isSecretSpec_Value) isSecretSpec_Value() {
	_m.Called()
}

// isSecretSpec_Value_isSecretSpec_Value_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isSecretSpec_Value'
type isSecretSpec_Value_isSecretSpec_Value_Call struct {
	*mock.Call
}

// isSecretSpec_Value is a helper method to define mock.On call
func (_e *isSecretSpec_Value_Expecter) isSecretSpec_Value() *isSecretSpec_Value_isSecretSpec_Value_Call {
	return &isSecretSpec_Value_isSecretSpec_Value_Call{Call: _e.mock.On("isSecretSpec_Value")}
}

func (_c *isSecretSpec_Value_isSecretSpec_Value_Call) Run(run func()) *isSecretSpec_Value_isSecretSpec_Value_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isSecretSpec_Value_isSecretSpec_Value_Call) Return() *isSecretSpec_Value_isSecretSpec_Value_Call {
	_c.Call.Return()
	return _c
}

func (_c *isSecretSpec_Value_isSecretSpec_Value_Call) RunAndReturn(run func()) *isSecretSpec_Value_isSecretSpec_Value_Call {
	_c.Run(run)
	return _c
}

// newIsSecretSpec_Value creates a new instance of isSecretSpec_Value. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsSecretSpec_Value(t interface {
	mock.TestingT
	Cleanup(func())
}) *isSecretSpec_Value {
	mock := &isSecretSpec_Value{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

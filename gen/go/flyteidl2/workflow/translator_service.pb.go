// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/workflow/translator_service.proto

package workflow

import (
	core "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/core"
	task "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/task"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LiteralsToLaunchFormJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The literals to convert to JSON.
	Literals  []*task.NamedLiteral `protobuf:"bytes,1,rep,name=literals,proto3" json:"literals,omitempty"`
	Variables *core.VariableMap    `protobuf:"bytes,2,opt,name=variables,proto3" json:"variables,omitempty"`
}

func (x *LiteralsToLaunchFormJsonRequest) Reset() {
	*x = LiteralsToLaunchFormJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteralsToLaunchFormJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteralsToLaunchFormJsonRequest) ProtoMessage() {}

func (x *LiteralsToLaunchFormJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteralsToLaunchFormJsonRequest.ProtoReflect.Descriptor instead.
func (*LiteralsToLaunchFormJsonRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{0}
}

func (x *LiteralsToLaunchFormJsonRequest) GetLiterals() []*task.NamedLiteral {
	if x != nil {
		return x.Literals
	}
	return nil
}

func (x *LiteralsToLaunchFormJsonRequest) GetVariables() *core.VariableMap {
	if x != nil {
		return x.Variables
	}
	return nil
}

type LiteralsToLaunchFormJsonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The JSON for the literals.
	Json *structpb.Struct `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *LiteralsToLaunchFormJsonResponse) Reset() {
	*x = LiteralsToLaunchFormJsonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteralsToLaunchFormJsonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteralsToLaunchFormJsonResponse) ProtoMessage() {}

func (x *LiteralsToLaunchFormJsonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteralsToLaunchFormJsonResponse.ProtoReflect.Descriptor instead.
func (*LiteralsToLaunchFormJsonResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{1}
}

func (x *LiteralsToLaunchFormJsonResponse) GetJson() *structpb.Struct {
	if x != nil {
		return x.Json
	}
	return nil
}

type LaunchFormJsonToLiteralsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The JSON schema to convert to literals.
	Json *structpb.Struct `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *LaunchFormJsonToLiteralsRequest) Reset() {
	*x = LaunchFormJsonToLiteralsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchFormJsonToLiteralsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchFormJsonToLiteralsRequest) ProtoMessage() {}

func (x *LaunchFormJsonToLiteralsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchFormJsonToLiteralsRequest.ProtoReflect.Descriptor instead.
func (*LaunchFormJsonToLiteralsRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{2}
}

func (x *LaunchFormJsonToLiteralsRequest) GetJson() *structpb.Struct {
	if x != nil {
		return x.Json
	}
	return nil
}

type LaunchFormJsonToLiteralsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The literals generated from the JSON schema.
	Literals []*task.NamedLiteral `protobuf:"bytes,1,rep,name=literals,proto3" json:"literals,omitempty"`
}

func (x *LaunchFormJsonToLiteralsResponse) Reset() {
	*x = LaunchFormJsonToLiteralsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchFormJsonToLiteralsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchFormJsonToLiteralsResponse) ProtoMessage() {}

func (x *LaunchFormJsonToLiteralsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchFormJsonToLiteralsResponse.ProtoReflect.Descriptor instead.
func (*LaunchFormJsonToLiteralsResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{3}
}

func (x *LaunchFormJsonToLiteralsResponse) GetLiterals() []*task.NamedLiteral {
	if x != nil {
		return x.Literals
	}
	return nil
}

type TaskSpecToLaunchFormJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The task spec to convert to JSON.
	// Merges the VariableMap and the default inputs
	TaskSpec *task.TaskSpec `protobuf:"bytes,1,opt,name=task_spec,json=taskSpec,proto3" json:"task_spec,omitempty"`
}

func (x *TaskSpecToLaunchFormJsonRequest) Reset() {
	*x = TaskSpecToLaunchFormJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSpecToLaunchFormJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpecToLaunchFormJsonRequest) ProtoMessage() {}

func (x *TaskSpecToLaunchFormJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpecToLaunchFormJsonRequest.ProtoReflect.Descriptor instead.
func (*TaskSpecToLaunchFormJsonRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{4}
}

func (x *TaskSpecToLaunchFormJsonRequest) GetTaskSpec() *task.TaskSpec {
	if x != nil {
		return x.TaskSpec
	}
	return nil
}

type TaskSpecToLaunchFormJsonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The JSON for the variables.
	Json *structpb.Struct `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *TaskSpecToLaunchFormJsonResponse) Reset() {
	*x = TaskSpecToLaunchFormJsonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSpecToLaunchFormJsonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpecToLaunchFormJsonResponse) ProtoMessage() {}

func (x *TaskSpecToLaunchFormJsonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_translator_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpecToLaunchFormJsonResponse.ProtoReflect.Descriptor instead.
func (*TaskSpecToLaunchFormJsonResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_translator_service_proto_rawDescGZIP(), []int{5}
}

func (x *TaskSpecToLaunchFormJsonResponse) GetJson() *structpb.Struct {
	if x != nil {
		return x.Json
	}
	return nil
}

var File_flyteidl2_workflow_translator_service_proto protoreflect.FileDescriptor

var file_flyteidl2_workflow_translator_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x1a, 0x1e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x54,
	0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73,
	0x12, 0x39, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x70,
	0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x20, 0x4c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46,
	0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x1f,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x6f,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x20,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x6f,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x22, 0x58, 0x0a, 0x1f, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f,
	0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x22, 0x4f, 0x0a, 0x20, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63,
	0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x32, 0xba, 0x03, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x18,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f,
	0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x18, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x4c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x33, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x4c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x6f,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70,
	0x65, 0x63, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73,
	0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63,
	0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x6f, 0x72,
	0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90,
	0x02, 0x01, 0x42, 0xd3, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x16, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0xa2, 0x02, 0x03, 0x46, 0x57, 0x58, 0xaa, 0x02, 0x12, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0xca, 0x02, 0x12, 0x46,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0xe2, 0x02, 0x1e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x13, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x3a, 0x3a,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl2_workflow_translator_service_proto_rawDescOnce sync.Once
	file_flyteidl2_workflow_translator_service_proto_rawDescData = file_flyteidl2_workflow_translator_service_proto_rawDesc
)

func file_flyteidl2_workflow_translator_service_proto_rawDescGZIP() []byte {
	file_flyteidl2_workflow_translator_service_proto_rawDescOnce.Do(func() {
		file_flyteidl2_workflow_translator_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_workflow_translator_service_proto_rawDescData)
	})
	return file_flyteidl2_workflow_translator_service_proto_rawDescData
}

var file_flyteidl2_workflow_translator_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_flyteidl2_workflow_translator_service_proto_goTypes = []interface{}{
	(*LiteralsToLaunchFormJsonRequest)(nil),  // 0: flyteidl2.workflow.LiteralsToLaunchFormJsonRequest
	(*LiteralsToLaunchFormJsonResponse)(nil), // 1: flyteidl2.workflow.LiteralsToLaunchFormJsonResponse
	(*LaunchFormJsonToLiteralsRequest)(nil),  // 2: flyteidl2.workflow.LaunchFormJsonToLiteralsRequest
	(*LaunchFormJsonToLiteralsResponse)(nil), // 3: flyteidl2.workflow.LaunchFormJsonToLiteralsResponse
	(*TaskSpecToLaunchFormJsonRequest)(nil),  // 4: flyteidl2.workflow.TaskSpecToLaunchFormJsonRequest
	(*TaskSpecToLaunchFormJsonResponse)(nil), // 5: flyteidl2.workflow.TaskSpecToLaunchFormJsonResponse
	(*task.NamedLiteral)(nil),                // 6: flyteidl2.task.NamedLiteral
	(*core.VariableMap)(nil),                 // 7: flyteidl2.core.VariableMap
	(*structpb.Struct)(nil),                  // 8: google.protobuf.Struct
	(*task.TaskSpec)(nil),                    // 9: flyteidl2.task.TaskSpec
}
var file_flyteidl2_workflow_translator_service_proto_depIdxs = []int32{
	6,  // 0: flyteidl2.workflow.LiteralsToLaunchFormJsonRequest.literals:type_name -> flyteidl2.task.NamedLiteral
	7,  // 1: flyteidl2.workflow.LiteralsToLaunchFormJsonRequest.variables:type_name -> flyteidl2.core.VariableMap
	8,  // 2: flyteidl2.workflow.LiteralsToLaunchFormJsonResponse.json:type_name -> google.protobuf.Struct
	8,  // 3: flyteidl2.workflow.LaunchFormJsonToLiteralsRequest.json:type_name -> google.protobuf.Struct
	6,  // 4: flyteidl2.workflow.LaunchFormJsonToLiteralsResponse.literals:type_name -> flyteidl2.task.NamedLiteral
	9,  // 5: flyteidl2.workflow.TaskSpecToLaunchFormJsonRequest.task_spec:type_name -> flyteidl2.task.TaskSpec
	8,  // 6: flyteidl2.workflow.TaskSpecToLaunchFormJsonResponse.json:type_name -> google.protobuf.Struct
	0,  // 7: flyteidl2.workflow.TranslatorService.LiteralsToLaunchFormJson:input_type -> flyteidl2.workflow.LiteralsToLaunchFormJsonRequest
	2,  // 8: flyteidl2.workflow.TranslatorService.LaunchFormJsonToLiterals:input_type -> flyteidl2.workflow.LaunchFormJsonToLiteralsRequest
	4,  // 9: flyteidl2.workflow.TranslatorService.TaskSpecToLaunchFormJson:input_type -> flyteidl2.workflow.TaskSpecToLaunchFormJsonRequest
	1,  // 10: flyteidl2.workflow.TranslatorService.LiteralsToLaunchFormJson:output_type -> flyteidl2.workflow.LiteralsToLaunchFormJsonResponse
	3,  // 11: flyteidl2.workflow.TranslatorService.LaunchFormJsonToLiterals:output_type -> flyteidl2.workflow.LaunchFormJsonToLiteralsResponse
	5,  // 12: flyteidl2.workflow.TranslatorService.TaskSpecToLaunchFormJson:output_type -> flyteidl2.workflow.TaskSpecToLaunchFormJsonResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_flyteidl2_workflow_translator_service_proto_init() }
func file_flyteidl2_workflow_translator_service_proto_init() {
	if File_flyteidl2_workflow_translator_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_workflow_translator_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteralsToLaunchFormJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_translator_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteralsToLaunchFormJsonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_translator_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchFormJsonToLiteralsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_translator_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchFormJsonToLiteralsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_translator_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskSpecToLaunchFormJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_translator_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskSpecToLaunchFormJsonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_workflow_translator_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flyteidl2_workflow_translator_service_proto_goTypes,
		DependencyIndexes: file_flyteidl2_workflow_translator_service_proto_depIdxs,
		MessageInfos:      file_flyteidl2_workflow_translator_service_proto_msgTypes,
	}.Build()
	File_flyteidl2_workflow_translator_service_proto = out.File
	file_flyteidl2_workflow_translator_service_proto_rawDesc = nil
	file_flyteidl2_workflow_translator_service_proto_goTypes = nil
	file_flyteidl2_workflow_translator_service_proto_depIdxs = nil
}

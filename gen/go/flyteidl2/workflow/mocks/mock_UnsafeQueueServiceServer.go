// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// UnsafeQueueServiceServer is an autogenerated mock type for the UnsafeQueueServiceServer type
type UnsafeQueueServiceServer struct {
	mock.Mock
}

type UnsafeQueueServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeQueueServiceServer) EXPECT() *UnsafeQueueServiceServer_Expecter {
	return &UnsafeQueueServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedQueueServiceServer provides a mock function with no fields
func (_m *UnsafeQueueServiceServer) mustEmbedUnimplementedQueueServiceServer() {
	_m.Called()
}

// UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedQueueServiceServer'
type UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedQueueServiceServer is a helper method to define mock.On call
func (_e *UnsafeQueueServiceServer_Expecter) mustEmbedUnimplementedQueueServiceServer() *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call {
	return &UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedQueueServiceServer")}
}

func (_c *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call) Run(run func()) *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call) Return() *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call) RunAndReturn(run func()) *UnsafeQueueServiceServer_mustEmbedUnimplementedQueueServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeQueueServiceServer creates a new instance of UnsafeQueueServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeQueueServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeQueueServiceServer {
	mock := &UnsafeQueueServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

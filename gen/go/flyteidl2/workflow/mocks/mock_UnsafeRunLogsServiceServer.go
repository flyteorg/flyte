// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// UnsafeRunLogsServiceServer is an autogenerated mock type for the UnsafeRunLogsServiceServer type
type UnsafeRunLogsServiceServer struct {
	mock.Mock
}

type UnsafeRunLogsServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeRunLogsServiceServer) EXPECT() *UnsafeRunLogsServiceServer_Expecter {
	return &UnsafeRunLogsServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedRunLogsServiceServer provides a mock function with no fields
func (_m *UnsafeRunLogsServiceServer) mustEmbedUnimplementedRunLogsServiceServer() {
	_m.Called()
}

// UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedRunLogsServiceServer'
type UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedRunLogsServiceServer is a helper method to define mock.On call
func (_e *UnsafeRunLogsServiceServer_Expecter) mustEmbedUnimplementedRunLogsServiceServer() *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call {
	return &UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedRunLogsServiceServer")}
}

func (_c *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call) Run(run func()) *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call) Return() *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call) RunAndReturn(run func()) *UnsafeRunLogsServiceServer_mustEmbedUnimplementedRunLogsServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeRunLogsServiceServer creates a new instance of UnsafeRunLogsServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeRunLogsServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeRunLogsServiceServer {
	mock := &UnsafeRunLogsServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

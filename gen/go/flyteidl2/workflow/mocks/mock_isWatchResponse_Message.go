// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// isWatchResponse_Message is an autogenerated mock type for the isWatchResponse_Message type
type isWatchResponse_Message struct {
	mock.Mock
}

type isWatchResponse_Message_Expecter struct {
	mock *mock.Mock
}

func (_m *isWatchResponse_Message) EXPECT() *isWatchResponse_Message_Expecter {
	return &isWatchResponse_Message_Expecter{mock: &_m.Mock}
}

// isWatchResponse_Message provides a mock function with no fields
func (_m *isWatchResponse_Message) isWatchResponse_Message() {
	_m.Called()
}

// isWatchResponse_Message_isWatchResponse_Message_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isWatchResponse_Message'
type isWatchResponse_Message_isWatchResponse_Message_Call struct {
	*mock.Call
}

// isWatchResponse_Message is a helper method to define mock.On call
func (_e *isWatchResponse_Message_Expecter) isWatchResponse_Message() *isWatchResponse_Message_isWatchResponse_Message_Call {
	return &isWatchResponse_Message_isWatchResponse_Message_Call{Call: _e.mock.On("isWatchResponse_Message")}
}

func (_c *isWatchResponse_Message_isWatchResponse_Message_Call) Run(run func()) *isWatchResponse_Message_isWatchResponse_Message_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isWatchResponse_Message_isWatchResponse_Message_Call) Return() *isWatchResponse_Message_isWatchResponse_Message_Call {
	_c.Call.Return()
	return _c
}

func (_c *isWatchResponse_Message_isWatchResponse_Message_Call) RunAndReturn(run func()) *isWatchResponse_Message_isWatchResponse_Message_Call {
	_c.Run(run)
	return _c
}

// newIsWatchResponse_Message creates a new instance of isWatchResponse_Message. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsWatchResponse_Message(t interface {
	mock.TestingT
	Cleanup(func())
}) *isWatchResponse_Message {
	mock := &isWatchResponse_Message{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

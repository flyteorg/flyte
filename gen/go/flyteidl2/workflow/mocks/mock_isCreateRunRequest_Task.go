// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// isCreateRunRequest_Task is an autogenerated mock type for the isCreateRunRequest_Task type
type isCreateRunRequest_Task struct {
	mock.Mock
}

type isCreateRunRequest_Task_Expecter struct {
	mock *mock.Mock
}

func (_m *isCreateRunRequest_Task) EXPECT() *isCreateRunRequest_Task_Expecter {
	return &isCreateRunRequest_Task_Expecter{mock: &_m.Mock}
}

// isCreateRunRequest_Task provides a mock function with no fields
func (_m *isCreateRunRequest_Task) isCreateRunRequest_Task() {
	_m.Called()
}

// isCreateRunRequest_Task_isCreateRunRequest_Task_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isCreateRunRequest_Task'
type isCreateRunRequest_Task_isCreateRunRequest_Task_Call struct {
	*mock.Call
}

// isCreateRunRequest_Task is a helper method to define mock.On call
func (_e *isCreateRunRequest_Task_Expecter) isCreateRunRequest_Task() *isCreateRunRequest_Task_isCreateRunRequest_Task_Call {
	return &isCreateRunRequest_Task_isCreateRunRequest_Task_Call{Call: _e.mock.On("isCreateRunRequest_Task")}
}

func (_c *isCreateRunRequest_Task_isCreateRunRequest_Task_Call) Run(run func()) *isCreateRunRequest_Task_isCreateRunRequest_Task_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isCreateRunRequest_Task_isCreateRunRequest_Task_Call) Return() *isCreateRunRequest_Task_isCreateRunRequest_Task_Call {
	_c.Call.Return()
	return _c
}

func (_c *isCreateRunRequest_Task_isCreateRunRequest_Task_Call) RunAndReturn(run func()) *isCreateRunRequest_Task_isCreateRunRequest_Task_Call {
	_c.Run(run)
	return _c
}

// newIsCreateRunRequest_Task creates a new instance of isCreateRunRequest_Task. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsCreateRunRequest_Task(t interface {
	mock.TestingT
	Cleanup(func())
}) *isCreateRunRequest_Task {
	mock := &isCreateRunRequest_Task{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// isEnqueueActionRequest_Spec is an autogenerated mock type for the isEnqueueActionRequest_Spec type
type isEnqueueActionRequest_Spec struct {
	mock.Mock
}

type isEnqueueActionRequest_Spec_Expecter struct {
	mock *mock.Mock
}

func (_m *isEnqueueActionRequest_Spec) EXPECT() *isEnqueueActionRequest_Spec_Expecter {
	return &isEnqueueActionRequest_Spec_Expecter{mock: &_m.Mock}
}

// isEnqueueActionRequest_Spec provides a mock function with no fields
func (_m *isEnqueueActionRequest_Spec) isEnqueueActionRequest_Spec() {
	_m.Called()
}

// isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isEnqueueActionRequest_Spec'
type isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call struct {
	*mock.Call
}

// isEnqueueActionRequest_Spec is a helper method to define mock.On call
func (_e *isEnqueueActionRequest_Spec_Expecter) isEnqueueActionRequest_Spec() *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call {
	return &isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call{Call: _e.mock.On("isEnqueueActionRequest_Spec")}
}

func (_c *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call) Run(run func()) *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call) Return() *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call {
	_c.Call.Return()
	return _c
}

func (_c *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call) RunAndReturn(run func()) *isEnqueueActionRequest_Spec_isEnqueueActionRequest_Spec_Call {
	_c.Run(run)
	return _c
}

// newIsEnqueueActionRequest_Spec creates a new instance of isEnqueueActionRequest_Spec. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsEnqueueActionRequest_Spec(t interface {
	mock.TestingT
	Cleanup(func())
}) *isEnqueueActionRequest_Spec {
	mock := &isEnqueueActionRequest_Spec{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

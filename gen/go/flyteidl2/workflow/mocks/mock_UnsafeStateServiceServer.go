// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// UnsafeStateServiceServer is an autogenerated mock type for the UnsafeStateServiceServer type
type UnsafeStateServiceServer struct {
	mock.Mock
}

type UnsafeStateServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeStateServiceServer) EXPECT() *UnsafeStateServiceServer_Expecter {
	return &UnsafeStateServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedStateServiceServer provides a mock function with no fields
func (_m *UnsafeStateServiceServer) mustEmbedUnimplementedStateServiceServer() {
	_m.Called()
}

// UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedStateServiceServer'
type UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedStateServiceServer is a helper method to define mock.On call
func (_e *UnsafeStateServiceServer_Expecter) mustEmbedUnimplementedStateServiceServer() *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call {
	return &UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedStateServiceServer")}
}

func (_c *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call) Run(run func()) *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call) Return() *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call) RunAndReturn(run func()) *UnsafeStateServiceServer_mustEmbedUnimplementedStateServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeStateServiceServer creates a new instance of UnsafeStateServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeStateServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeStateServiceServer {
	mock := &UnsafeStateServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

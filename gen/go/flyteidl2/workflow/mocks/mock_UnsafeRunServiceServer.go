// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// UnsafeRunServiceServer is an autogenerated mock type for the UnsafeRunServiceServer type
type UnsafeRunServiceServer struct {
	mock.Mock
}

type UnsafeRunServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeRunServiceServer) EXPECT() *UnsafeRunServiceServer_Expecter {
	return &UnsafeRunServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedRunServiceServer provides a mock function with no fields
func (_m *UnsafeRunServiceServer) mustEmbedUnimplementedRunServiceServer() {
	_m.Called()
}

// UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedRunServiceServer'
type UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedRunServiceServer is a helper method to define mock.On call
func (_e *UnsafeRunServiceServer_Expecter) mustEmbedUnimplementedRunServiceServer() *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call {
	return &UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedRunServiceServer")}
}

func (_c *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call) Run(run func()) *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call) Return() *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call) RunAndReturn(run func()) *UnsafeRunServiceServer_mustEmbedUnimplementedRunServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeRunServiceServer creates a new instance of UnsafeRunServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeRunServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeRunServiceServer {
	mock := &UnsafeRunServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

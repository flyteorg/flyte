// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// isWatchRequest_Filter is an autogenerated mock type for the isWatchRequest_Filter type
type isWatchRequest_Filter struct {
	mock.Mock
}

type isWatchRequest_Filter_Expecter struct {
	mock *mock.Mock
}

func (_m *isWatchRequest_Filter) EXPECT() *isWatchRequest_Filter_Expecter {
	return &isWatchRequest_Filter_Expecter{mock: &_m.Mock}
}

// isWatchRequest_Filter provides a mock function with no fields
func (_m *isWatchRequest_Filter) isWatchRequest_Filter() {
	_m.Called()
}

// isWatchRequest_Filter_isWatchRequest_Filter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isWatchRequest_Filter'
type isWatchRequest_Filter_isWatchRequest_Filter_Call struct {
	*mock.Call
}

// isWatchRequest_Filter is a helper method to define mock.On call
func (_e *isWatchRequest_Filter_Expecter) isWatchRequest_Filter() *isWatchRequest_Filter_isWatchRequest_Filter_Call {
	return &isWatchRequest_Filter_isWatchRequest_Filter_Call{Call: _e.mock.On("isWatchRequest_Filter")}
}

func (_c *isWatchRequest_Filter_isWatchRequest_Filter_Call) Run(run func()) *isWatchRequest_Filter_isWatchRequest_Filter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isWatchRequest_Filter_isWatchRequest_Filter_Call) Return() *isWatchRequest_Filter_isWatchRequest_Filter_Call {
	_c.Call.Return()
	return _c
}

func (_c *isWatchRequest_Filter_isWatchRequest_Filter_Call) RunAndReturn(run func()) *isWatchRequest_Filter_isWatchRequest_Filter_Call {
	_c.Run(run)
	return _c
}

// newIsWatchRequest_Filter creates a new instance of isWatchRequest_Filter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsWatchRequest_Filter(t interface {
	mock.TestingT
	Cleanup(func())
}) *isWatchRequest_Filter {
	mock := &isWatchRequest_Filter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

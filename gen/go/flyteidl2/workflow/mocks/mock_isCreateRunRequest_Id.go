// Code generated by mockery. DO NOT EDIT.

package workflow

import mock "github.com/stretchr/testify/mock"

// isCreateRunRequest_Id is an autogenerated mock type for the isCreateRunRequest_Id type
type isCreateRunRequest_Id struct {
	mock.Mock
}

type isCreateRunRequest_Id_Expecter struct {
	mock *mock.Mock
}

func (_m *isCreateRunRequest_Id) EXPECT() *isCreateRunRequest_Id_Expecter {
	return &isCreateRunRequest_Id_Expecter{mock: &_m.Mock}
}

// isCreateRunRequest_Id provides a mock function with no fields
func (_m *isCreateRunRequest_Id) isCreateRunRequest_Id() {
	_m.Called()
}

// isCreateRunRequest_Id_isCreateRunRequest_Id_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isCreateRunRequest_Id'
type isCreateRunRequest_Id_isCreateRunRequest_Id_Call struct {
	*mock.Call
}

// isCreateRunRequest_Id is a helper method to define mock.On call
func (_e *isCreateRunRequest_Id_Expecter) isCreateRunRequest_Id() *isCreateRunRequest_Id_isCreateRunRequest_Id_Call {
	return &isCreateRunRequest_Id_isCreateRunRequest_Id_Call{Call: _e.mock.On("isCreateRunRequest_Id")}
}

func (_c *isCreateRunRequest_Id_isCreateRunRequest_Id_Call) Run(run func()) *isCreateRunRequest_Id_isCreateRunRequest_Id_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isCreateRunRequest_Id_isCreateRunRequest_Id_Call) Return() *isCreateRunRequest_Id_isCreateRunRequest_Id_Call {
	_c.Call.Return()
	return _c
}

func (_c *isCreateRunRequest_Id_isCreateRunRequest_Id_Call) RunAndReturn(run func()) *isCreateRunRequest_Id_isCreateRunRequest_Id_Call {
	_c.Run(run)
	return _c
}

// newIsCreateRunRequest_Id creates a new instance of isCreateRunRequest_Id. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsCreateRunRequest_Id(t interface {
	mock.TestingT
	Cleanup(func())
}) *isCreateRunRequest_Id {
	mock := &isCreateRunRequest_Id{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

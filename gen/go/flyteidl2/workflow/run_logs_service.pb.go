// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/workflow/run_logs_service.proto

package workflow

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/common"
	dataplane "github.com/flyteorg/flyte/v2/gen/go/flyteidl2/logs/dataplane"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for tailing logs.
type TailLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The action id.
	ActionId *common.ActionIdentifier `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// The attempt number.
	Attempt uint32 `protobuf:"varint,2,opt,name=attempt,proto3" json:"attempt,omitempty"`
}

func (x *TailLogsRequest) Reset() {
	*x = TailLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TailLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TailLogsRequest) ProtoMessage() {}

func (x *TailLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TailLogsRequest.ProtoReflect.Descriptor instead.
func (*TailLogsRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_run_logs_service_proto_rawDescGZIP(), []int{0}
}

func (x *TailLogsRequest) GetActionId() *common.ActionIdentifier {
	if x != nil {
		return x.ActionId
	}
	return nil
}

func (x *TailLogsRequest) GetAttempt() uint32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

// Reponse message for tailing logs.
type TailLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One or more batches of logs.
	Logs []*TailLogsResponse_Logs `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *TailLogsResponse) Reset() {
	*x = TailLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TailLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TailLogsResponse) ProtoMessage() {}

func (x *TailLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TailLogsResponse.ProtoReflect.Descriptor instead.
func (*TailLogsResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_run_logs_service_proto_rawDescGZIP(), []int{1}
}

func (x *TailLogsResponse) GetLogs() []*TailLogsResponse_Logs {
	if x != nil {
		return x.Logs
	}
	return nil
}

// A batch of logs.
type TailLogsResponse_Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Structured log lines.
	Lines []*dataplane.LogLine `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *TailLogsResponse_Logs) Reset() {
	*x = TailLogsResponse_Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TailLogsResponse_Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TailLogsResponse_Logs) ProtoMessage() {}

func (x *TailLogsResponse_Logs) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_workflow_run_logs_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TailLogsResponse_Logs.ProtoReflect.Descriptor instead.
func (*TailLogsResponse_Logs) Descriptor() ([]byte, []int) {
	return file_flyteidl2_workflow_run_logs_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TailLogsResponse_Logs) GetLines() []*dataplane.LogLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

var File_flyteidl2_workflow_run_logs_service_proto protoreflect.FileDescriptor

var file_flyteidl2_workflow_run_logs_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x72, 0x75, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x1a,
	0x21, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x26, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x6c, 0x6f,
	0x67, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x0f, 0x54, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x61,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x1a, 0x3f, 0x0a, 0x04, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x6c, 0x6f,
	0x67, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x32, 0x6e, 0x0a, 0x0e, 0x52,
	0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a,
	0x08, 0x54, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x30, 0x01, 0x42, 0xd0, 0x01, 0x0a, 0x16,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x13, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0xa2, 0x02, 0x03, 0x46, 0x57, 0x58, 0xaa, 0x02, 0x12,
	0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0xca, 0x02, 0x12, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0xe2, 0x02, 0x1e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x5c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x46, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x3a, 0x3a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl2_workflow_run_logs_service_proto_rawDescOnce sync.Once
	file_flyteidl2_workflow_run_logs_service_proto_rawDescData = file_flyteidl2_workflow_run_logs_service_proto_rawDesc
)

func file_flyteidl2_workflow_run_logs_service_proto_rawDescGZIP() []byte {
	file_flyteidl2_workflow_run_logs_service_proto_rawDescOnce.Do(func() {
		file_flyteidl2_workflow_run_logs_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_workflow_run_logs_service_proto_rawDescData)
	})
	return file_flyteidl2_workflow_run_logs_service_proto_rawDescData
}

var file_flyteidl2_workflow_run_logs_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_flyteidl2_workflow_run_logs_service_proto_goTypes = []interface{}{
	(*TailLogsRequest)(nil),         // 0: flyteidl2.workflow.TailLogsRequest
	(*TailLogsResponse)(nil),        // 1: flyteidl2.workflow.TailLogsResponse
	(*TailLogsResponse_Logs)(nil),   // 2: flyteidl2.workflow.TailLogsResponse.Logs
	(*common.ActionIdentifier)(nil), // 3: flyteidl2.common.ActionIdentifier
	(*dataplane.LogLine)(nil),       // 4: flyteidl2.logs.dataplane.LogLine
}
var file_flyteidl2_workflow_run_logs_service_proto_depIdxs = []int32{
	3, // 0: flyteidl2.workflow.TailLogsRequest.action_id:type_name -> flyteidl2.common.ActionIdentifier
	2, // 1: flyteidl2.workflow.TailLogsResponse.logs:type_name -> flyteidl2.workflow.TailLogsResponse.Logs
	4, // 2: flyteidl2.workflow.TailLogsResponse.Logs.lines:type_name -> flyteidl2.logs.dataplane.LogLine
	0, // 3: flyteidl2.workflow.RunLogsService.TailLogs:input_type -> flyteidl2.workflow.TailLogsRequest
	1, // 4: flyteidl2.workflow.RunLogsService.TailLogs:output_type -> flyteidl2.workflow.TailLogsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_flyteidl2_workflow_run_logs_service_proto_init() }
func file_flyteidl2_workflow_run_logs_service_proto_init() {
	if File_flyteidl2_workflow_run_logs_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_workflow_run_logs_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TailLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_run_logs_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TailLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_workflow_run_logs_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TailLogsResponse_Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_workflow_run_logs_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flyteidl2_workflow_run_logs_service_proto_goTypes,
		DependencyIndexes: file_flyteidl2_workflow_run_logs_service_proto_depIdxs,
		MessageInfos:      file_flyteidl2_workflow_run_logs_service_proto_msgTypes,
	}.Build()
	File_flyteidl2_workflow_run_logs_service_proto = out.File
	file_flyteidl2_workflow_run_logs_service_proto_rawDesc = nil
	file_flyteidl2_workflow_run_logs_service_proto_goTypes = nil
	file_flyteidl2_workflow_run_logs_service_proto_depIdxs = nil
}

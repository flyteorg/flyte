// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl2/core/interface.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a strongly typed variable.
type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Variable literal type.
	Type *LiteralType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// +optional string describing input variable
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// +optional This object allows the user to specify how Artifacts are created.
	// name, tag, partitions can be specified. The other fields (version and project/domain) are ignored.
	ArtifactPartialId *ArtifactID  `protobuf:"bytes,3,opt,name=artifact_partial_id,json=artifactPartialId,proto3" json:"artifact_partial_id,omitempty"`
	ArtifactTag       *ArtifactTag `protobuf:"bytes,4,opt,name=artifact_tag,json=artifactTag,proto3" json:"artifact_tag,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_core_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_core_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_flyteidl2_core_interface_proto_rawDescGZIP(), []int{0}
}

func (x *Variable) GetType() *LiteralType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Variable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Variable) GetArtifactPartialId() *ArtifactID {
	if x != nil {
		return x.ArtifactPartialId
	}
	return nil
}

func (x *Variable) GetArtifactTag() *ArtifactTag {
	if x != nil {
		return x.ArtifactTag
	}
	return nil
}

// A map of Variables
type VariableMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines a map of variable names to variables.
	Variables map[string]*Variable `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VariableMap) Reset() {
	*x = VariableMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_core_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableMap) ProtoMessage() {}

func (x *VariableMap) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_core_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableMap.ProtoReflect.Descriptor instead.
func (*VariableMap) Descriptor() ([]byte, []int) {
	return file_flyteidl2_core_interface_proto_rawDescGZIP(), []int{1}
}

func (x *VariableMap) GetVariables() map[string]*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

// Defines strongly typed inputs and outputs.
type TypedInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  *VariableMap `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs *VariableMap `protobuf:"bytes,2,opt,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *TypedInterface) Reset() {
	*x = TypedInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_core_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypedInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedInterface) ProtoMessage() {}

func (x *TypedInterface) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_core_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypedInterface.ProtoReflect.Descriptor instead.
func (*TypedInterface) Descriptor() ([]byte, []int) {
	return file_flyteidl2_core_interface_proto_rawDescGZIP(), []int{2}
}

func (x *TypedInterface) GetInputs() *VariableMap {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TypedInterface) GetOutputs() *VariableMap {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// A parameter is used as input to a launch plan and has
// the special ability to have a default value or mark itself as required.
type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +required Variable. Defines the type of the variable backing this parameter.
	Var *Variable `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	// +optional
	//
	// Types that are assignable to Behavior:
	//
	//	*Parameter_Default
	//	*Parameter_Required
	//	*Parameter_ArtifactQuery
	//	*Parameter_ArtifactId
	Behavior isParameter_Behavior `protobuf_oneof:"behavior"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_core_interface_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_core_interface_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_flyteidl2_core_interface_proto_rawDescGZIP(), []int{3}
}

func (x *Parameter) GetVar() *Variable {
	if x != nil {
		return x.Var
	}
	return nil
}

func (m *Parameter) GetBehavior() isParameter_Behavior {
	if m != nil {
		return m.Behavior
	}
	return nil
}

func (x *Parameter) GetDefault() *Literal {
	if x, ok := x.GetBehavior().(*Parameter_Default); ok {
		return x.Default
	}
	return nil
}

func (x *Parameter) GetRequired() bool {
	if x, ok := x.GetBehavior().(*Parameter_Required); ok {
		return x.Required
	}
	return false
}

func (x *Parameter) GetArtifactQuery() *ArtifactQuery {
	if x, ok := x.GetBehavior().(*Parameter_ArtifactQuery); ok {
		return x.ArtifactQuery
	}
	return nil
}

func (x *Parameter) GetArtifactId() *ArtifactID {
	if x, ok := x.GetBehavior().(*Parameter_ArtifactId); ok {
		return x.ArtifactId
	}
	return nil
}

type isParameter_Behavior interface {
	isParameter_Behavior()
}

type Parameter_Default struct {
	// Defines a default value that has to match the variable type defined.
	Default *Literal `protobuf:"bytes,2,opt,name=default,proto3,oneof"`
}

type Parameter_Required struct {
	// +optional, is this value required to be filled.
	Required bool `protobuf:"varint,3,opt,name=required,proto3,oneof"`
}

type Parameter_ArtifactQuery struct {
	// This is an execution time search basically that should result in exactly one Artifact with a Type that
	// matches the type of the variable.
	ArtifactQuery *ArtifactQuery `protobuf:"bytes,4,opt,name=artifact_query,json=artifactQuery,proto3,oneof"`
}

type Parameter_ArtifactId struct {
	ArtifactId *ArtifactID `protobuf:"bytes,5,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

func (*Parameter_Default) isParameter_Behavior() {}

func (*Parameter_Required) isParameter_Behavior() {}

func (*Parameter_ArtifactQuery) isParameter_Behavior() {}

func (*Parameter_ArtifactId) isParameter_Behavior() {}

// A map of Parameters.
type ParameterMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines a map of parameter names to parameters.
	Parameters map[string]*Parameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ParameterMap) Reset() {
	*x = ParameterMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl2_core_interface_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParameterMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterMap) ProtoMessage() {}

func (x *ParameterMap) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl2_core_interface_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterMap.ProtoReflect.Descriptor instead.
func (*ParameterMap) Descriptor() ([]byte, []int) {
	return file_flyteidl2_core_interface_proto_rawDescGZIP(), []int{4}
}

func (x *ParameterMap) GetParameters() map[string]*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_flyteidl2_core_interface_proto protoreflect.FileDescriptor

var file_flyteidl2_core_interface_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x1a, 0x20, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x01,
	0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a,
	0x13, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x61, 0x67, 0x52, 0x0b, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x61, 0x67, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x48, 0x0a, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x0e, 0x54,
	0x79, 0x70, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x70,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x03, 0x76, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x03,
	0x76, 0x61, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3d,
	0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x48,
	0x00, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x42, 0x0a, 0x0a,
	0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x4c, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x58, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0xb3, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x32, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0xa2, 0x02, 0x03, 0x46, 0x43, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x32, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0xca, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x32, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0xe2, 0x02, 0x1a, 0x46, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x32, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x32, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl2_core_interface_proto_rawDescOnce sync.Once
	file_flyteidl2_core_interface_proto_rawDescData = file_flyteidl2_core_interface_proto_rawDesc
)

func file_flyteidl2_core_interface_proto_rawDescGZIP() []byte {
	file_flyteidl2_core_interface_proto_rawDescOnce.Do(func() {
		file_flyteidl2_core_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl2_core_interface_proto_rawDescData)
	})
	return file_flyteidl2_core_interface_proto_rawDescData
}

var file_flyteidl2_core_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_flyteidl2_core_interface_proto_goTypes = []interface{}{
	(*Variable)(nil),       // 0: flyteidl2.core.Variable
	(*VariableMap)(nil),    // 1: flyteidl2.core.VariableMap
	(*TypedInterface)(nil), // 2: flyteidl2.core.TypedInterface
	(*Parameter)(nil),      // 3: flyteidl2.core.Parameter
	(*ParameterMap)(nil),   // 4: flyteidl2.core.ParameterMap
	nil,                    // 5: flyteidl2.core.VariableMap.VariablesEntry
	nil,                    // 6: flyteidl2.core.ParameterMap.ParametersEntry
	(*LiteralType)(nil),    // 7: flyteidl2.core.LiteralType
	(*ArtifactID)(nil),     // 8: flyteidl2.core.ArtifactID
	(*ArtifactTag)(nil),    // 9: flyteidl2.core.ArtifactTag
	(*Literal)(nil),        // 10: flyteidl2.core.Literal
	(*ArtifactQuery)(nil),  // 11: flyteidl2.core.ArtifactQuery
}
var file_flyteidl2_core_interface_proto_depIdxs = []int32{
	7,  // 0: flyteidl2.core.Variable.type:type_name -> flyteidl2.core.LiteralType
	8,  // 1: flyteidl2.core.Variable.artifact_partial_id:type_name -> flyteidl2.core.ArtifactID
	9,  // 2: flyteidl2.core.Variable.artifact_tag:type_name -> flyteidl2.core.ArtifactTag
	5,  // 3: flyteidl2.core.VariableMap.variables:type_name -> flyteidl2.core.VariableMap.VariablesEntry
	1,  // 4: flyteidl2.core.TypedInterface.inputs:type_name -> flyteidl2.core.VariableMap
	1,  // 5: flyteidl2.core.TypedInterface.outputs:type_name -> flyteidl2.core.VariableMap
	0,  // 6: flyteidl2.core.Parameter.var:type_name -> flyteidl2.core.Variable
	10, // 7: flyteidl2.core.Parameter.default:type_name -> flyteidl2.core.Literal
	11, // 8: flyteidl2.core.Parameter.artifact_query:type_name -> flyteidl2.core.ArtifactQuery
	8,  // 9: flyteidl2.core.Parameter.artifact_id:type_name -> flyteidl2.core.ArtifactID
	6,  // 10: flyteidl2.core.ParameterMap.parameters:type_name -> flyteidl2.core.ParameterMap.ParametersEntry
	0,  // 11: flyteidl2.core.VariableMap.VariablesEntry.value:type_name -> flyteidl2.core.Variable
	3,  // 12: flyteidl2.core.ParameterMap.ParametersEntry.value:type_name -> flyteidl2.core.Parameter
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_flyteidl2_core_interface_proto_init() }
func file_flyteidl2_core_interface_proto_init() {
	if File_flyteidl2_core_interface_proto != nil {
		return
	}
	file_flyteidl2_core_artifact_id_proto_init()
	file_flyteidl2_core_literals_proto_init()
	file_flyteidl2_core_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl2_core_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_core_interface_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_core_interface_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypedInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_core_interface_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl2_core_interface_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParameterMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flyteidl2_core_interface_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Parameter_Default)(nil),
		(*Parameter_Required)(nil),
		(*Parameter_ArtifactQuery)(nil),
		(*Parameter_ArtifactId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl2_core_interface_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl2_core_interface_proto_goTypes,
		DependencyIndexes: file_flyteidl2_core_interface_proto_depIdxs,
		MessageInfos:      file_flyteidl2_core_interface_proto_msgTypes,
	}.Build()
	File_flyteidl2_core_interface_proto = out.File
	file_flyteidl2_core_interface_proto_rawDesc = nil
	file_flyteidl2_core_interface_proto_goTypes = nil
	file_flyteidl2_core_interface_proto_depIdxs = nil
}

// Code generated by mockery. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// isEnrichedIdentity_Principal is an autogenerated mock type for the isEnrichedIdentity_Principal type
type isEnrichedIdentity_Principal struct {
	mock.Mock
}

type isEnrichedIdentity_Principal_Expecter struct {
	mock *mock.Mock
}

func (_m *isEnrichedIdentity_Principal) EXPECT() *isEnrichedIdentity_Principal_Expecter {
	return &isEnrichedIdentity_Principal_Expecter{mock: &_m.Mock}
}

// isEnrichedIdentity_Principal provides a mock function with no fields
func (_m *isEnrichedIdentity_Principal) isEnrichedIdentity_Principal() {
	_m.Called()
}

// isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isEnrichedIdentity_Principal'
type isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call struct {
	*mock.Call
}

// isEnrichedIdentity_Principal is a helper method to define mock.On call
func (_e *isEnrichedIdentity_Principal_Expecter) isEnrichedIdentity_Principal() *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call {
	return &isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call{Call: _e.mock.On("isEnrichedIdentity_Principal")}
}

func (_c *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call) Run(run func()) *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call) Return() *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call {
	_c.Call.Return()
	return _c
}

func (_c *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call) RunAndReturn(run func()) *isEnrichedIdentity_Principal_isEnrichedIdentity_Principal_Call {
	_c.Run(run)
	return _c
}

// newIsEnrichedIdentity_Principal creates a new instance of isEnrichedIdentity_Principal. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsEnrichedIdentity_Principal(t interface {
	mock.TestingT
	Cleanup(func())
}) *isEnrichedIdentity_Principal {
	mock := &isEnrichedIdentity_Principal{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

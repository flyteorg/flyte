// Code generated by mockery. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// isResource_Resource is an autogenerated mock type for the isResource_Resource type
type isResource_Resource struct {
	mock.Mock
}

type isResource_Resource_Expecter struct {
	mock *mock.Mock
}

func (_m *isResource_Resource) EXPECT() *isResource_Resource_Expecter {
	return &isResource_Resource_Expecter{mock: &_m.Mock}
}

// isResource_Resource provides a mock function with no fields
func (_m *isResource_Resource) isResource_Resource() {
	_m.Called()
}

// isResource_Resource_isResource_Resource_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isResource_Resource'
type isResource_Resource_isResource_Resource_Call struct {
	*mock.Call
}

// isResource_Resource is a helper method to define mock.On call
func (_e *isResource_Resource_Expecter) isResource_Resource() *isResource_Resource_isResource_Resource_Call {
	return &isResource_Resource_isResource_Resource_Call{Call: _e.mock.On("isResource_Resource")}
}

func (_c *isResource_Resource_isResource_Resource_Call) Run(run func()) *isResource_Resource_isResource_Resource_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isResource_Resource_isResource_Resource_Call) Return() *isResource_Resource_isResource_Resource_Call {
	_c.Call.Return()
	return _c
}

func (_c *isResource_Resource_isResource_Resource_Call) RunAndReturn(run func()) *isResource_Resource_isResource_Resource_Call {
	_c.Run(run)
	return _c
}

// newIsResource_Resource creates a new instance of isResource_Resource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsResource_Resource(t interface {
	mock.TestingT
	Cleanup(func())
}) *isResource_Resource {
	mock := &isResource_Resource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flyte-binary.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "flyte-binary.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- tpl ( .Values.commonLabels | toYaml ) . | nindent 4 }}
    {{- end }}
    {{- if .Values.deployment.labels }}
    {{- tpl ( .Values.deployment.labels | toYaml ) . | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- tpl ( .Values.commonAnnotations | toYaml ) . | nindent 4 }}
    {{- end }}
    {{- if .Values.deployment.annotations }}
    {{- tpl ( .Values.deployment.annotations | toYaml ) . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "flyte-binary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "flyte-binary.selectorLabels" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- tpl ( .Values.commonLabels | toYaml ) . | nindent 8 }}
        {{- end }}
        {{- if .Values.deployment.podLabels }}
        {{- tpl ( .Values.deployment.podLabels | toYaml ) . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if not (include "flyte-binary.configuration.externalConfiguration" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/configuration-secret: {{ include (print $.Template.BasePath "/config-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if not .Values.clusterResourceTemplates.externalConfigMap }}
        checksum/cluster-resource-templates: {{ include (print $.Template.BasePath "/cluster-resource-templates.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.configuration.auth.enabled }}
        checksum/admin-auth-secret: {{ include (print $.Template.BasePath "/admin-auth-secret.yaml") . | sha256sum }}
        {{- if not .Values.configuration.auth.clientSecretsExternalSecretRef }}
        checksum/auth-client-secret: {{ include (print $.Template.BasePath "/auth-client-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- end }}
        {{- if .Values.commonAnnotations }}
        {{- tpl ( .Values.commonAnnotations | toYaml ) . | nindent 8 }}
        {{- end }}
        {{- if .Values.deployment.podAnnotations }}
        {{- tpl ( .Values.deployment.podAnnotations | toYaml ) . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.deployment.extraPodSpec }}
      {{- tpl ( .Values.deployment.extraPodSpec | toYaml ) . | nindent 6 }}
      {{- end }}
      {{- if .Values.deployment.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.deployment.podSecurityContext "enabled" | toYaml | nindent 12 }}
      {{- end }}
      serviceAccountName: {{ include "flyte-binary.serviceAccountName" . }}
      {{- if or .Values.deployment.initContainers (not (include "flyte-binary.configuration.externalConfiguration" .)) }}
      initContainers:
        {{- if not (include "flyte-binary.configuration.externalConfiguration" .) }}
        - name: wait-for-db
          {{- with .Values.deployment.waitForDB.image }}
          image: {{ printf "%s:%s" .repository .tag | quote }}
          imagePullPolicy: {{ .pullPolicy | quote }}
          {{- end }}
          command:
            {{- if .Values.deployment.waitForDB.command }}
            {{- tpl ( .Values.deployment.waitForDB.command | toYaml ) . | nindent 12 }}
            {{- else }}
            - sh
            - -ec
            {{- end }}
          args:
            {{- if .Values.deployment.waitForDB.args }}
            {{- tpl ( .Values.deployment.waitForDB.args | toYaml ) . | nindent 12 }}
            {{- else }}
            {{- with .Values.configuration.database }}
            - |
              until pg_isready \
                -h {{ tpl .host $ }} \
                -p {{ .port }} \
                -U {{ .username }}
              do
                echo waiting for database
                sleep 0.1
              done
            {{- end }}
            {{- end }}
          {{- if .Values.deployment.resources }}
          resources: {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.configuration.auth.enabled }}
        - name: gen-admin-auth-secret
          {{- with .Values.deployment.image }}
          image: {{ printf "%s:%s" .repository .tag | quote }}
          imagePullPolicy: {{ .pullPolicy | quote }}
          {{- end }}
          command:
            {{- if .Values.deployment.genAdminAuthSecret.command }}
            {{- tpl ( .Values.deployment.genAdminAuthSecret.command | toYaml ) . | nindent 12 }}
            {{- else }}
            - sh
            - -ec
            {{- end }}
          args:
            {{- if .Values.deployment.genAdminAuthSecret.args }}
            {{- tpl ( .Values.deployment.genAdminAuthSecret.args | toYaml ) . | nindent 12 }}
            {{- else }}
            - |
              flyte --config=/etc/flyte/config.d/*.yaml \
                secrets init --localPath /tmp/admin-auth-secret
              flyte --config=/etc/flyte/config.d/*.yaml \
                secrets create \
                --name {{ include "flyte-binary.configuration.auth.adminAuthSecretName" . }} \
                --fromPath /tmp/admin-auth-secret
            {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /etc/flyte/config.d
          {{- if .Values.deployment.resources }}
          resources: {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.deployment.initContainers }}
        {{- tpl ( .Values.deployment.initContainers | toYaml ) . | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: flyte
          {{- with .Values.deployment.image }}
          image: {{ printf "%s:%s" .repository .tag | quote }}
          imagePullPolicy: {{ .pullPolicy | quote }}
          {{- end }}
          {{- if .Values.deployment.command }}
          command: {{- tpl ( .Values.deployment.command | toYaml ) . | nindent 12 }}
          {{- end }}
          args:
            {{- if .Values.deployment.args }}
            {{- tpl ( .Values.deployment.args | toYaml ) . | nindent 12 }}
            {{- else }}
            - start
            - --config
            - /etc/flyte/config.d/*.yaml
            {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.deployment.extraEnvVars }}
            {{- tpl ( .Values.deployment.extraEnvVars | toYaml ) . | nindent 12 }}
            {{- end }}
          {{- if or .Values.deployment.extraEnvVarsConfigMap .Values.deployment.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.deployment.extraEnvVarsConfigMap }}
            - configMapRef:
                name: {{ .Values.deployment.extraEnvVarsConfigMap }}
            {{- end }}
            {{- if .Values.deployment.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.deployment.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8088
            - name: grpc
              containerPort: 8089
            - name: webhook
              containerPort: 9443
          {{- if .Values.deployment.startupProbe }}
          startupProbe: {{- tpl ( .Values.deployment.startupProbe | toYaml ) . | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .Values.deployment.livenessProbe }}
          {{- tpl ( .Values.deployment.livenessProbe | toYaml ) . | nindent 12 }}
          {{- else }}
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
          {{- end }}
          readinessProbe:
          {{- if .Values.deployment.readinessProbe }}
          {{- tpl ( .Values.deployment.readinessProbe | toYaml ) . | nindent 12 }}
          {{- else }}
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
          {{- end }}
          {{- if .Values.deployment.resources }}
          resources: {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.lifecycleHooks }}
          lifecycle: {{- tpl ( .Values.deployment.lifecycleHooks | toYaml ) . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.configuration.auth.enabled }}
            - name: auth
              mountPath: /etc/secrets
            {{- end }}
            - name: cluster-resource-templates
              mountPath: /etc/flyte/cluster-resource-templates
            - name: config
              mountPath: /etc/flyte/config.d
            - name: state
              mountPath: /var/run/flyte
            {{- if .Values.deployment.extraVolumeMounts }}
            {{- tpl ( .Values.deployment.extraVolumeMounts | toYaml ) . | nindent 12 }}
            {{- end }}
        {{- if .Values.deployment.sidecars }}
        {{- tpl ( .Values.deployment.sidecars | toYaml ) . | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.configuration.auth.enabled }}
        - name: auth
          projected:
            sources:
            - secret:
                name: {{ include "flyte-binary.configuration.auth.adminAuthSecretName" . }}
            {{- if .Values.configuration.auth.clientSecretsExternalSecretRef }}
            - secret:
                name: {{ tpl .Values.configuration.auth.clientSecretsExternalSecretRef . }}
            {{- else }}
            - secret:
                name: {{ include "flyte-binary.configuration.auth.clientSecretName" . }}
            {{- end }}
        {{- end }}
        - name: cluster-resource-templates
          {{- if .Values.clusterResourceTemplates.externalConfigMap }}
          configMap:
            name: {{ tpl .Values.clusterResourceTemplates.externalConfigMap . }}
          {{- else }}
          projected:
            sources:
            - configMap:
                name: {{ include "flyte-binary.clusterResourceTemplates.configMapName" . }}
            {{- if .Values.clusterResourceTemplates.inlineConfigMap }}
            - configMap:
                name: {{ tpl .Values.clusterResourceTemplates.inlineConfigMap . }}
            {{- end }}
          {{- end }}
        - name: config
          {{- if (include "flyte-binary.configuration.externalConfiguration" .) }}
          projected:
            sources:
            {{- if .Values.configuration.externalConfigMap }}
            - configMap:
                name: {{ tpl .Values.configuration.externalConfigMap . }}
            {{- end }}
            {{- if .Values.configuration.externalSecretRef }}
            - secret:
                name: {{ tpl .Values.configuration.externalSecretRef . }}
            {{- end }}
          {{- else }}
          projected:
            sources:
            - configMap:
                name: {{ include "flyte-binary.configuration.configMapName" . }}
            - secret:
                name: {{ include "flyte-binary.configuration.configSecretName" . }}
            {{- if .Values.configuration.inlineConfigMap }}
            - configMap:
                name: {{ tpl .Values.configuration.inlineConfigMap . }}
            {{- end }}
            {{- if .Values.configuration.inlineSecretRef }}
            - secret:
                name: {{ tpl .Values.configuration.inlineSecretRef . }}
            {{- end }}
          {{- end }}
        - name: state
          emptyDir: {}
        {{- if .Values.deployment.extraVolumes }}
        {{- tpl ( .Values.deployment.extraVolumes | toYaml ) . | nindent 8 }}
        {{- end }}

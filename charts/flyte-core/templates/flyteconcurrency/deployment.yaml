{{- if .Values.concurrency_controller.enabled}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "flyteconcurrency.name" . }}
  namespace: {{ template "flyte.namespace" . }}
  labels: {{ include "flyteconcurrency.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "flyteconcurrency.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        configChecksum: {{ include (print .Template.BasePath "/admin/configmap.yaml") . | sha256sum | trunc 63 | quote }}
        {{- with .Values.flyteconcurrency.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels: {{ include "flyteconcurrency.podLabels" . | nindent 8 }}
    spec:
      {{- with .Values.flyteconcurrency.securityContext }}
      securityContext: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- if .Values.flyteconcurrency.priorityClassName }}
      priorityClassName: {{ .Values.flyteconcurrency.priorityClassName }}
      {{- end }}
      containers:
      {{- if .Values.flyteconcurrency.simulationMode }}
      - command:
        - /bin/sh
        - -c
        - |
          echo "Starting concurrency controller simulation..."
          echo "We're using the GetConcurrencyConfig() implementation that was added to ApplicationConfigurationProvider."
          echo "Normally this would be used by a 'concurrency run' command in flyteadmin."
          echo "However, the command is not yet available in the released image, so we're simulating what it would do."
          echo "Concurrency controller is simulated as running with the following configuration:"
          echo "  - ProcessingInterval: {{ .Values.configmap.concurrencyConfig.processingInterval }}"
          echo "  - RefreshInterval: {{ .Values.configmap.concurrencyConfig.refreshInterval }}"
          echo "  - Workers: {{ .Values.configmap.concurrencyConfig.workers }}"
          echo "  - MaxRetries: {{ .Values.configmap.concurrencyConfig.maxRetries }}"
          echo "  - Enabled: {{ .Values.configmap.concurrencyConfig.enabled }}"
          echo "  - ProfilerPort: {{ .Values.configmap.concurrencyConfig.profilerPort }}"
          echo "The controller implementation still has some missing dependencies:"
          echo "  - server.GetDB"
          echo "  - server.GetRepoConfig"
          echo "  - executor.NewWorkflowExecutor"
          echo "These need to be implemented to complete the controller."
          while true; do
            echo "Concurrency controller is simulated as running..."
            sleep 60
          done
        image: "{{ .Values.flyteconcurrency.simulationImage.repository }}:{{ .Values.flyteconcurrency.simulationImage.tag }}"
        imagePullPolicy: "{{ .Values.flyteconcurrency.simulationImage.pullPolicy }}"
        name: flyteconcurrency
        ports:
          - containerPort: {{ .Values.configmap.concurrencyConfig.profilerPort }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources: {{- toYaml .Values.flyteconcurrency.resources | nindent 10 }}
        volumeMounts: 
        - mountPath: /etc/flyte/config
          name: config-volume
      {{- else }}
      {{- if .Values.flyteconcurrency.runPrecheck }}
      initContainers:
      - command:
        - flyteadmin
        - --config
        - {{ .Values.flyteconcurrency.configPath }}
        - concurrency
        - precheck
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "{{ .Values.flyteconcurrency.image.repository }}:{{ .Values.flyteconcurrency.image.tag }}"
        imagePullPolicy: "{{ .Values.flyteconcurrency.image.pullPolicy }}"
        name: flyteconcurrency-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources: {{- toYaml .Values.flyteconcurrency.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/flyte/config
          name: config-volume
      {{- end }}
      - command:
        - flyteadmin
        - --config
        - {{ .Values.flyteconcurrency.configPath }}
        - concurrency
        - run
        {{- if .Values.flyteconcurrency.podEnv }}
        env:
          {{- with .Values.flyteconcurrency.podEnv -}}
          {{- toYaml . | nindent 8 }}
          {{- end }}
        {{- end }}
        image: "{{ .Values.flyteconcurrency.image.repository }}:{{ .Values.flyteconcurrency.image.tag }}"
        imagePullPolicy: "{{ .Values.flyteconcurrency.image.pullPolicy }}"
        name: flyteconcurrency
        ports:
          - containerPort: {{ .Values.configmap.concurrencyConfig.profilerPort }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources: {{- toYaml .Values.flyteconcurrency.resources | nindent 10 }}
        volumeMounts: {{- include "databaseSecret.volumeMount" . | nindent 8 }}
        - mountPath: /etc/flyte/config
          name: config-volume
        {{- if .Values.secrets.adminOauthClientCredentials.enabled }}
        - name: auth
          mountPath: /etc/secrets/
        {{- end }}
        {{- with .Values.flyteconcurrency.additionalVolumeMounts -}}
        {{ tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.flyteconcurrency.additionalContainers -}}
      {{- tpl (toYaml .) $ | nindent 6}}
      {{- end }}
      serviceAccountName: {{ template "flyteconcurrency.name" . }}
      volumes: {{- include "databaseSecret.volume" . | nindent 6 }}
      - emptyDir: {}
        name: shared-data
      - configMap:
          name: flyte-concurrency-config
        name: config-volume
      {{- if .Values.secrets.adminOauthClientCredentials.enabled }}
      - name: auth
        secret:
          secretName: flyte-secret-auth
      {{- end }}
      {{- with .Values.flyteconcurrency.additionalVolumes -}}
      {{ tpl (toYaml .) $ | nindent 6 }}
      {{- end }}
      {{- with .Values.flyteconcurrency.nodeSelector }}
      nodeSelector: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.flyteconcurrency.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.flyteconcurrency.tolerations }}
      tolerations: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
{{- end }} 
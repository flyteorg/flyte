{{- define "grpcRoutes" -}}
{{- $grpcPort := 81 -}}
{{- if eq .Values.configmap.adminServer.server.security.secure true -}}
  {{- $grpcPort = 80 -}}
{{- end }}
# NOTE: Port 81 in flyteadmin is the GRPC server port for FlyteAdmin.
- path: /flyteidl.service.SignalService
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.SignalService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.AdminService
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.AdminService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.DataProxyService
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.DataProxyService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.AuthMetadataService
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.AuthMetadataService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.IdentityService
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /flyteidl.service.IdentityService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /grpc.health.v1.Health
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
- path: /grpc.health.v1.Health/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: flyteadmin
      port:
        number: {{ $grpcPort }}
  {{- end }}
  {{- if .Values.common.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "flyte.name" . }}
  namespace: {{ template "flyte.namespace" . }}
  {{- with .Values.common.ingress.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4}}
  {{- end }}
spec:
  ingressClassName: {{ .Values.common.ingress.ingressClassName | quote }}
  rules:
    - http:
        paths:
          {{- if .Values.common.ingress.albSSLRedirect }}
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
          {{- end }}
          # This is useful only for frontend development
          {{- if .Values.common.ingress.webpackHMR }}
          - path: /__webpack_hmr
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteconsole
                port:
                  number: 80
          {{- end }}
          # NOTE: If you change this, you must update the BASE_URL value in flyteconsole.yaml
          - path: /console
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteconsole
                port:
                  number: 80
          - path: /console/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteconsole
                port:
                  number: 80
          - path: /api
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /api/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /healthcheck
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /v1/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
{{- if .Values.deployRedoc }}
          # Port 87 in FlyteAdmin maps to the redoc container.
          - path: /openapi
            pathType: ImplementationSpecific
            backend:
              service:
                name: redoc
                port:
                  number: 87
          # Port 87 in FlyteAdmin maps to the redoc container.
          - path: /openapi/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: redoc
                port:
                  number: 87
{{- end }}
          - path: /.well-known
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /.well-known/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /login
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /login/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /logout
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /logout/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /callback
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /callback/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /me
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /config
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /config/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /oauth2
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          - path: /oauth2/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: flyteadmin
                port:
                  number: 80
          {{- if not .Values.common.ingress.separateGrpcIngress }}
          {{- include "grpcRoutes" . | nindent 10 -}}
          {{- end }}
      host: {{ tpl (toYaml .Values.common.ingress.host) $ }}
  {{- if .Values.common.ingress.tls.enabled }}
  tls:
    - secretName: {{ .Values.common.ingress.tls.secretName | default (printf "%s-flyte-tls" .Release.Name) }}
      hosts:
        - {{ tpl (toYaml .Values.common.ingress.host) $ }}
  {{ end }}


  {{- if .Values.common.ingress.separateGrpcIngress }}
# Certain ingress controllers like nginx cannot serve HTTP 1 and GRPC with a single ingress because GRPC can only
# enabled on the ingress object, not on backend services (GRPC annotation is set on the ingress, not on the services).
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "flyte.name" . }}-grpc
  namespace: {{ template "flyte.namespace" . }}
  {{- $annotations := .Values.common.ingress.annotations | deepCopy -}}
  {{- $_ := merge $annotations .Values.common.ingress.separateGrpcIngressAnnotations -}}
  {{- with $annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4}}
  {{- end }}
spec:
  ingressClassName: {{ .Values.common.ingress.ingressClassName | quote }}
  rules:
    - host: {{ tpl (toYaml .Values.common.ingress.host) $ }}
      http:
        paths:
          # {{- if .Values.common.ingress.albSSLRedirect }}
          # - backend:
          #     serviceName: ssl-redirect
          #     servicePort: use-annotation
          #   path: /*
          #   pathType: ImplementationSpecific
          # {{- end }}
          {{- include "grpcRoutes" . | nindent 10 -}}
  {{- if .Values.common.ingress.tls.enabled }}
  tls:
    - secretName: {{ .Values.common.ingress.tls.secretName | default (printf "%s-flyte-tls" .Release.Name) }}
      hosts:
        - {{ tpl (toYaml .Values.common.ingress.host) $ }}
  {{ end }}
  {{- end }}
  {{- end }}

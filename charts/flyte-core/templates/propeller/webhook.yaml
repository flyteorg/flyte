{{- if .Values.flytepropeller.enabled }}
{{- if .Values.webhook.enabled }}
{{- $secret := (lookup "v1" "Secret" (include "flyte.namespace" .) "flyte-pod-webhook") -}}
apiVersion: v1
kind: Secret
metadata:
  name: flyte-pod-webhook
  namespace: {{ template "flyte.namespace" . }}
type: Opaque
data:
{{- if $secret }}
  tls.crt: |
    {{ index $secret.data "tls.crt" }}
  tls.key: |
    {{ index $secret.data "tls.key" }}
  ca.crt: |
    {{ index $secret.data "ca.crt" }}
{{- else -}}
{{/* Produces a 99 year valid CA and cert signed by the CA like:
    https://github.com/flyteorg/flyte/blob/81afb76b44931d827f8e898d097a7e8054a5b836/flytepropeller/cmd/controller/cmd/init_certs.go#L14-L36
*/}}
{{- $certValid := 36135 -}}
{{- $name := include "flyte-pod-webhook.name" . -}}
{{- $namespace := include "flyte.namespace" . -}}
{{- $svc := (printf "%v.%v" $name $namespace) -}}
{{- $cn := (printf "%v.svc" $svc) -}}
{{- $altnames := (list $name $svc $cn) -}}
{{- $ca := genCA "flyte-ca" $certValid -}}
{{- $cert := genSignedCert $cn nil $altnames $certValid $ca }}
  # ca issued cert
  tls.crt: |
    {{ $cert.Cert | b64enc }}
  # private key for cert
  tls.key: |
    {{ $cert.Key | b64enc }}
  # ca cert since the CA is generated here
  ca.crt: |
    {{ $ca.Cert | b64enc }}
{{- end }}
---
# Create the actual deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "flyte-pod-webhook.name" . }}
  namespace: {{ template "flyte.namespace" . }}
  labels:
    app: {{ template "flyte-pod-webhook.name" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "flyte-pod-webhook.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "flyte-pod-webhook.name" . }}
        app.kubernetes.io/name: {{ template "flyte-pod-webhook.name" . }}
        app.kubernetes.io/version: {{ .Values.flytepropeller.image.tag }}
        {{- with .Values.webhook.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        configChecksum: {{ include (print .Template.BasePath "/propeller/configmap.yaml") . | sha256sum | trunc 63 | quote }}
        {{- with .Values.webhook.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/path: {{ .Values.webhook.prometheus.path | quote }}
        prometheus.io/port: {{ .Values.webhook.prometheus.port | quote }}
        {{- with .Values.webhook.prometheus.enabled }}
        prometheus.io/scrape: "true"
        {{- end }}
    spec:
      {{- with .Values.webhook.securityContext }}
      securityContext: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "flyte-pod-webhook.name" . }}
      {{- if .Values.webhook.priorityClassName }}
      priorityClassName: {{ .Values.webhook.priorityClassName }}
      {{- end }}
      containers:
        - name: webhook
          image: "{{ .Values.flytepropeller.image.repository }}:{{ .Values.flytepropeller.image.tag }}"
          imagePullPolicy: "{{ .Values.flytepropeller.image.pullPolicy }}"
          command:
            - flytepropeller
          args:
            - webhook
            - --config
            - /etc/flyte/config/*.yaml
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        {{- if .Values.webhook.podEnv -}}
        {{- with .Values.webhook.podEnv -}}
        {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
          ports:
          - containerPort: 9443
          {{- if .Values.webhook.prometheus.enabled }}
          - containerPort: {{ .Values.webhook.prometheus.port }}
            name: debug
            protocol: TCP
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          {{- with .Values.webhook.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/flyte/config
              readOnly: true
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: flyte-propeller-config
        - name: webhook-certs
          secret:
            secretName: flyte-pod-webhook
      {{- with .Values.webhook.nodeSelector }}
      nodeSelector: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: {{ template "flyte-pod-webhook.name" . }}
  namespace: {{ template "flyte.namespace" . }}
  {{- with .Values.webhook.service.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
spec:
  selector:
    app: {{ template "flyte-pod-webhook.name" . }}
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 9443
---
# Create a ClusterRole for the webhook
# https://kubernetes.io/docs/admin/authorization/rbac/
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "flyte.namespace" . -}}-{{- template "flyte-pod-webhook.name" . }}
  namespace: {{ template "flyte.namespace" . }}
rules:
  - apiGroups:
      - "*"
    resources:
      - mutatingwebhookconfigurations
      - secrets
      - pods
      - replicasets/finalizers
    verbs:
      - get
      - create
      - update
      - patch
---
{{- if .Values.webhook.serviceAccount.create }}
# Create a Service Account for webhook
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "flyte-pod-webhook.name" . }}
  namespace: {{ template "flyte.namespace" . }}
  {{- with .Values.webhook.serviceAccount.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end}}
{{- end }}
  {{- with .Values.webhook.serviceAccount.imagePullSecrets }}
imagePullSecrets: {{ tpl (toYaml .) $ | nindent 2 }}
  {{- end }}
---
# Create a binding from Role -> ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "flyte.namespace" . -}}-{{- template "flyte-pod-webhook.name" . }}
  namespace: {{ template "flyte.namespace" . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "flyte.namespace" . -}}-{{- template "flyte-pod-webhook.name" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "flyte-pod-webhook.name" . }}
    namespace: {{ template "flyte.namespace" . }}
{{- end }}
{{- end }}

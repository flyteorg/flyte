// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl/admin/common.proto

package admin

import (
	core "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The status of the named entity is used to control its visibility in the UI.
type NamedEntityState int32

const (
	// By default, all named entities are considered active and under development.
	NamedEntityState_NAMED_ENTITY_ACTIVE NamedEntityState = 0
	// Archived named entities are no longer visible in the UI.
	NamedEntityState_NAMED_ENTITY_ARCHIVED NamedEntityState = 1
	// System generated entities that aren't explicitly created or managed by a user.
	NamedEntityState_SYSTEM_GENERATED NamedEntityState = 2
)

// Enum value maps for NamedEntityState.
var (
	NamedEntityState_name = map[int32]string{
		0: "NAMED_ENTITY_ACTIVE",
		1: "NAMED_ENTITY_ARCHIVED",
		2: "SYSTEM_GENERATED",
	}
	NamedEntityState_value = map[string]int32{
		"NAMED_ENTITY_ACTIVE":   0,
		"NAMED_ENTITY_ARCHIVED": 1,
		"SYSTEM_GENERATED":      2,
	}
)

func (x NamedEntityState) Enum() *NamedEntityState {
	p := new(NamedEntityState)
	*p = x
	return p
}

func (x NamedEntityState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NamedEntityState) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl_admin_common_proto_enumTypes[0].Descriptor()
}

func (NamedEntityState) Type() protoreflect.EnumType {
	return &file_flyteidl_admin_common_proto_enumTypes[0]
}

func (x NamedEntityState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NamedEntityState.Descriptor instead.
func (NamedEntityState) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{0}
}

type Sort_Direction int32

const (
	// By default, fields are sorted in descending order.
	Sort_DESCENDING Sort_Direction = 0
	Sort_ASCENDING  Sort_Direction = 1
)

// Enum value maps for Sort_Direction.
var (
	Sort_Direction_name = map[int32]string{
		0: "DESCENDING",
		1: "ASCENDING",
	}
	Sort_Direction_value = map[string]int32{
		"DESCENDING": 0,
		"ASCENDING":  1,
	}
)

func (x Sort_Direction) Enum() *Sort_Direction {
	p := new(Sort_Direction)
	*p = x
	return p
}

func (x Sort_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl_admin_common_proto_enumTypes[1].Descriptor()
}

func (Sort_Direction) Type() protoreflect.EnumType {
	return &file_flyteidl_admin_common_proto_enumTypes[1]
}

func (x Sort_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort_Direction.Descriptor instead.
func (Sort_Direction) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{3, 0}
}

// Encapsulation of fields that identifies a Flyte resource.
// A Flyte resource can be a task, workflow or launch plan.
// A resource can internally have multiple versions and is uniquely identified
// by project, domain, and name.
type NamedEntityIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the project the resource belongs to.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the domain the resource belongs to.
	// A domain can be considered as a subset within a specific project.
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// User provided value for the resource.
	// The combination of project + domain + name uniquely identifies the resource.
	// +optional - in certain contexts - like 'List API', 'Launch plans'
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Optional, org key applied to the resource.
	Org string `protobuf:"bytes,4,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *NamedEntityIdentifier) Reset() {
	*x = NamedEntityIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityIdentifier) ProtoMessage() {}

func (x *NamedEntityIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityIdentifier.ProtoReflect.Descriptor instead.
func (*NamedEntityIdentifier) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{0}
}

func (x *NamedEntityIdentifier) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NamedEntityIdentifier) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NamedEntityIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamedEntityIdentifier) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Additional metadata around a named entity.
type NamedEntityMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common description across all versions of the entity
	// +optional
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Shared state across all version of the entity
	// At this point in time, only workflow entities can have their state archived.
	State NamedEntityState `protobuf:"varint,2,opt,name=state,proto3,enum=flyteidl.admin.NamedEntityState" json:"state,omitempty"`
}

func (x *NamedEntityMetadata) Reset() {
	*x = NamedEntityMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityMetadata) ProtoMessage() {}

func (x *NamedEntityMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityMetadata.ProtoReflect.Descriptor instead.
func (*NamedEntityMetadata) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{1}
}

func (x *NamedEntityMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NamedEntityMetadata) GetState() NamedEntityState {
	if x != nil {
		return x.State
	}
	return NamedEntityState_NAMED_ENTITY_ACTIVE
}

// Encapsulates information common to a NamedEntity, a Flyte resource such as a task,
// workflow or launch plan. A NamedEntity is exclusively identified by its resource type
// and identifier.
type NamedEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource type of the named entity. One of Task, Workflow or LaunchPlan.
	ResourceType core.ResourceType      `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.core.ResourceType" json:"resource_type,omitempty"`
	Id           *NamedEntityIdentifier `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Additional metadata around a named entity.
	Metadata *NamedEntityMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *NamedEntity) Reset() {
	*x = NamedEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntity) ProtoMessage() {}

func (x *NamedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntity.ProtoReflect.Descriptor instead.
func (*NamedEntity) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{2}
}

func (x *NamedEntity) GetResourceType() core.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return core.ResourceType(0)
}

func (x *NamedEntity) GetId() *NamedEntityIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NamedEntity) GetMetadata() *NamedEntityMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Specifies sort ordering in a list request.
type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates an attribute to sort the response values.
	// +required
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Indicates the direction to apply sort key for response values.
	// +optional
	Direction Sort_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=flyteidl.admin.Sort_Direction" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{3}
}

func (x *Sort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Sort) GetDirection() Sort_Direction {
	if x != nil {
		return x.Direction
	}
	return Sort_DESCENDING
}

// Represents a request structure to list NamedEntityIdentifiers.
type NamedEntityIdentifierListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the project that contains the identifiers.
	// +required
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the domain the identifiers belongs to within the project.
	// +required
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Indicates the number of resources to be returned.
	// +required
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query.
	// +optional
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// Specifies how listed entities should be sorted in the response.
	// +optional
	SortBy *Sort `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// Indicates a list of filters passed as string.
	// +optional
	Filters string `protobuf:"bytes,6,opt,name=filters,proto3" json:"filters,omitempty"`
	// Optional, org key applied to the resource.
	Org string `protobuf:"bytes,7,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *NamedEntityIdentifierListRequest) Reset() {
	*x = NamedEntityIdentifierListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityIdentifierListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityIdentifierListRequest) ProtoMessage() {}

func (x *NamedEntityIdentifierListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityIdentifierListRequest.ProtoReflect.Descriptor instead.
func (*NamedEntityIdentifierListRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{4}
}

func (x *NamedEntityIdentifierListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NamedEntityIdentifierListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NamedEntityIdentifierListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NamedEntityIdentifierListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NamedEntityIdentifierListRequest) GetSortBy() *Sort {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *NamedEntityIdentifierListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *NamedEntityIdentifierListRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Represents a request structure to list NamedEntity objects
type NamedEntityListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource type of the metadata to query. One of Task, Workflow or LaunchPlan.
	// +required
	ResourceType core.ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.core.ResourceType" json:"resource_type,omitempty"`
	// Name of the project that contains the identifiers.
	// +required
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the domain the identifiers belongs to within the project.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Indicates the number of resources to be returned.
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query.
	// +optional
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	// Specifies how listed entities should be sorted in the response.
	// +optional
	SortBy *Sort `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// Indicates a list of filters passed as string.
	// +optional
	Filters string `protobuf:"bytes,7,opt,name=filters,proto3" json:"filters,omitempty"`
	// Optional, org key applied to the resource.
	Org string `protobuf:"bytes,8,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *NamedEntityListRequest) Reset() {
	*x = NamedEntityListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityListRequest) ProtoMessage() {}

func (x *NamedEntityListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityListRequest.ProtoReflect.Descriptor instead.
func (*NamedEntityListRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{5}
}

func (x *NamedEntityListRequest) GetResourceType() core.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return core.ResourceType(0)
}

func (x *NamedEntityListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NamedEntityListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NamedEntityListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NamedEntityListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NamedEntityListRequest) GetSortBy() *Sort {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *NamedEntityListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *NamedEntityListRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Represents a list of NamedEntityIdentifiers.
type NamedEntityIdentifierList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of identifiers.
	Entities []*NamedEntityIdentifier `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query. If there are no more results, this value will be empty.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *NamedEntityIdentifierList) Reset() {
	*x = NamedEntityIdentifierList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityIdentifierList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityIdentifierList) ProtoMessage() {}

func (x *NamedEntityIdentifierList) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityIdentifierList.ProtoReflect.Descriptor instead.
func (*NamedEntityIdentifierList) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{6}
}

func (x *NamedEntityIdentifierList) GetEntities() []*NamedEntityIdentifier {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *NamedEntityIdentifierList) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Represents a list of NamedEntityIdentifiers.
type NamedEntityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of NamedEntity objects
	Entities []*NamedEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query. If there are no more results, this value will be empty.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *NamedEntityList) Reset() {
	*x = NamedEntityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityList) ProtoMessage() {}

func (x *NamedEntityList) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityList.ProtoReflect.Descriptor instead.
func (*NamedEntityList) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{7}
}

func (x *NamedEntityList) GetEntities() []*NamedEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *NamedEntityList) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// A request to retrieve the metadata associated with a NamedEntityIdentifier
type NamedEntityGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource type of the metadata to get. One of Task, Workflow or LaunchPlan.
	// +required
	ResourceType core.ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.core.ResourceType" json:"resource_type,omitempty"`
	// The identifier for the named entity for which to fetch metadata.
	// +required
	Id *NamedEntityIdentifier `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NamedEntityGetRequest) Reset() {
	*x = NamedEntityGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityGetRequest) ProtoMessage() {}

func (x *NamedEntityGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityGetRequest.ProtoReflect.Descriptor instead.
func (*NamedEntityGetRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{8}
}

func (x *NamedEntityGetRequest) GetResourceType() core.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return core.ResourceType(0)
}

func (x *NamedEntityGetRequest) GetId() *NamedEntityIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

// Request to set the referenced named entity state to the configured value.
type NamedEntityUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource type of the metadata to update
	// +required
	ResourceType core.ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.core.ResourceType" json:"resource_type,omitempty"`
	// Identifier of the metadata to update
	// +required
	Id *NamedEntityIdentifier `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata object to set as the new value
	// +required
	Metadata *NamedEntityMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *NamedEntityUpdateRequest) Reset() {
	*x = NamedEntityUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityUpdateRequest) ProtoMessage() {}

func (x *NamedEntityUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityUpdateRequest.ProtoReflect.Descriptor instead.
func (*NamedEntityUpdateRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{9}
}

func (x *NamedEntityUpdateRequest) GetResourceType() core.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return core.ResourceType(0)
}

func (x *NamedEntityUpdateRequest) GetId() *NamedEntityIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NamedEntityUpdateRequest) GetMetadata() *NamedEntityMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Purposefully empty, may be populated in the future.
type NamedEntityUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NamedEntityUpdateResponse) Reset() {
	*x = NamedEntityUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntityUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntityUpdateResponse) ProtoMessage() {}

func (x *NamedEntityUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntityUpdateResponse.ProtoReflect.Descriptor instead.
func (*NamedEntityUpdateResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{10}
}

// Shared request structure to fetch a single resource.
// Resources include: Task, Workflow, LaunchPlan
type ObjectGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates a unique version of resource.
	// +required
	Id *core.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ObjectGetRequest) Reset() {
	*x = ObjectGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGetRequest) ProtoMessage() {}

func (x *ObjectGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGetRequest.ProtoReflect.Descriptor instead.
func (*ObjectGetRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{11}
}

func (x *ObjectGetRequest) GetId() *core.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

// Shared request structure to retrieve a list of resources.
// Resources include: Task, Workflow, LaunchPlan
type ResourceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id represents the unique identifier of the resource.
	// +required
	Id *NamedEntityIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Indicates the number of resources to be returned.
	// +required
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// In the case of multiple pages of results, this server-provided token can be used to fetch the next page
	// in a query.
	// +optional
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Indicates a list of filters passed as string.
	// More info on constructing filters : <Link>
	// +optional
	Filters string `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Sort ordering.
	// +optional
	SortBy *Sort `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ResourceListRequest) Reset() {
	*x = ResourceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceListRequest) ProtoMessage() {}

func (x *ResourceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceListRequest.ProtoReflect.Descriptor instead.
func (*ResourceListRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceListRequest) GetId() *NamedEntityIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResourceListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ResourceListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResourceListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ResourceListRequest) GetSortBy() *Sort {
	if x != nil {
		return x.SortBy
	}
	return nil
}

// Defines an email notification specification.
type EmailNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of email addresses recipients for this notification.
	// +required
	RecipientsEmail []string `protobuf:"bytes,1,rep,name=recipients_email,json=recipientsEmail,proto3" json:"recipients_email,omitempty"`
}

func (x *EmailNotification) Reset() {
	*x = EmailNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailNotification) ProtoMessage() {}

func (x *EmailNotification) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailNotification.ProtoReflect.Descriptor instead.
func (*EmailNotification) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{13}
}

func (x *EmailNotification) GetRecipientsEmail() []string {
	if x != nil {
		return x.RecipientsEmail
	}
	return nil
}

// Defines a pager duty notification specification.
type PagerDutyNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currently, PagerDuty notifications leverage email to trigger a notification.
	// +required
	RecipientsEmail []string `protobuf:"bytes,1,rep,name=recipients_email,json=recipientsEmail,proto3" json:"recipients_email,omitempty"`
}

func (x *PagerDutyNotification) Reset() {
	*x = PagerDutyNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagerDutyNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagerDutyNotification) ProtoMessage() {}

func (x *PagerDutyNotification) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagerDutyNotification.ProtoReflect.Descriptor instead.
func (*PagerDutyNotification) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{14}
}

func (x *PagerDutyNotification) GetRecipientsEmail() []string {
	if x != nil {
		return x.RecipientsEmail
	}
	return nil
}

// Defines a slack notification specification.
type SlackNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currently, Slack notifications leverage email to trigger a notification.
	// +required
	RecipientsEmail []string `protobuf:"bytes,1,rep,name=recipients_email,json=recipientsEmail,proto3" json:"recipients_email,omitempty"`
}

func (x *SlackNotification) Reset() {
	*x = SlackNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackNotification) ProtoMessage() {}

func (x *SlackNotification) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackNotification.ProtoReflect.Descriptor instead.
func (*SlackNotification) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{15}
}

func (x *SlackNotification) GetRecipientsEmail() []string {
	if x != nil {
		return x.RecipientsEmail
	}
	return nil
}

// Represents a structure for notifications based on execution status.
// The notification content is configured within flyte admin but can be templatized.
// Future iterations could expose configuring notifications with custom content.
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of phases to which users can associate the notifications to.
	// +required
	Phases []core.WorkflowExecution_Phase `protobuf:"varint,1,rep,packed,name=phases,proto3,enum=flyteidl.core.WorkflowExecution_Phase" json:"phases,omitempty"`
	// The type of notification to trigger.
	// +required
	//
	// Types that are assignable to Type:
	//
	//	*Notification_Email
	//	*Notification_PagerDuty
	//	*Notification_Slack
	Type isNotification_Type `protobuf_oneof:"type"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{16}
}

func (x *Notification) GetPhases() []core.WorkflowExecution_Phase {
	if x != nil {
		return x.Phases
	}
	return nil
}

func (m *Notification) GetType() isNotification_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Notification) GetEmail() *EmailNotification {
	if x, ok := x.GetType().(*Notification_Email); ok {
		return x.Email
	}
	return nil
}

func (x *Notification) GetPagerDuty() *PagerDutyNotification {
	if x, ok := x.GetType().(*Notification_PagerDuty); ok {
		return x.PagerDuty
	}
	return nil
}

func (x *Notification) GetSlack() *SlackNotification {
	if x, ok := x.GetType().(*Notification_Slack); ok {
		return x.Slack
	}
	return nil
}

type isNotification_Type interface {
	isNotification_Type()
}

type Notification_Email struct {
	Email *EmailNotification `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type Notification_PagerDuty struct {
	PagerDuty *PagerDutyNotification `protobuf:"bytes,3,opt,name=pager_duty,json=pagerDuty,proto3,oneof"`
}

type Notification_Slack struct {
	Slack *SlackNotification `protobuf:"bytes,4,opt,name=slack,proto3,oneof"`
}

func (*Notification_Email) isNotification_Type() {}

func (*Notification_PagerDuty) isNotification_Type() {}

func (*Notification_Slack) isNotification_Type() {}

// Represents a string url and associated metadata used throughout the platform.
//
// Deprecated: Marked as deprecated in flyteidl/admin/common.proto.
type UrlBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actual url value.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Represents the size of the file accessible at the above url.
	Bytes int64 `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *UrlBlob) Reset() {
	*x = UrlBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlBlob) ProtoMessage() {}

func (x *UrlBlob) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlBlob.ProtoReflect.Descriptor instead.
func (*UrlBlob) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{17}
}

func (x *UrlBlob) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UrlBlob) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

// Label values to be applied to an execution resource.
// In the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined
// to specify how to merge labels defined at registration and execution time.
type Labels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of custom labels to be applied to the execution resource.
	Values map[string]string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Labels) Reset() {
	*x = Labels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Labels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Labels) ProtoMessage() {}

func (x *Labels) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Labels.ProtoReflect.Descriptor instead.
func (*Labels) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{18}
}

func (x *Labels) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Annotation values to be applied to an execution resource.
// In the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined
// to specify how to merge annotations defined at registration and execution time.
type Annotations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of custom annotations to be applied to the execution resource.
	Values map[string]string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Annotations) Reset() {
	*x = Annotations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Annotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotations) ProtoMessage() {}

func (x *Annotations) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotations.ProtoReflect.Descriptor instead.
func (*Annotations) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{19}
}

func (x *Annotations) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Environment variable values to be applied to an execution resource.
// In the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined
// to specify how to merge environment variables defined at registration and execution time.
type Envs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of custom environment variables to be applied to the execution resource.
	Values []*core.KeyValuePair `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Envs) Reset() {
	*x = Envs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envs) ProtoMessage() {}

func (x *Envs) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envs.ProtoReflect.Descriptor instead.
func (*Envs) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{20}
}

func (x *Envs) GetValues() []*core.KeyValuePair {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defines permissions associated with executions created by this launch plan spec.
// Use either of these roles when they have permissions required by your workflow execution.
// Deprecated.
//
// Deprecated: Marked as deprecated in flyteidl/admin/common.proto.
type AuthRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines an optional iam role which will be used for tasks run in executions created with this launch plan.
	AssumableIamRole string `protobuf:"bytes,1,opt,name=assumable_iam_role,json=assumableIamRole,proto3" json:"assumable_iam_role,omitempty"`
	// Defines an optional kubernetes service account which will be used for tasks run in executions created with this launch plan.
	KubernetesServiceAccount string `protobuf:"bytes,2,opt,name=kubernetes_service_account,json=kubernetesServiceAccount,proto3" json:"kubernetes_service_account,omitempty"`
}

func (x *AuthRole) Reset() {
	*x = AuthRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRole) ProtoMessage() {}

func (x *AuthRole) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRole.ProtoReflect.Descriptor instead.
func (*AuthRole) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{21}
}

func (x *AuthRole) GetAssumableIamRole() string {
	if x != nil {
		return x.AssumableIamRole
	}
	return ""
}

func (x *AuthRole) GetKubernetesServiceAccount() string {
	if x != nil {
		return x.KubernetesServiceAccount
	}
	return ""
}

// Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.).
// See https://github.com/flyteorg/flyte/issues/211 for more background information.
type RawOutputDataConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Prefix for where offloaded data from user workflows will be written
	// e.g. s3://bucket/key or s3://bucket/
	OutputLocationPrefix string `protobuf:"bytes,1,opt,name=output_location_prefix,json=outputLocationPrefix,proto3" json:"output_location_prefix,omitempty"`
}

func (x *RawOutputDataConfig) Reset() {
	*x = RawOutputDataConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawOutputDataConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawOutputDataConfig) ProtoMessage() {}

func (x *RawOutputDataConfig) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawOutputDataConfig.ProtoReflect.Descriptor instead.
func (*RawOutputDataConfig) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{22}
}

func (x *RawOutputDataConfig) GetOutputLocationPrefix() string {
	if x != nil {
		return x.OutputLocationPrefix
	}
	return ""
}

// These URLs are returned as part of node and task execution data requests.
type FlyteURLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  string `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs string `protobuf:"bytes,2,opt,name=outputs,proto3" json:"outputs,omitempty"`
	Deck    string `protobuf:"bytes,3,opt,name=deck,proto3" json:"deck,omitempty"`
}

func (x *FlyteURLs) Reset() {
	*x = FlyteURLs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlyteURLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlyteURLs) ProtoMessage() {}

func (x *FlyteURLs) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlyteURLs.ProtoReflect.Descriptor instead.
func (*FlyteURLs) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_common_proto_rawDescGZIP(), []int{23}
}

func (x *FlyteURLs) GetInputs() string {
	if x != nil {
		return x.Inputs
	}
	return ""
}

func (x *FlyteURLs) GetOutputs() string {
	if x != nil {
		return x.Outputs
	}
	return ""
}

func (x *FlyteURLs) GetDeck() string {
	if x != nil {
		return x.Deck
	}
	return ""
}

var File_flyteidl_admin_common_proto protoreflect.FileDescriptor

var file_flyteidl_admin_common_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1d, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x15, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x6f, 0x0a, 0x13,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc7, 0x01,
	0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x35, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x22, 0xdb, 0x01, 0x0a,
	0x20, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2d, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x93, 0x02, 0x0a, 0x16, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67,
	0x22, 0x74, 0x0a, 0x19, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x18,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x1b, 0x0a, 0x19, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3d, 0x0a, 0x10, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc1,
	0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x22, 0x3e, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x42, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3e, 0x0a, 0x11, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x94, 0x02, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x06, 0x70, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x75, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a,
	0x07, 0x55, 0x72, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x3a, 0x02, 0x18, 0x01, 0x22, 0x7f, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3a,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3b, 0x0a, 0x04, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7a,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73,
	0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x4b, 0x0a, 0x13, 0x52, 0x61,
	0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x51, 0x0a, 0x09, 0x46, 0x6c, 0x79, 0x74, 0x65,
	0x55, 0x52, 0x4c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x2a, 0x68, 0x0a, 0x10, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x41, 0x4d, 0x45, 0x44,
	0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x04, 0x08, 0x03, 0x10, 0x03, 0x22, 0x04,
	0x08, 0x04, 0x10, 0x04, 0x42, 0xb7, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x46, 0x41, 0x58, 0xaa, 0x02, 0x0e,
	0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xca, 0x02,
	0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xe2,
	0x02, 0x1a, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x3a, 0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl_admin_common_proto_rawDescOnce sync.Once
	file_flyteidl_admin_common_proto_rawDescData = file_flyteidl_admin_common_proto_rawDesc
)

func file_flyteidl_admin_common_proto_rawDescGZIP() []byte {
	file_flyteidl_admin_common_proto_rawDescOnce.Do(func() {
		file_flyteidl_admin_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_admin_common_proto_rawDescData)
	})
	return file_flyteidl_admin_common_proto_rawDescData
}

var file_flyteidl_admin_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_flyteidl_admin_common_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_flyteidl_admin_common_proto_goTypes = []interface{}{
	(NamedEntityState)(0),                    // 0: flyteidl.admin.NamedEntityState
	(Sort_Direction)(0),                      // 1: flyteidl.admin.Sort.Direction
	(*NamedEntityIdentifier)(nil),            // 2: flyteidl.admin.NamedEntityIdentifier
	(*NamedEntityMetadata)(nil),              // 3: flyteidl.admin.NamedEntityMetadata
	(*NamedEntity)(nil),                      // 4: flyteidl.admin.NamedEntity
	(*Sort)(nil),                             // 5: flyteidl.admin.Sort
	(*NamedEntityIdentifierListRequest)(nil), // 6: flyteidl.admin.NamedEntityIdentifierListRequest
	(*NamedEntityListRequest)(nil),           // 7: flyteidl.admin.NamedEntityListRequest
	(*NamedEntityIdentifierList)(nil),        // 8: flyteidl.admin.NamedEntityIdentifierList
	(*NamedEntityList)(nil),                  // 9: flyteidl.admin.NamedEntityList
	(*NamedEntityGetRequest)(nil),            // 10: flyteidl.admin.NamedEntityGetRequest
	(*NamedEntityUpdateRequest)(nil),         // 11: flyteidl.admin.NamedEntityUpdateRequest
	(*NamedEntityUpdateResponse)(nil),        // 12: flyteidl.admin.NamedEntityUpdateResponse
	(*ObjectGetRequest)(nil),                 // 13: flyteidl.admin.ObjectGetRequest
	(*ResourceListRequest)(nil),              // 14: flyteidl.admin.ResourceListRequest
	(*EmailNotification)(nil),                // 15: flyteidl.admin.EmailNotification
	(*PagerDutyNotification)(nil),            // 16: flyteidl.admin.PagerDutyNotification
	(*SlackNotification)(nil),                // 17: flyteidl.admin.SlackNotification
	(*Notification)(nil),                     // 18: flyteidl.admin.Notification
	(*UrlBlob)(nil),                          // 19: flyteidl.admin.UrlBlob
	(*Labels)(nil),                           // 20: flyteidl.admin.Labels
	(*Annotations)(nil),                      // 21: flyteidl.admin.Annotations
	(*Envs)(nil),                             // 22: flyteidl.admin.Envs
	(*AuthRole)(nil),                         // 23: flyteidl.admin.AuthRole
	(*RawOutputDataConfig)(nil),              // 24: flyteidl.admin.RawOutputDataConfig
	(*FlyteURLs)(nil),                        // 25: flyteidl.admin.FlyteURLs
	nil,                                      // 26: flyteidl.admin.Labels.ValuesEntry
	nil,                                      // 27: flyteidl.admin.Annotations.ValuesEntry
	(core.ResourceType)(0),                   // 28: flyteidl.core.ResourceType
	(*core.Identifier)(nil),                  // 29: flyteidl.core.Identifier
	(core.WorkflowExecution_Phase)(0),        // 30: flyteidl.core.WorkflowExecution.Phase
	(*core.KeyValuePair)(nil),                // 31: flyteidl.core.KeyValuePair
}
var file_flyteidl_admin_common_proto_depIdxs = []int32{
	0,  // 0: flyteidl.admin.NamedEntityMetadata.state:type_name -> flyteidl.admin.NamedEntityState
	28, // 1: flyteidl.admin.NamedEntity.resource_type:type_name -> flyteidl.core.ResourceType
	2,  // 2: flyteidl.admin.NamedEntity.id:type_name -> flyteidl.admin.NamedEntityIdentifier
	3,  // 3: flyteidl.admin.NamedEntity.metadata:type_name -> flyteidl.admin.NamedEntityMetadata
	1,  // 4: flyteidl.admin.Sort.direction:type_name -> flyteidl.admin.Sort.Direction
	5,  // 5: flyteidl.admin.NamedEntityIdentifierListRequest.sort_by:type_name -> flyteidl.admin.Sort
	28, // 6: flyteidl.admin.NamedEntityListRequest.resource_type:type_name -> flyteidl.core.ResourceType
	5,  // 7: flyteidl.admin.NamedEntityListRequest.sort_by:type_name -> flyteidl.admin.Sort
	2,  // 8: flyteidl.admin.NamedEntityIdentifierList.entities:type_name -> flyteidl.admin.NamedEntityIdentifier
	4,  // 9: flyteidl.admin.NamedEntityList.entities:type_name -> flyteidl.admin.NamedEntity
	28, // 10: flyteidl.admin.NamedEntityGetRequest.resource_type:type_name -> flyteidl.core.ResourceType
	2,  // 11: flyteidl.admin.NamedEntityGetRequest.id:type_name -> flyteidl.admin.NamedEntityIdentifier
	28, // 12: flyteidl.admin.NamedEntityUpdateRequest.resource_type:type_name -> flyteidl.core.ResourceType
	2,  // 13: flyteidl.admin.NamedEntityUpdateRequest.id:type_name -> flyteidl.admin.NamedEntityIdentifier
	3,  // 14: flyteidl.admin.NamedEntityUpdateRequest.metadata:type_name -> flyteidl.admin.NamedEntityMetadata
	29, // 15: flyteidl.admin.ObjectGetRequest.id:type_name -> flyteidl.core.Identifier
	2,  // 16: flyteidl.admin.ResourceListRequest.id:type_name -> flyteidl.admin.NamedEntityIdentifier
	5,  // 17: flyteidl.admin.ResourceListRequest.sort_by:type_name -> flyteidl.admin.Sort
	30, // 18: flyteidl.admin.Notification.phases:type_name -> flyteidl.core.WorkflowExecution.Phase
	15, // 19: flyteidl.admin.Notification.email:type_name -> flyteidl.admin.EmailNotification
	16, // 20: flyteidl.admin.Notification.pager_duty:type_name -> flyteidl.admin.PagerDutyNotification
	17, // 21: flyteidl.admin.Notification.slack:type_name -> flyteidl.admin.SlackNotification
	26, // 22: flyteidl.admin.Labels.values:type_name -> flyteidl.admin.Labels.ValuesEntry
	27, // 23: flyteidl.admin.Annotations.values:type_name -> flyteidl.admin.Annotations.ValuesEntry
	31, // 24: flyteidl.admin.Envs.values:type_name -> flyteidl.core.KeyValuePair
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_flyteidl_admin_common_proto_init() }
func file_flyteidl_admin_common_proto_init() {
	if File_flyteidl_admin_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_admin_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityIdentifierListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityIdentifierList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntityUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagerDutyNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Labels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Annotations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawOutputDataConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlyteURLs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flyteidl_admin_common_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Notification_Email)(nil),
		(*Notification_PagerDuty)(nil),
		(*Notification_Slack)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_admin_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_admin_common_proto_goTypes,
		DependencyIndexes: file_flyteidl_admin_common_proto_depIdxs,
		EnumInfos:         file_flyteidl_admin_common_proto_enumTypes,
		MessageInfos:      file_flyteidl_admin_common_proto_msgTypes,
	}.Build()
	File_flyteidl_admin_common_proto = out.File
	file_flyteidl_admin_common_proto_rawDesc = nil
	file_flyteidl_admin_common_proto_goTypes = nil
	file_flyteidl_admin_common_proto_depIdxs = nil
}

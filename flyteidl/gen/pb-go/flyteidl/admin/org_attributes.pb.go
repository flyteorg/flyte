// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl/admin/org_attributes.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a set of custom matching attributes at the org level.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type OrgAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchingAttributes *MatchingAttributes `protobuf:"bytes,1,opt,name=matching_attributes,json=matchingAttributes,proto3" json:"matching_attributes,omitempty"`
	// Optional, org key applied to the attributes.
	Org string `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *OrgAttributes) Reset() {
	*x = OrgAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributes) ProtoMessage() {}

func (x *OrgAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributes.ProtoReflect.Descriptor instead.
func (*OrgAttributes) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *OrgAttributes) GetMatchingAttributes() *MatchingAttributes {
	if x != nil {
		return x.MatchingAttributes
	}
	return nil
}

func (x *OrgAttributes) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Sets custom attributes for an org.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type OrgAttributesUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +required
	Attributes *OrgAttributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *OrgAttributesUpdateRequest) Reset() {
	*x = OrgAttributesUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesUpdateRequest) ProtoMessage() {}

func (x *OrgAttributesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesUpdateRequest.ProtoReflect.Descriptor instead.
func (*OrgAttributesUpdateRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *OrgAttributesUpdateRequest) GetAttributes() *OrgAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Purposefully empty, may be populated in the future.
type OrgAttributesUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrgAttributesUpdateResponse) Reset() {
	*x = OrgAttributesUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesUpdateResponse) ProtoMessage() {}

func (x *OrgAttributesUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesUpdateResponse.ProtoReflect.Descriptor instead.
func (*OrgAttributesUpdateResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{2}
}

// Request to get an individual org attribute override.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type OrgAttributesGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Which type of matchable attributes to return.
	// +required
	ResourceType MatchableResource `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.admin.MatchableResource" json:"resource_type,omitempty"`
	// Optional, org key applied to the attributes.
	Org string `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *OrgAttributesGetRequest) Reset() {
	*x = OrgAttributesGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesGetRequest) ProtoMessage() {}

func (x *OrgAttributesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesGetRequest.ProtoReflect.Descriptor instead.
func (*OrgAttributesGetRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *OrgAttributesGetRequest) GetResourceType() MatchableResource {
	if x != nil {
		return x.ResourceType
	}
	return MatchableResource_TASK_RESOURCE
}

func (x *OrgAttributesGetRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Response to get an individual org attribute override.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type OrgAttributesGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *OrgAttributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *OrgAttributesGetResponse) Reset() {
	*x = OrgAttributesGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesGetResponse) ProtoMessage() {}

func (x *OrgAttributesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesGetResponse.ProtoReflect.Descriptor instead.
func (*OrgAttributesGetResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *OrgAttributesGetResponse) GetAttributes() *OrgAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Request to delete a set matchable org attribute override.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type OrgAttributesDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Which type of matchable attributes to delete.
	// +required
	ResourceType MatchableResource `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.admin.MatchableResource" json:"resource_type,omitempty"`
	// Optional, org key applied to the attributes.
	Org string `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *OrgAttributesDeleteRequest) Reset() {
	*x = OrgAttributesDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesDeleteRequest) ProtoMessage() {}

func (x *OrgAttributesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesDeleteRequest.ProtoReflect.Descriptor instead.
func (*OrgAttributesDeleteRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{5}
}

func (x *OrgAttributesDeleteRequest) GetResourceType() MatchableResource {
	if x != nil {
		return x.ResourceType
	}
	return MatchableResource_TASK_RESOURCE
}

func (x *OrgAttributesDeleteRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

// Purposefully empty, may be populated in the future.
type OrgAttributesDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrgAttributesDeleteResponse) Reset() {
	*x = OrgAttributesDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAttributesDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAttributesDeleteResponse) ProtoMessage() {}

func (x *OrgAttributesDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_org_attributes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAttributesDeleteResponse.ProtoReflect.Descriptor instead.
func (*OrgAttributesDeleteResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_org_attributes_proto_rawDescGZIP(), []int{6}
}

var File_flyteidl_admin_org_attributes_proto protoreflect.FileDescriptor

var file_flyteidl_admin_org_attributes_proto_rawDesc = []byte{
	0x0a, 0x23, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x6f, 0x72, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x27, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76,
	0x0a, 0x0d, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x53, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x5b, 0x0a, 0x1a, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x73, 0x0a, 0x17, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x59, 0x0a, 0x18, 0x4f, 0x72, 0x67, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x76, 0x0a, 0x1a, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x1d, 0x0a, 0x1b, 0x4f, 0x72,
	0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xbe, 0x01, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x42, 0x12, 0x4f, 0x72, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x46, 0x41, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xca, 0x02, 0x0e, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xe2, 0x02, 0x1a, 0x46, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x3a, 0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_flyteidl_admin_org_attributes_proto_rawDescOnce sync.Once
	file_flyteidl_admin_org_attributes_proto_rawDescData = file_flyteidl_admin_org_attributes_proto_rawDesc
)

func file_flyteidl_admin_org_attributes_proto_rawDescGZIP() []byte {
	file_flyteidl_admin_org_attributes_proto_rawDescOnce.Do(func() {
		file_flyteidl_admin_org_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_admin_org_attributes_proto_rawDescData)
	})
	return file_flyteidl_admin_org_attributes_proto_rawDescData
}

var file_flyteidl_admin_org_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_flyteidl_admin_org_attributes_proto_goTypes = []interface{}{
	(*OrgAttributes)(nil),               // 0: flyteidl.admin.OrgAttributes
	(*OrgAttributesUpdateRequest)(nil),  // 1: flyteidl.admin.OrgAttributesUpdateRequest
	(*OrgAttributesUpdateResponse)(nil), // 2: flyteidl.admin.OrgAttributesUpdateResponse
	(*OrgAttributesGetRequest)(nil),     // 3: flyteidl.admin.OrgAttributesGetRequest
	(*OrgAttributesGetResponse)(nil),    // 4: flyteidl.admin.OrgAttributesGetResponse
	(*OrgAttributesDeleteRequest)(nil),  // 5: flyteidl.admin.OrgAttributesDeleteRequest
	(*OrgAttributesDeleteResponse)(nil), // 6: flyteidl.admin.OrgAttributesDeleteResponse
	(*MatchingAttributes)(nil),          // 7: flyteidl.admin.MatchingAttributes
	(MatchableResource)(0),              // 8: flyteidl.admin.MatchableResource
}
var file_flyteidl_admin_org_attributes_proto_depIdxs = []int32{
	7, // 0: flyteidl.admin.OrgAttributes.matching_attributes:type_name -> flyteidl.admin.MatchingAttributes
	0, // 1: flyteidl.admin.OrgAttributesUpdateRequest.attributes:type_name -> flyteidl.admin.OrgAttributes
	8, // 2: flyteidl.admin.OrgAttributesGetRequest.resource_type:type_name -> flyteidl.admin.MatchableResource
	0, // 3: flyteidl.admin.OrgAttributesGetResponse.attributes:type_name -> flyteidl.admin.OrgAttributes
	8, // 4: flyteidl.admin.OrgAttributesDeleteRequest.resource_type:type_name -> flyteidl.admin.MatchableResource
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_flyteidl_admin_org_attributes_proto_init() }
func file_flyteidl_admin_org_attributes_proto_init() {
	if File_flyteidl_admin_org_attributes_proto != nil {
		return
	}
	file_flyteidl_admin_matchable_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_admin_org_attributes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_org_attributes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAttributesDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_admin_org_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_admin_org_attributes_proto_goTypes,
		DependencyIndexes: file_flyteidl_admin_org_attributes_proto_depIdxs,
		MessageInfos:      file_flyteidl_admin_org_attributes_proto_msgTypes,
	}.Build()
	File_flyteidl_admin_org_attributes_proto = out.File
	file_flyteidl_admin_org_attributes_proto_rawDesc = nil
	file_flyteidl_admin_org_attributes_proto_goTypes = nil
	file_flyteidl_admin_org_attributes_proto_depIdxs = nil
}

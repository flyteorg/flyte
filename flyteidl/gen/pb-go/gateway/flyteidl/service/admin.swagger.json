{
  "swagger": "2.0",
  "info": {
    "title": "flyteidl/service/admin.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AdminService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/active_launch_plans/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetch the active version of a :ref:`ref_flyteidl.admin.LaunchPlan`.",
        "description": "Retrieve the active launch plan version specified by input request filters.",
        "operationId": "AdminService_GetActiveLaunchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/active_launch_plans/{project}/{domain}": {
      "get": {
        "summary": "List active versions of :ref:`ref_flyteidl.admin.LaunchPlan`.",
        "description": "Fetch the active launch plan versions specified by input request filters.",
        "operationId": "AdminService_ListActiveLaunchPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Name of the project that contains the identifiers.\n+required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Name of the domain the identifiers belongs to within the project.\n+required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/children/task_executions/{task_execution_id.node_execution_id.execution_id.project}/{task_execution_id.node_execution_id.execution_id.domain}/{task_execution_id.node_execution_id.execution_id.name}/{task_execution_id.node_execution_id.node_id}/{task_execution_id.task_id.project}/{task_execution_id.task_id.domain}/{task_execution_id.task_id.name}/{task_execution_id.task_id.version}/{task_execution_id.retry_attempt}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.NodeExecution` launched by the reference :ref:`ref_flyteidl.admin.TaskExecution`.",
        "operationId": "AdminService_ListNodeExecutionsForTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNodeExecutionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_execution_id.node_execution_id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.node_execution_id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.node_execution_id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.node_execution_id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.task_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.task_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.task_id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.task_id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_execution_id.retry_attempt",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "task_execution_id.task_id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "task_execution_id.task_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "task_execution_id.node_execution_id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the, server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/data/executions/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetches input and output data for a :ref:`ref_flyteidl.admin.Execution`.",
        "operationId": "AdminService_GetExecutionData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowExecutionGetDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/data/node_executions/{id.execution_id.project}/{id.execution_id.domain}/{id.execution_id.name}/{id.node_id}": {
      "get": {
        "summary": "Fetches input and output data for a :ref:`ref_flyteidl.admin.NodeExecution`.",
        "operationId": "AdminService_GetNodeExecutionData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNodeExecutionGetDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/data/task_executions/{id.node_execution_id.execution_id.project}/{id.node_execution_id.execution_id.domain}/{id.node_execution_id.execution_id.name}/{id.node_execution_id.node_id}/{id.task_id.project}/{id.task_id.domain}/{id.task_id.name}/{id.task_id.version}/{id.retry_attempt}": {
      "get": {
        "summary": "Fetches input and output data for a :ref:`ref_flyteidl.admin.TaskExecution`.",
        "description": "Retrieve input and output data from an existing task execution.",
        "operationId": "AdminService_GetTaskExecutionData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTaskExecutionGetDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.node_execution_id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.retry_attempt",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id.task_id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "id.task_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/description_entities/{id.resource_type}/{id.project}/{id.domain}/{id.name}/{id.version}": {
      "get": {
        "summary": "Fetch a :ref:`ref_flyteidl.admin.DescriptionEntity` object.",
        "description": "Retrieve an existing description entity description.",
        "operationId": "AdminService_GetDescriptionEntity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminDescriptionEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/description_entities/{resource_type}/{id.project}/{id.domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.DescriptionEntity` definitions.",
        "description": "Fetch existing description entity definitions matching input filters.",
        "operationId": "AdminService_ListDescriptionEntities2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminDescriptionEntityList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/description_entities/{resource_type}/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.DescriptionEntity` definitions.",
        "description": "Fetch existing description entity definitions matching input filters.",
        "operationId": "AdminService_ListDescriptionEntities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminDescriptionEntityList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/domains": {
      "get": {
        "operationId": "AdminService_GetDomains",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminGetDomainsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/events/nodes": {
      "post": {
        "summary": "Indicates a :ref:`ref_flyteidl.event.NodeExecutionEvent` has occurred.",
        "description": "Create a node execution event recording a phase transition.",
        "operationId": "AdminService_CreateNodeEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNodeExecutionEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to send a notification that a node execution event has occurred.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminNodeExecutionEventRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/events/tasks": {
      "post": {
        "summary": "Indicates a :ref:`ref_flyteidl.event.TaskExecutionEvent` has occurred.",
        "description": "Create a task execution event recording a phase transition.",
        "operationId": "AdminService_CreateTaskEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTaskExecutionEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to send a notification that a task execution event has occurred.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminTaskExecutionEventRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/events/workflows": {
      "post": {
        "summary": "Indicates a :ref:`ref_flyteidl.event.WorkflowExecutionEvent` has occurred.",
        "description": "Create a workflow execution event recording a phase transition.",
        "operationId": "AdminService_CreateWorkflowEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowExecutionEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to send a notification that a workflow execution event has occurred.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminWorkflowExecutionEventRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/executions": {
      "post": {
        "summary": "Triggers the creation of a :ref:`ref_flyteidl.admin.Execution`",
        "description": "Create a workflow execution.",
        "operationId": "AdminService_CreateExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to launch an execution with the given project, domain and optionally-assigned name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminExecutionCreateRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/executions/recover": {
      "post": {
        "summary": "Recreates a previously-run workflow execution that will only start executing from the last known failure point.\nIn Recover mode, users cannot change any input parameters or update the version of the execution.\nThis is extremely useful to recover from system errors and byzantine faults like - Loss of K8s cluster, bugs in platform or instability, machine failures,\ndownstream system failures (downstream services), or simply to recover executions that failed because of retry exhaustion and should complete if tried again.\nSee :ref:`ref_flyteidl.admin.ExecutionRecoverRequest` for more details.",
        "description": "Recreates a previously-run workflow execution that will only start executing from the last known failure point. In Recover mode, users cannot change any input parameters or update the version of the execution. This is extremely useful to recover from system errors and byzantine faults like - Loss of K8s cluster, bugs in platform or instability, machine failures, downstream system failures (downstream services), or simply to recover executions that failed because of retry exhaustion and should complete if tried again.",
        "operationId": "AdminService_RecoverExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to recover the referenced execution.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminExecutionRecoverRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/executions/relaunch": {
      "post": {
        "summary": "Triggers the creation of an identical :ref:`ref_flyteidl.admin.Execution`",
        "description": "Relaunch a workflow execution.",
        "operationId": "AdminService_RelaunchExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to relaunch the referenced execution.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminExecutionRelaunchRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/executions/{id.project}/{id.domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.Execution`.",
        "operationId": "AdminService_ListExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/executions/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetches a :ref:`ref_flyteidl.admin.Execution`.",
        "description": "Retrieve an existing workflow execution.",
        "operationId": "AdminService_GetExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "summary": "Terminates an in-progress :ref:`ref_flyteidl.admin.Execution`.",
        "operationId": "AdminService_TerminateExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionTerminateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceTerminateExecutionBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Update execution belonging to project domain :ref:`ref_flyteidl.admin.Execution`.",
        "operationId": "AdminService_UpdateExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminExecutionUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateExecutionBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/launch_plan_ids/{project}/{domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of launch plan objects.",
        "description": "Fetch existing launch plan definition identifiers matching input filters.",
        "operationId": "AdminService_ListLaunchPlanIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntityIdentifierList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Name of the project that contains the identifiers.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Name of the domain the identifiers belongs to within the project.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/launch_plans": {
      "post": {
        "summary": "Create and upload a :ref:`ref_flyteidl.admin.LaunchPlan` definition",
        "description": "Create and register a launch plan definition.",
        "operationId": "AdminService_CreateLaunchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanCreateResponse"
            }
          },
          "400": {
            "description": "Returned for bad request that may have failed validation.",
            "schema": {}
          },
          "409": {
            "description": "Returned for a request that references an identical entity that has already been registered.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to register a launch plan. The included LaunchPlanSpec may have a complete or incomplete set of inputs required\nto launch a workflow execution. By default all launch plans are registered in state INACTIVE. If you wish to\nset the state to ACTIVE, you must submit a LaunchPlanUpdateRequest, after you have successfully created a launch plan.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanCreateRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/launch_plans/{id.project}/{id.domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.LaunchPlan` definitions.",
        "description": "Fetch existing launch plan definitions matching input filters.",
        "operationId": "AdminService_ListLaunchPlans2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/launch_plans/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.LaunchPlan` definitions.",
        "description": "Fetch existing launch plan definitions matching input filters.",
        "operationId": "AdminService_ListLaunchPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/launch_plans/{id.project}/{id.domain}/{id.name}/{id.version}": {
      "get": {
        "summary": "Fetch a :ref:`ref_flyteidl.admin.LaunchPlan` definition.",
        "description": "Retrieve an existing launch plan definition.",
        "operationId": "AdminService_GetLaunchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Updates the status of a registered :ref:`ref_flyteidl.admin.LaunchPlan`.",
        "description": "Update the status of an existing launch plan definition. At most one launch plan version for a given {project, domain, name} can be active at a time. If this call sets a launch plan to active and existing version is already active, the result of this call will be that the formerly active launch plan will be made inactive and specified launch plan in this request will be made active. In the event that the formerly active launch plan had a schedule associated it with it, this schedule will be disabled. If the reference launch plan in this request is being set to active and has a schedule associated with it, the schedule will be enabled.",
        "operationId": "AdminService_UpdateLaunchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminLaunchPlanUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateLaunchPlanBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/matchable_attributes": {
      "get": {
        "summary": "Lists custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a specific resource type.",
        "description": "Retrieve a list of MatchableAttributesConfiguration objects.",
        "operationId": "AdminService_ListMatchableAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminListMatchableAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "+required\n\n - TASK_RESOURCE: Applies to customizable task resource requests and limits.\n - CLUSTER_RESOURCE: Applies to configuring templated kubernetes cluster resources.\n - EXECUTION_QUEUE: Configures task and dynamic task execution queue assignment.\n - EXECUTION_CLUSTER_LABEL: Configures the K8s cluster label to be used for execution to be run\n - QUALITY_OF_SERVICE_SPECIFICATION: Configures default quality of service when undefined in an execution spec.\n - PLUGIN_OVERRIDE: Selects configurable plugin implementation behavior for a given task type.\n - WORKFLOW_EXECUTION_CONFIG: Adds defaults for customizable workflow-execution specifications and overrides.\n - CLUSTER_ASSIGNMENT: Controls how to select an available cluster on which this execution should run.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TASK_RESOURCE",
              "CLUSTER_RESOURCE",
              "EXECUTION_QUEUE",
              "EXECUTION_CLUSTER_LABEL",
              "QUALITY_OF_SERVICE_SPECIFICATION",
              "PLUGIN_OVERRIDE",
              "WORKFLOW_EXECUTION_CONFIG",
              "CLUSTER_ASSIGNMENT"
            ],
            "default": "TASK_RESOURCE"
          },
          {
            "name": "org",
            "description": "Optional, org filter applied to list project requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/metrics/executions/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetches runtime metrics for a :ref:`ref_flyteidl.admin.Execution`.",
        "description": "Retrieve metrics from an existing workflow execution.",
        "operationId": "AdminService_GetExecutionMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowExecutionGetMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "description": "depth defines the number of Flyte entity levels to traverse when breaking down execution details.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/named_entities/{resource_type}/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Returns a :ref:`ref_flyteidl.admin.NamedEntity` object.",
        "description": "Retrieve a NamedEntity object.",
        "operationId": "AdminService_GetNamedEntity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "Resource type of the metadata to get. One of Task, Workflow or LaunchPlan.\n+required",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Updates a :ref:`ref_flyteidl.admin.NamedEntity` object.",
        "description": "Update the fields associated with a NamedEntity",
        "operationId": "AdminService_UpdateNamedEntity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntityUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "Resource type of the metadata to update\n+required",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateNamedEntityBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/named_entities/{resource_type}/{project}/{domain}": {
      "get": {
        "summary": "Returns a list of :ref:`ref_flyteidl.admin.NamedEntity` objects.",
        "description": "Retrieve a list of NamedEntity objects sharing a common resource type, project, and domain.",
        "operationId": "AdminService_ListNamedEntities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntityList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "description": "Resource type of the metadata to query. One of Task, Workflow or LaunchPlan.\n+required",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ]
          },
          {
            "name": "project",
            "description": "Name of the project that contains the identifiers.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Name of the domain the identifiers belongs to within the project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/node_executions/{id.execution_id.project}/{id.execution_id.domain}/{id.execution_id.name}/{id.node_id}": {
      "get": {
        "summary": "Fetches a :ref:`ref_flyteidl.admin.NodeExecution`.",
        "operationId": "AdminService_GetNodeExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/flyteidladminNodeExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/node_executions/{id.execution_id.project}/{id.execution_id.domain}/{id.execution_id.name}/{id.node_id}/dynamic_workflow": {
      "get": {
        "summary": "Fetches a :ref:`ref_flyteidl.admin.DynamicNodeWorkflowResponse`.",
        "operationId": "AdminService_GetDynamicNodeWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminDynamicNodeWorkflowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/node_executions/{workflow_execution_id.project}/{workflow_execution_id.domain}/{workflow_execution_id.name}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.NodeExecution`.",
        "operationId": "AdminService_ListNodeExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNodeExecutionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow_execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow_execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow_execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "unique_parent_id",
            "description": "Unique identifier of the parent node in the execution\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/project_attributes/{attributes.project}": {
      "put": {
        "summary": "Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` at the project level",
        "description": "Update the customized resource attributes associated with a project",
        "operationId": "AdminService_UpdateProjectAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectAttributesUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attributes.project",
            "description": "Unique project id for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateProjectAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/project_attributes/{project}": {
      "get": {
        "summary": "Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.",
        "description": "Retrieve the customized resource attributes associated with a project",
        "operationId": "AdminService_GetProjectAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectAttributesGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource_type",
            "description": "Which type of matchable attributes to return.\n+required\n\n - TASK_RESOURCE: Applies to customizable task resource requests and limits.\n - CLUSTER_RESOURCE: Applies to configuring templated kubernetes cluster resources.\n - EXECUTION_QUEUE: Configures task and dynamic task execution queue assignment.\n - EXECUTION_CLUSTER_LABEL: Configures the K8s cluster label to be used for execution to be run\n - QUALITY_OF_SERVICE_SPECIFICATION: Configures default quality of service when undefined in an execution spec.\n - PLUGIN_OVERRIDE: Selects configurable plugin implementation behavior for a given task type.\n - WORKFLOW_EXECUTION_CONFIG: Adds defaults for customizable workflow-execution specifications and overrides.\n - CLUSTER_ASSIGNMENT: Controls how to select an available cluster on which this execution should run.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TASK_RESOURCE",
              "CLUSTER_RESOURCE",
              "EXECUTION_QUEUE",
              "EXECUTION_CLUSTER_LABEL",
              "QUALITY_OF_SERVICE_SPECIFICATION",
              "PLUGIN_OVERRIDE",
              "WORKFLOW_EXECUTION_CONFIG",
              "CLUSTER_ASSIGNMENT"
            ],
            "default": "TASK_RESOURCE"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the project.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "summary": "Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.",
        "description": "Delete the customized resource attributes associated with a project",
        "operationId": "AdminService_DeleteProjectAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectAttributesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceDeleteProjectAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/project_domain_attributes/{attributes.project}/{attributes.domain}": {
      "put": {
        "summary": "Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.",
        "description": "Update the customized resource attributes associated with a project-domain combination",
        "operationId": "AdminService_UpdateProjectDomainAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectDomainAttributesUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attributes.project",
            "description": "Unique project id for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes.domain",
            "description": "Unique domain id for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateProjectDomainAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/project_domain_attributes/{project}/{domain}": {
      "get": {
        "summary": "Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.",
        "description": "Retrieve the customized resource attributes associated with a project-domain combination",
        "operationId": "AdminService_GetProjectDomainAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectDomainAttributesGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Unique domain id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource_type",
            "description": "Which type of matchable attributes to return.\n+required\n\n - TASK_RESOURCE: Applies to customizable task resource requests and limits.\n - CLUSTER_RESOURCE: Applies to configuring templated kubernetes cluster resources.\n - EXECUTION_QUEUE: Configures task and dynamic task execution queue assignment.\n - EXECUTION_CLUSTER_LABEL: Configures the K8s cluster label to be used for execution to be run\n - QUALITY_OF_SERVICE_SPECIFICATION: Configures default quality of service when undefined in an execution spec.\n - PLUGIN_OVERRIDE: Selects configurable plugin implementation behavior for a given task type.\n - WORKFLOW_EXECUTION_CONFIG: Adds defaults for customizable workflow-execution specifications and overrides.\n - CLUSTER_ASSIGNMENT: Controls how to select an available cluster on which this execution should run.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TASK_RESOURCE",
              "CLUSTER_RESOURCE",
              "EXECUTION_QUEUE",
              "EXECUTION_CLUSTER_LABEL",
              "QUALITY_OF_SERVICE_SPECIFICATION",
              "PLUGIN_OVERRIDE",
              "WORKFLOW_EXECUTION_CONFIG",
              "CLUSTER_ASSIGNMENT"
            ],
            "default": "TASK_RESOURCE"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the attributes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "summary": "Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.",
        "description": "Delete the customized resource attributes associated with a project-domain combination",
        "operationId": "AdminService_DeleteProjectDomainAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectDomainAttributesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Unique domain id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceDeleteProjectDomainAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/projects": {
      "get": {
        "summary": "Fetches a list of :ref:`ref_flyteidl.admin.Project`",
        "description": "Fetch registered projects.",
        "operationId": "AdminService_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjects"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Indicates the number of projects to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "org",
            "description": "Optional, org filter applied to list project requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "post": {
        "summary": "Registers a :ref:`ref_flyteidl.admin.Project` with the Flyte deployment.",
        "operationId": "AdminService_RegisterProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminProjectRegisterRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "summary": "Fetches a :ref:`ref_flyteidl.admin.Project`",
        "description": "Fetch a registered project.",
        "operationId": "AdminService_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Indicates a unique project.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Updates an existing :ref:`ref_flyteidl.admin.Project`\nflyteidl.admin.Project should be passed but the domains property should be empty;\nit will be ignored in the handler as domains cannot be updated via this API.",
        "description": "Update a project.",
        "operationId": "AdminService_UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminProjectUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Globally unique project name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateProjectBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/task_executions/{id.node_execution_id.execution_id.project}/{id.node_execution_id.execution_id.domain}/{id.node_execution_id.execution_id.name}/{id.node_execution_id.node_id}/{id.task_id.project}/{id.task_id.domain}/{id.task_id.name}/{id.task_id.version}/{id.retry_attempt}": {
      "get": {
        "summary": "Fetches a :ref:`ref_flyteidl.admin.TaskExecution`.",
        "description": "Retrieve an existing task execution.",
        "operationId": "AdminService_GetTaskExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/flyteidladminTaskExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.node_execution_id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.task_id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.retry_attempt",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id.task_id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "id.task_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.node_execution_id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/task_executions/{node_execution_id.execution_id.project}/{node_execution_id.execution_id.domain}/{node_execution_id.execution_id.name}/{node_execution_id.node_id}": {
      "get": {
        "summary": "Fetches a list of :ref:`ref_flyteidl.admin.TaskExecution`.",
        "description": "Fetch existing task executions matching input filters.",
        "operationId": "AdminService_ListTaskExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTaskExecutionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "node_execution_id.execution_id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node_execution_id.execution_id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node_execution_id.execution_id.name",
            "description": "User or system provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node_execution_id.node_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node_execution_id.execution_id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/task_ids/{project}/{domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of task objects.",
        "description": "Fetch existing task definition identifiers matching input filters.",
        "operationId": "AdminService_ListTaskIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntityIdentifierList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Name of the project that contains the identifiers.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Name of the domain the identifiers belongs to within the project.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/tasks": {
      "post": {
        "summary": "Create and upload a :ref:`ref_flyteidl.admin.Task` definition",
        "description": "Create and register a task definition.",
        "operationId": "AdminService_CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/flyteidladminTaskCreateResponse"
            }
          },
          "400": {
            "description": "Returned for bad request that may have failed validation.",
            "schema": {}
          },
          "409": {
            "description": "Returned for a request that references an identical entity that has already been registered.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flyteidladminTaskCreateRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/tasks/{id.project}/{id.domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.Task` definitions.",
        "description": "Fetch existing task definitions matching input filters.",
        "operationId": "AdminService_ListTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTaskList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/tasks/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.Task` definitions.",
        "description": "Fetch existing task definitions matching input filters.",
        "operationId": "AdminService_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTaskList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/tasks/{id.project}/{id.domain}/{id.name}/{id.version}": {
      "get": {
        "summary": "Fetch a :ref:`ref_flyteidl.admin.Task` definition.",
        "description": "Retrieve an existing task definition.",
        "operationId": "AdminService_GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "description": "Retrieve the Version (including the Build  information) for FlyteAdmin service",
        "operationId": "AdminService_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminGetVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflow_attributes/{attributes.project}/{attributes.domain}/{attributes.workflow}": {
      "put": {
        "summary": "Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.",
        "description": "Update the customized resource attributes associated with a project, domain and workflow combination",
        "operationId": "AdminService_UpdateWorkflowAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowAttributesUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attributes.project",
            "description": "Unique project id for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes.domain",
            "description": "Unique domain id for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes.workflow",
            "description": "Workflow name for which this set of attributes will be applied.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateWorkflowAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflow_attributes/{project}/{domain}/{workflow}": {
      "get": {
        "summary": "Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.",
        "description": "Retrieve the customized resource attributes associated with a project, domain and workflow combination",
        "operationId": "AdminService_GetWorkflowAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowAttributesGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Unique domain id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow",
            "description": "Workflow name which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource_type",
            "description": "Which type of matchable attributes to return.\n+required\n\n - TASK_RESOURCE: Applies to customizable task resource requests and limits.\n - CLUSTER_RESOURCE: Applies to configuring templated kubernetes cluster resources.\n - EXECUTION_QUEUE: Configures task and dynamic task execution queue assignment.\n - EXECUTION_CLUSTER_LABEL: Configures the K8s cluster label to be used for execution to be run\n - QUALITY_OF_SERVICE_SPECIFICATION: Configures default quality of service when undefined in an execution spec.\n - PLUGIN_OVERRIDE: Selects configurable plugin implementation behavior for a given task type.\n - WORKFLOW_EXECUTION_CONFIG: Adds defaults for customizable workflow-execution specifications and overrides.\n - CLUSTER_ASSIGNMENT: Controls how to select an available cluster on which this execution should run.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TASK_RESOURCE",
              "CLUSTER_RESOURCE",
              "EXECUTION_QUEUE",
              "EXECUTION_CLUSTER_LABEL",
              "QUALITY_OF_SERVICE_SPECIFICATION",
              "PLUGIN_OVERRIDE",
              "WORKFLOW_EXECUTION_CONFIG",
              "CLUSTER_ASSIGNMENT"
            ],
            "default": "TASK_RESOURCE"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the attributes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "summary": "Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.",
        "description": "Delete the customized resource attributes associated with a project, domain and workflow combination",
        "operationId": "AdminService_DeleteWorkflowAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowAttributesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Unique project id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Unique domain id which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow",
            "description": "Workflow name which this set of attributes references.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceDeleteWorkflowAttributesBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflow_ids/{project}/{domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of workflow objects.",
        "operationId": "AdminService_ListWorkflowIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminNamedEntityIdentifierList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "description": "Name of the project that contains the identifiers.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Name of the domain the identifiers belongs to within the project.\n+required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflows": {
      "post": {
        "summary": "Create and upload a :ref:`ref_flyteidl.admin.Workflow` definition",
        "description": "Create and register a workflow definition.",
        "operationId": "AdminService_CreateWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowCreateResponse"
            }
          },
          "400": {
            "description": "Returned for bad request that may have failed validation.",
            "schema": {}
          },
          "409": {
            "description": "Returned for a request that references an identical entity that has already been registered.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminWorkflowCreateRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflows/{id.project}/{id.domain}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.Workflow` definitions.",
        "description": "Fetch existing workflow definitions matching input filters.",
        "operationId": "AdminService_ListWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflows/{id.project}/{id.domain}/{id.name}": {
      "get": {
        "summary": "Fetch a list of :ref:`ref_flyteidl.admin.Workflow` definitions.",
        "description": "Fetch existing workflow definitions matching input filters.",
        "operationId": "AdminService_ListWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflowList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Indicates the number of resources to be returned.\n+required",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "description": "In the case of multiple pages of results, this server-provided token can be used to fetch the next page\nin a query.\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "Indicates a list of filters passed as string.\nMore info on constructing filters : \u003cLink\u003e\n+optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.key",
            "description": "Indicates an attribute to sort the response values.\n+required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by.direction",
            "description": "Indicates the direction to apply sort key for response values.\n+optional\n\n - DESCENDING: By default, fields are sorted in descending order.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ],
            "default": "DESCENDING"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/v1/workflows/{id.project}/{id.domain}/{id.name}/{id.version}": {
      "get": {
        "summary": "Fetch a :ref:`ref_flyteidl.admin.Workflow` definition.",
        "description": "Retrieve an existing workflow definition.",
        "operationId": "AdminService_GetWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.project",
            "description": "Name of the project the resource belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.domain",
            "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "description": "User provided value for the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.version",
            "description": "Specific version of the resource.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.resource_type",
            "description": "Identifies the specific type of resource that this identifier corresponds to.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "TASK",
              "WORKFLOW",
              "LAUNCH_PLAN",
              "DATASET"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "id.org",
            "description": "Optional, org key applied to the resource.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    }
  },
  "definitions": {
    "AdminServiceDeleteProjectAttributesBody": {
      "type": "object",
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/adminMatchableResource",
          "title": "Which type of matchable attributes to delete.\n+required"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the project."
        }
      },
      "title": "Request to delete a set matchable project level attribute override.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "AdminServiceDeleteProjectDomainAttributesBody": {
      "type": "object",
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/adminMatchableResource",
          "title": "Which type of matchable attributes to delete.\n+required"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the attributes."
        }
      },
      "title": "Request to delete a set matchable project domain attribute override.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "AdminServiceDeleteWorkflowAttributesBody": {
      "type": "object",
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/adminMatchableResource",
          "title": "Which type of matchable attributes to delete.\n+required"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the attributes."
        }
      },
      "title": "Request to delete a set matchable workflow attribute override.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "AdminServiceTerminateExecutionBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the resource."
            }
          },
          "description": "Uniquely identifies the individual workflow execution to be terminated.",
          "title": "Uniquely identifies the individual workflow execution to be terminated."
        },
        "cause": {
          "type": "string",
          "description": "Optional reason for aborting."
        }
      },
      "description": "Request to terminate an in-progress execution.  This action is irreversible.\nIf an execution is already terminated, this request will simply be a no-op.\nThis request will fail if it references a non-existent execution.\nIf the request succeeds the phase \"ABORTED\" will be recorded for the termination\nwith the optional cause added to the output_result."
    },
    "AdminServiceUpdateExecutionBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the resource."
            }
          },
          "title": "Identifier of the execution to update"
        },
        "state": {
          "$ref": "#/definitions/adminExecutionState",
          "title": "State to set as the new value active/archive"
        }
      }
    },
    "AdminServiceUpdateLaunchPlanBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object",
          "properties": {
            "resource_type": {
              "$ref": "#/definitions/coreResourceType",
              "description": "Identifies the specific type of resource that this identifier corresponds to."
            },
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the resource."
            }
          },
          "description": "Identifier of launch plan for which to change state.\n+required.",
          "title": "Identifier of launch plan for which to change state.\n+required."
        },
        "state": {
          "$ref": "#/definitions/adminLaunchPlanState",
          "description": "Desired state to apply to the launch plan.\n+required."
        }
      },
      "title": "Request to set the referenced launch plan state to the configured value.\nSee :ref:`ref_flyteidl.admin.LaunchPlan` for more details"
    },
    "AdminServiceUpdateNamedEntityBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the resource."
            }
          },
          "title": "Identifier of the metadata to update\n+required"
        },
        "metadata": {
          "$ref": "#/definitions/adminNamedEntityMetadata",
          "title": "Metadata object to set as the new value\n+required"
        }
      },
      "description": "Request to set the referenced named entity state to the configured value."
    },
    "AdminServiceUpdateProjectAttributesBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "matching_attributes": {
              "$ref": "#/definitions/adminMatchingAttributes"
            },
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the project."
            }
          },
          "title": "+required"
        }
      },
      "title": "Sets custom attributes for a project\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "AdminServiceUpdateProjectBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name."
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminDomain"
          }
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "$ref": "#/definitions/adminLabels",
          "description": "Leverage Labels from flyteidl.admin.common.proto to\ntag projects with ownership information."
        },
        "state": {
          "$ref": "#/definitions/ProjectProjectState"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Top-level namespace used to classify different entities like workflows and executions."
    },
    "AdminServiceUpdateProjectDomainAttributesBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "matching_attributes": {
              "$ref": "#/definitions/adminMatchingAttributes"
            },
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the attributes."
            }
          },
          "title": "+required"
        }
      },
      "title": "Sets custom attributes for a project-domain combination.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "AdminServiceUpdateWorkflowAttributesBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "matching_attributes": {
              "$ref": "#/definitions/adminMatchingAttributes"
            },
            "org": {
              "type": "string",
              "description": "Optional, org key applied to the attributes."
            }
          },
          "title": "Defines a set of custom matching attributes which defines resource defaults for a project, domain and workflow.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
        }
      },
      "title": "Sets custom attributes for a project, domain and workflow combination.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "BlobTypeBlobDimensionality": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPART"
      ],
      "default": "SINGLE"
    },
    "ConjunctionExpressionLogicalOperator": {
      "type": "string",
      "enum": [
        "AND",
        "OR"
      ],
      "default": "AND",
      "description": "- AND: Conjunction",
      "title": "Nested conditions. They can be conjoined using AND / OR\nOrder of evaluation is not important as the operators are Commutative"
    },
    "ConnectionSetIdList": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContainerArchitecture": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AMD64",
        "ARM64",
        "ARM_V6",
        "ARM_V7"
      ],
      "default": "UNKNOWN",
      "description": "Architecture-type the container image supports."
    },
    "DataLoadingConfigLiteralMapFormat": {
      "type": "string",
      "enum": [
        "JSON",
        "YAML",
        "PROTO"
      ],
      "default": "JSON",
      "description": "- JSON: JSON / YAML for the metadata (which contains inlined primitive values). The representation is inline with the standard json specification as specified - https://www.json.org/json-en.html\n - PROTO: Proto is a serialized binary of `core.LiteralMap` defined in flyteidl/core",
      "title": "LiteralMapFormat decides the encoding format in which the input metadata should be made available to the containers.\nIf the user has access to the protocol buffer definitions, it is recommended to use the PROTO format.\nJSON and YAML do not need any protobuf definitions to read it\nAll remote references in core.LiteralMap are replaced with local filesystem references (the data is downloaded to local filesystem)"
    },
    "ExecutionErrorErrorKind": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "USER",
        "SYSTEM"
      ],
      "default": "UNKNOWN",
      "title": "Error type: System or User"
    },
    "ExecutionMetadataExecutionMode": {
      "type": "string",
      "enum": [
        "MANUAL",
        "SCHEDULED",
        "SYSTEM",
        "RELAUNCH",
        "CHILD_WORKFLOW",
        "RECOVERED",
        "TRIGGER"
      ],
      "default": "MANUAL",
      "description": "The method by which this execution was launched.\n\n - MANUAL: The default execution mode, MANUAL implies that an execution was launched by an individual.\n - SCHEDULED: A schedule triggered this execution launch.\n - SYSTEM: A system process was responsible for launching this execution rather an individual.\n - RELAUNCH: This execution was launched with identical inputs as a previous execution.\n - CHILD_WORKFLOW: This execution was triggered by another execution.\n - RECOVERED: This execution was recovered from another execution.\n - TRIGGER: Execution was kicked off by the artifact trigger system"
    },
    "IOStrategyDownloadMode": {
      "type": "string",
      "enum": [
        "DOWNLOAD_EAGER",
        "DOWNLOAD_STREAM",
        "DO_NOT_DOWNLOAD"
      ],
      "default": "DOWNLOAD_EAGER",
      "description": "- DOWNLOAD_EAGER: All data will be downloaded before the main container is executed\n - DOWNLOAD_STREAM: Data will be downloaded as a stream and an End-Of-Stream marker will be written to indicate all data has been downloaded. Refer to protocol for details\n - DO_NOT_DOWNLOAD: Large objects (offloaded) will not be downloaded",
      "title": "Mode to use for downloading"
    },
    "IOStrategyUploadMode": {
      "type": "string",
      "enum": [
        "UPLOAD_ON_EXIT",
        "UPLOAD_EAGER",
        "DO_NOT_UPLOAD"
      ],
      "default": "UPLOAD_ON_EXIT",
      "description": "- UPLOAD_ON_EXIT: All data will be uploaded after the main container exits\n - UPLOAD_EAGER: Data will be uploaded as it appears. Refer to protocol specification for details\n - DO_NOT_UPLOAD: Data will not be uploaded, only references will be written",
      "title": "Mode to use for uploading"
    },
    "PluginOverrideMissingPluginBehavior": {
      "type": "string",
      "enum": [
        "FAIL",
        "USE_DEFAULT"
      ],
      "default": "FAIL",
      "description": " - FAIL: By default, if this plugin is not enabled for a Flyte deployment then execution will fail.\n - USE_DEFAULT: Uses the system-configured default implementation."
    },
    "ProjectProjectState": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "SYSTEM_GENERATED"
      ],
      "default": "ACTIVE",
      "description": "The state of the project is used to control its visibility in the UI and validity.\n\n - ACTIVE: By default, all projects are considered active.\n - ARCHIVED: Archived projects are no longer visible in the UI and no longer valid.\n - SYSTEM_GENERATED: System generated projects that aren't explicitly created or managed by a user."
    },
    "QualityOfServiceTier": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "HIGH",
        "MEDIUM",
        "LOW"
      ],
      "default": "UNDEFINED",
      "description": " - UNDEFINED: Default: no quality of service specified."
    },
    "ResourcesResourceEntry": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ResourcesResourceName",
          "description": "Resource name."
        },
        "value": {
          "type": "string",
          "title": "Value must be a valid k8s quantity. See\nhttps://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80"
        }
      },
      "description": "Encapsulates a resource name and value."
    },
    "ResourcesResourceName": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CPU",
        "GPU",
        "MEMORY",
        "STORAGE",
        "EPHEMERAL_STORAGE"
      ],
      "default": "UNKNOWN",
      "description": "Known resource names.\n\n - EPHEMERAL_STORAGE: For Kubernetes-based deployments, pods use ephemeral local storage for scratch space, caching, and for logs."
    },
    "RuntimeMetadataRuntimeType": {
      "type": "string",
      "enum": [
        "OTHER",
        "FLYTE_SDK"
      ],
      "default": "OTHER"
    },
    "SchemaColumnSchemaColumnType": {
      "type": "string",
      "enum": [
        "INTEGER",
        "FLOAT",
        "STRING",
        "BOOLEAN",
        "DATETIME",
        "DURATION"
      ],
      "default": "INTEGER"
    },
    "SchemaTypeSchemaColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "A unique name -within the schema type- for the column"
        },
        "type": {
          "$ref": "#/definitions/SchemaColumnSchemaColumnType",
          "description": "The column type. This allows a limited set of types currently."
        }
      }
    },
    "SecretMountType": {
      "type": "string",
      "enum": [
        "ANY",
        "ENV_VAR",
        "FILE"
      ],
      "default": "ANY",
      "description": " - ANY: Default case, indicates the client can tolerate either mounting options.\n - ENV_VAR: ENV_VAR indicates the secret needs to be mounted as an environment variable.\n - FILE: FILE indicates the secret needs to be mounted as a file."
    },
    "SortDirection": {
      "type": "string",
      "enum": [
        "DESCENDING",
        "ASCENDING"
      ],
      "default": "DESCENDING",
      "description": " - DESCENDING: By default, fields are sorted in descending order."
    },
    "SqlDialect": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "ANSI",
        "HIVE",
        "OTHER"
      ],
      "default": "UNDEFINED",
      "description": "The dialect of the SQL statement. This is used to validate and parse SQL statements at compilation time to avoid\nexpensive runtime operations. If set to an unsupported dialect, no validation will be done on the statement.\nWe support the following dialect: ansi, hive."
    },
    "StructuredDatasetTypeDatasetColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique name within the schema type for the column."
        },
        "literal_type": {
          "$ref": "#/definitions/coreLiteralType",
          "description": "The column type."
        }
      }
    },
    "TaskExecutionMetadataInstanceClass": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "INTERRUPTIBLE"
      ],
      "default": "DEFAULT",
      "description": "Includes the broad category of machine used for this specific task execution.\n\n - DEFAULT: The default instance class configured for the flyte application platform.\n - INTERRUPTIBLE: The instance class configured for interruptible tasks."
    },
    "TaskLogMessageFormat": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CSV",
        "JSON"
      ],
      "default": "UNKNOWN"
    },
    "WorkflowMetadataOnFailurePolicy": {
      "type": "string",
      "enum": [
        "FAIL_IMMEDIATELY",
        "FAIL_AFTER_EXECUTABLE_NODES_COMPLETE"
      ],
      "default": "FAIL_IMMEDIATELY",
      "description": "- FAIL_IMMEDIATELY: FAIL_IMMEDIATELY instructs the system to fail as soon as a node fails in the workflow. It'll automatically\nabort all currently running nodes and clean up resources before finally marking the workflow executions as\nfailed.\n - FAIL_AFTER_EXECUTABLE_NODES_COMPLETE: FAIL_AFTER_EXECUTABLE_NODES_COMPLETE instructs the system to make as much progress as it can. The system will\nnot alter the dependencies of the execution graph so any node that depend on the failed node will not be run.\nOther nodes that will be executed to completion before cleaning up resources and marking the workflow\nexecution as failed.",
      "title": "Failure Handling Strategy"
    },
    "adminAbortMetadata": {
      "type": "object",
      "properties": {
        "cause": {
          "type": "string",
          "description": "In the case of a user-specified abort, this will pass along the user-supplied cause."
        },
        "principal": {
          "type": "string",
          "title": "Identifies the entity (if any) responsible for terminating the execution"
        }
      },
      "description": "Specifies metadata around an aborted workflow execution."
    },
    "adminAnnotations": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of custom annotations to be applied to the execution resource."
        }
      },
      "description": "Annotation values to be applied to an execution resource.\nIn the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined\nto specify how to merge annotations defined at registration and execution time."
    },
    "adminAuth": {
      "type": "object",
      "properties": {
        "assumable_iam_role": {
          "type": "string",
          "description": "Defines an optional iam role which will be used for tasks run in executions created with this launch plan."
        },
        "kubernetes_service_account": {
          "type": "string",
          "description": "Defines an optional kubernetes service account which will be used for tasks run in executions created with this launch plan."
        }
      },
      "description": "Defines permissions associated with executions created by this launch plan spec.\nUse either of these roles when they have permissions required by your workflow execution.\nDeprecated."
    },
    "adminAuthRole": {
      "type": "object",
      "properties": {
        "assumable_iam_role": {
          "type": "string",
          "description": "Defines an optional iam role which will be used for tasks run in executions created with this launch plan."
        },
        "kubernetes_service_account": {
          "type": "string",
          "description": "Defines an optional kubernetes service account which will be used for tasks run in executions created with this launch plan."
        }
      },
      "description": "Defines permissions associated with executions created by this launch plan spec.\nUse either of these roles when they have permissions required by your workflow execution.\nDeprecated."
    },
    "adminClusterAssignment": {
      "type": "object",
      "properties": {
        "cluster_pool_name": {
          "type": "string"
        }
      },
      "description": "Encapsulates specifications for routing an execution onto a specific cluster."
    },
    "adminClusterResourceAttributes": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom resource attributes which will be applied in cluster resource creation (e.g. quotas).\nMap keys are the *case-sensitive* names of variables in templatized resource files.\nMap values should be the custom values which get substituted during resource creation."
        }
      }
    },
    "adminCronSchedule": {
      "type": "object",
      "properties": {
        "schedule": {
          "type": "string",
          "title": "Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;\nAlso supports nonstandard predefined scheduling definitions\nas described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions\nexcept @reboot"
        },
        "offset": {
          "type": "string",
          "title": "ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations"
        }
      },
      "description": "Options for schedules to run according to a cron expression."
    },
    "adminDescription": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "long description - no more than 4KB"
        },
        "uri": {
          "type": "string",
          "title": "if the description sizes exceed some threshold we can offload the entire\ndescription proto altogether to an external data store, like S3 rather than store inline in the db"
        },
        "format": {
          "$ref": "#/definitions/adminDescriptionFormat",
          "title": "Format of the long description"
        },
        "icon_link": {
          "type": "string",
          "title": "Optional link to an icon for the entity"
        }
      },
      "description": "Full user description with formatting preserved. This can be rendered\nby clients, such as the console or command line tools with in-tact\nformatting."
    },
    "adminDescriptionEntity": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "id represents the unique identifier of the description entity."
        },
        "short_description": {
          "type": "string",
          "description": "One-liner overview of the entity."
        },
        "long_description": {
          "$ref": "#/definitions/adminDescription",
          "description": "Full user description with formatting preserved."
        },
        "source_code": {
          "$ref": "#/definitions/adminSourceCode",
          "description": "Optional link to source code used to define this entity."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User-specified tags. These are arbitrary and can be used for searching\nfiltering and discovering tasks."
        }
      },
      "description": "DescriptionEntity contains detailed description for the task/workflow.\nDocumentation could provide insight into the algorithms, business use case, etc."
    },
    "adminDescriptionEntityList": {
      "type": "object",
      "properties": {
        "descriptionEntities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminDescriptionEntity"
          },
          "description": "A list of DescriptionEntities returned based on the request."
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Represents a list of DescriptionEntities returned from the admin.\nSee :ref:`ref_flyteidl.admin.DescriptionEntity` for more details"
    },
    "adminDescriptionFormat": {
      "type": "string",
      "enum": [
        "DESCRIPTION_FORMAT_UNKNOWN",
        "DESCRIPTION_FORMAT_MARKDOWN",
        "DESCRIPTION_FORMAT_HTML",
        "DESCRIPTION_FORMAT_RST"
      ],
      "default": "DESCRIPTION_FORMAT_UNKNOWN",
      "description": "- DESCRIPTION_FORMAT_RST: python default documentation - comments is rst",
      "title": "The format of the long description"
    },
    "adminDomain": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Globally unique domain name."
        },
        "name": {
          "type": "string",
          "description": "Display name."
        }
      },
      "description": "Namespace within a project commonly used to differentiate between different service instances.\ne.g. \"production\", \"development\", etc."
    },
    "adminDynamicNodeWorkflowResponse": {
      "type": "object",
      "properties": {
        "compiled_workflow": {
          "$ref": "#/definitions/coreCompiledWorkflowClosure"
        }
      }
    },
    "adminEmailNotification": {
      "type": "object",
      "properties": {
        "recipients_email": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of email addresses recipients for this notification.\n+required"
        }
      },
      "description": "Defines an email notification specification."
    },
    "adminEnvs": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flyteidlcoreKeyValuePair"
          },
          "description": "Map of custom environment variables to be applied to the execution resource."
        }
      },
      "description": "Environment variable values to be applied to an execution resource.\nIn the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined\nto specify how to merge environment variables defined at registration and execution time."
    },
    "adminExecution": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "description": "Unique identifier of the workflow execution."
        },
        "spec": {
          "$ref": "#/definitions/adminExecutionSpec",
          "description": "User-provided configuration and inputs for launching the execution."
        },
        "closure": {
          "$ref": "#/definitions/adminExecutionClosure",
          "description": "Execution results."
        }
      },
      "description": "A workflow execution represents an instantiated workflow, including all inputs and additional\nmetadata as well as computed results included state, outputs, and duration-based attributes.\nUsed as a response object used in Get and List execution requests."
    },
    "adminExecutionClosure": {
      "type": "object",
      "properties": {
        "outputs": {
          "$ref": "#/definitions/adminLiteralMapBlob",
          "description": "Output URI in the case of a successful execution.\nDEPRECATED. Use GetExecutionData to fetch output data instead."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "description": "Error information in the case of a failed execution."
        },
        "abort_cause": {
          "type": "string",
          "description": "In the case of a user-specified abort, this will pass along the user-supplied cause."
        },
        "abort_metadata": {
          "$ref": "#/definitions/adminAbortMetadata",
          "description": "In the case of a user-specified abort, this will pass along the user and their supplied cause."
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this execution.\nDEPRECATED. Use GetExecutionData to fetch output data instead."
        },
        "computed_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "title": "Inputs computed and passed for execution.\ncomputed_inputs depends on inputs in ExecutionSpec, fixed and default inputs in launch plan"
        },
        "phase": {
          "$ref": "#/definitions/coreWorkflowExecutionPhase",
          "description": "Most recent recorded phase for the execution."
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "Reported time at which the execution began running."
        },
        "duration": {
          "type": "string",
          "description": "The amount of time the execution spent running."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Reported time at which the execution was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Reported time at which the execution was last updated."
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminNotification"
          },
          "description": "The notification settings to use after merging the CreateExecutionRequest and the launch plan\nnotification settings. An execution launched with notifications will always prefer that definition\nto notifications defined statically in a launch plan."
        },
        "workflow_id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "Identifies the workflow definition for this execution."
        },
        "state_change_details": {
          "$ref": "#/definitions/adminExecutionStateChangeDetails",
          "title": "Provides the details of the last stage change"
        }
      },
      "title": "Encapsulates the results of the Execution"
    },
    "adminExecutionClusterLabel": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "Label value to determine where the execution will be run"
        }
      }
    },
    "adminExecutionCreateRequest": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "title": "Name of the project the execution belongs to.\n+required"
        },
        "domain": {
          "type": "string",
          "title": "Name of the domain the execution belongs to.\nA domain can be considered as a subset within a specific project.\n+required"
        },
        "name": {
          "type": "string",
          "title": "User provided value for the resource.\nIf none is provided the system will generate a unique string.\n+optional"
        },
        "spec": {
          "$ref": "#/definitions/adminExecutionSpec",
          "title": "Additional fields necessary to launch the execution.\n+optional"
        },
        "inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "title": "The inputs required to start the execution. All required inputs must be\nincluded in this map. If not required and not provided, defaults apply.\n+optional"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Request to launch an execution with the given project, domain and optionally-assigned name."
    },
    "adminExecutionCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier"
        }
      },
      "description": "The unique identifier for a successfully created execution.\nIf the name was *not* specified in the create request, this identifier will include a generated name."
    },
    "adminExecutionList": {
      "type": "object",
      "properties": {
        "executions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminExecution"
          }
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Used as a response for request to list executions.\nSee :ref:`ref_flyteidl.admin.Execution` for more details"
    },
    "adminExecutionMetadata": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/ExecutionMetadataExecutionMode"
        },
        "principal": {
          "type": "string",
          "description": "Identifier of the entity that triggered this execution.\nFor systems using back-end authentication any value set here will be discarded in favor of the\nauthenticated user context."
        },
        "nesting": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the nestedness of this execution.\nIf a user launches a workflow execution, the default nesting is 0.\nIf this execution further launches a workflow (child workflow), the nesting level is incremented by 0 =\u003e 1\nGenerally, if workflow at nesting level k launches a workflow then the child workflow will have\nnesting = k + 1."
        },
        "scheduled_at": {
          "type": "string",
          "format": "date-time",
          "description": "For scheduled executions, the requested time for execution for this specific schedule invocation."
        },
        "parent_node_execution": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier",
          "title": "Which subworkflow node (if any) launched this execution"
        },
        "reference_execution": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "description": "Optional, a reference workflow execution related to this execution.\nIn the case of a relaunch, this references the original workflow execution."
        },
        "system_metadata": {
          "$ref": "#/definitions/adminSystemMetadata",
          "description": "Optional, platform-specific metadata about the execution.\nIn this the future this may be gated behind an ACL or some sort of authorization."
        },
        "artifact_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreArtifactID"
          },
          "description": "Save a list of the artifacts used in this execution for now. This is a list only rather than a mapping\nsince we don't have a structure to handle nested ones anyways."
        }
      },
      "description": "Represents attributes about an execution which are not required to launch the execution but are useful to record.\nThese attributes are assigned at launch time and do not change."
    },
    "adminExecutionQueueAttributes": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags used for assigning execution queues for tasks defined within this project."
        }
      }
    },
    "adminExecutionRecoverRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "description": "Identifier of the workflow execution to recover."
        },
        "name": {
          "type": "string",
          "title": "User provided value for the recovered execution.\nIf none is provided the system will generate a unique string.\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/adminExecutionMetadata",
          "description": "Additional metadata which will be used to overwrite any metadata in the reference execution when triggering a recovery execution."
        }
      },
      "description": "Request to recover the referenced execution."
    },
    "adminExecutionRelaunchRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "title": "Identifier of the workflow execution to relaunch.\n+required"
        },
        "name": {
          "type": "string",
          "title": "User provided value for the relaunched execution.\nIf none is provided the system will generate a unique string.\n+optional"
        },
        "overwrite_cache": {
          "type": "boolean",
          "description": "Allows for all cached values of a workflow and its tasks to be overwritten for a single execution.\nIf enabled, all calculations are performed even if cached results would be available, overwriting the stored\ndata once execution finishes successfully."
        }
      },
      "description": "Request to relaunch the referenced execution."
    },
    "adminExecutionSpec": {
      "type": "object",
      "properties": {
        "launch_plan": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "Launch plan to be executed"
        },
        "inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "title": "Input values to be passed for the execution"
        },
        "metadata": {
          "$ref": "#/definitions/adminExecutionMetadata",
          "title": "Metadata for the execution"
        },
        "notifications": {
          "$ref": "#/definitions/adminNotificationList",
          "description": "List of notifications based on Execution status transitions\nWhen this list is not empty it is used rather than any notifications defined in the referenced launch plan.\nWhen this list is empty, the notifications defined for the launch plan will be applied."
        },
        "disable_all": {
          "type": "boolean",
          "description": "This should be set to true if all notifications are intended to be disabled for this execution."
        },
        "labels": {
          "$ref": "#/definitions/adminLabels",
          "description": "Labels to apply to the execution resource."
        },
        "annotations": {
          "$ref": "#/definitions/adminAnnotations",
          "description": "Annotations to apply to the execution resource."
        },
        "security_context": {
          "$ref": "#/definitions/coreSecurityContext",
          "description": "Optional: security context override to apply this execution."
        },
        "auth_role": {
          "$ref": "#/definitions/adminAuthRole",
          "description": "Optional: auth override to apply this execution."
        },
        "quality_of_service": {
          "$ref": "#/definitions/coreQualityOfService",
          "description": "Indicates the runtime priority of the execution."
        },
        "max_parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Controls the maximum number of task nodes that can be run in parallel for the entire workflow.\nThis is useful to achieve fairness. Note: MapTasks are regarded as one unit,\nand parallelism/concurrency of MapTasks is independent from this."
        },
        "raw_output_data_config": {
          "$ref": "#/definitions/adminRawOutputDataConfig",
          "title": "User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).\nThis should be a prefix like s3://my-bucket/my-data"
        },
        "cluster_assignment": {
          "$ref": "#/definitions/adminClusterAssignment",
          "description": "Controls how to select an available cluster on which this execution should run."
        },
        "interruptible": {
          "type": "boolean",
          "description": "Allows for the interruptible flag of a workflow to be overwritten for a single execution.\nOmitting this field uses the workflow's value as a default.\nAs we need to distinguish between the field not being provided and its default value false, we have to use a wrapper\naround the bool field."
        },
        "overwrite_cache": {
          "type": "boolean",
          "description": "Allows for all cached values of a workflow and its tasks to be overwritten for a single execution.\nIf enabled, all calculations are performed even if cached results would be available, overwriting the stored\ndata once execution finishes successfully."
        },
        "envs": {
          "$ref": "#/definitions/adminEnvs",
          "description": "Environment variables to be set for the execution."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags to be set for the execution."
        },
        "execution_cluster_label": {
          "$ref": "#/definitions/adminExecutionClusterLabel",
          "description": "Execution cluster label to be set for the execution."
        },
        "execution_env_assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreExecutionEnvAssignment"
          },
          "description": "Execution environment assignments to be set for the execution."
        }
      },
      "description": "An ExecutionSpec encompasses all data used to launch this execution. The Spec does not change over the lifetime\nof an execution as it progresses across phase changes."
    },
    "adminExecutionState": {
      "type": "string",
      "enum": [
        "EXECUTION_ACTIVE",
        "EXECUTION_ARCHIVED"
      ],
      "default": "EXECUTION_ACTIVE",
      "description": "The state of the execution is used to control its visibility in the UI/CLI.\n\n - EXECUTION_ACTIVE: By default, all executions are considered active.\n - EXECUTION_ARCHIVED: Archived executions are no longer visible in the UI."
    },
    "adminExecutionStateChangeDetails": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/adminExecutionState",
          "description": "The state of the execution is used to control its visibility in the UI/CLI."
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents when the state changed."
        },
        "principal": {
          "type": "string",
          "title": "Identifies the entity (if any) responsible for causing the state change of the execution"
        }
      }
    },
    "adminExecutionTerminateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminExecutionUpdateResponse": {
      "type": "object"
    },
    "adminFixedRate": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "$ref": "#/definitions/adminFixedRateUnit"
        }
      },
      "description": "Option for schedules run at a certain frequency e.g. every 2 minutes."
    },
    "adminFixedRateUnit": {
      "type": "string",
      "enum": [
        "MINUTE",
        "HOUR",
        "DAY"
      ],
      "default": "MINUTE",
      "description": "Represents a frequency at which to run a schedule."
    },
    "adminFlyteURLs": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "string"
        },
        "outputs": {
          "type": "string"
        },
        "deck": {
          "type": "string"
        }
      },
      "description": "These URLs are returned as part of node and task execution data requests."
    },
    "adminGetDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminDomain"
          }
        }
      },
      "description": "Represents a list of domains."
    },
    "adminGetVersionResponse": {
      "type": "object",
      "properties": {
        "control_plane_version": {
          "$ref": "#/definitions/adminVersion",
          "title": "The control plane version information. FlyteAdmin and related components\nform the control plane of Flyte"
        }
      },
      "title": "Response for the GetVersion API"
    },
    "adminLabels": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of custom labels to be applied to the execution resource."
        }
      },
      "description": "Label values to be applied to an execution resource.\nIn the future a mode (e.g. OVERRIDE, APPEND, etc) can be defined\nto specify how to merge labels defined at registration and execution time."
    },
    "adminLaunchPlan": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "Uniquely identifies a launch plan entity."
        },
        "spec": {
          "$ref": "#/definitions/adminLaunchPlanSpec",
          "description": "User-provided launch plan details, including reference workflow, inputs and other metadata."
        },
        "closure": {
          "$ref": "#/definitions/adminLaunchPlanClosure",
          "description": "Values computed by the flyte platform after launch plan registration."
        }
      },
      "description": "A LaunchPlan provides the capability to templatize workflow executions.\nLaunch plans simplify associating one or more schedules, inputs and notifications with your workflows.\nLaunch plans can be shared and used to trigger executions with predefined inputs even when a workflow\ndefinition doesn't necessarily have a default value for said input."
    },
    "adminLaunchPlanClosure": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/adminLaunchPlanState",
          "description": "Indicate the Launch plan state."
        },
        "expected_inputs": {
          "$ref": "#/definitions/coreParameterMap",
          "title": "Indicates the set of inputs expected when creating an execution with the Launch plan"
        },
        "expected_outputs": {
          "$ref": "#/definitions/coreVariableMap",
          "title": "Indicates the set of outputs expected to be produced by creating an execution with the Launch plan"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the launch plan was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the launch plan was last updated."
        }
      },
      "description": "Values computed by the flyte platform after launch plan registration.\nThese include expected_inputs required to be present in a CreateExecutionRequest\nto launch the reference workflow as well timestamp values associated with the launch plan."
    },
    "adminLaunchPlanCreateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "Uniquely identifies a launch plan entity."
        },
        "spec": {
          "$ref": "#/definitions/adminLaunchPlanSpec",
          "description": "User-provided launch plan details, including reference workflow, inputs and other metadata."
        }
      },
      "description": "Request to register a launch plan. The included LaunchPlanSpec may have a complete or incomplete set of inputs required\nto launch a workflow execution. By default all launch plans are registered in state INACTIVE. If you wish to\nset the state to ACTIVE, you must submit a LaunchPlanUpdateRequest, after you have successfully created a launch plan."
    },
    "adminLaunchPlanCreateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminLaunchPlanList": {
      "type": "object",
      "properties": {
        "launch_plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminLaunchPlan"
          }
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Response object for list launch plan requests.\nSee :ref:`ref_flyteidl.admin.LaunchPlan` for more details"
    },
    "adminLaunchPlanMetadata": {
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/adminSchedule",
          "title": "Schedule to execute the Launch Plan"
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminNotification"
          },
          "title": "List of notifications based on Execution status transitions"
        },
        "launch_conditions": {
          "$ref": "#/definitions/protobufAny",
          "title": "Additional metadata for how to launch the launch plan"
        }
      },
      "description": "Additional launch plan attributes included in the LaunchPlanSpec not strictly required to launch\nthe reference workflow."
    },
    "adminLaunchPlanSpec": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "Reference to the Workflow template that the launch plan references"
        },
        "entity_metadata": {
          "$ref": "#/definitions/adminLaunchPlanMetadata",
          "title": "Metadata for the Launch Plan"
        },
        "default_inputs": {
          "$ref": "#/definitions/coreParameterMap",
          "description": "Input values to be passed for the execution.\nThese can be overridden when an execution is created with this launch plan."
        },
        "fixed_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Fixed, non-overridable inputs for the Launch Plan.\nThese can not be overridden when an execution is created with this launch plan."
        },
        "role": {
          "type": "string",
          "title": "String to indicate the role to use to execute the workflow underneath"
        },
        "labels": {
          "$ref": "#/definitions/adminLabels",
          "description": "Custom labels to be applied to the execution resource."
        },
        "annotations": {
          "$ref": "#/definitions/adminAnnotations",
          "description": "Custom annotations to be applied to the execution resource."
        },
        "auth": {
          "$ref": "#/definitions/adminAuth",
          "description": "Indicates the permission associated with workflow executions triggered with this launch plan."
        },
        "auth_role": {
          "$ref": "#/definitions/adminAuthRole"
        },
        "security_context": {
          "$ref": "#/definitions/coreSecurityContext",
          "title": "Indicates security context for permissions triggered with this launch plan"
        },
        "quality_of_service": {
          "$ref": "#/definitions/coreQualityOfService",
          "description": "Indicates the runtime priority of the execution."
        },
        "raw_output_data_config": {
          "$ref": "#/definitions/adminRawOutputDataConfig",
          "description": "Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.)."
        },
        "max_parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Controls the maximum number of tasknodes that can be run in parallel for the entire workflow.\nThis is useful to achieve fairness. Note: MapTasks are regarded as one unit,\nand parallelism/concurrency of MapTasks is independent from this."
        },
        "interruptible": {
          "type": "boolean",
          "description": "Allows for the interruptible flag of a workflow to be overwritten for a single execution.\nOmitting this field uses the workflow's value as a default.\nAs we need to distinguish between the field not being provided and its default value false, we have to use a wrapper\naround the bool field."
        },
        "overwrite_cache": {
          "type": "boolean",
          "description": "Allows for all cached values of a workflow and its tasks to be overwritten for a single execution.\nIf enabled, all calculations are performed even if cached results would be available, overwriting the stored\ndata once execution finishes successfully."
        },
        "envs": {
          "$ref": "#/definitions/adminEnvs",
          "description": "Environment variables to be set for the execution."
        },
        "execution_env_assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreExecutionEnvAssignment"
          },
          "description": "Execution environment assignments to be set for the execution."
        }
      },
      "description": "User-provided launch plan definition and configuration values."
    },
    "adminLaunchPlanState": {
      "type": "string",
      "enum": [
        "INACTIVE",
        "ACTIVE"
      ],
      "default": "INACTIVE",
      "description": "By default any launch plan regardless of state can be used to launch a workflow execution.\nHowever, at most one version of a launch plan\n(e.g. a NamedEntityIdentifier set of shared project, domain and name values) can be\nactive at a time in regards to *schedules*. That is, at most one schedule in a NamedEntityIdentifier\ngroup will be observed and trigger executions at a defined cadence."
    },
    "adminLaunchPlanUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminListMatchableAttributesResponse": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminMatchableAttributesConfiguration"
          }
        }
      },
      "title": "Response for a request for all matching resource attributes for a resource type.\nSee :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for more details"
    },
    "adminLiteralMapBlob": {
      "type": "object",
      "properties": {
        "values": {
          "$ref": "#/definitions/coreLiteralMap",
          "title": "Data in LiteralMap format"
        },
        "uri": {
          "type": "string",
          "title": "In the event that the map is too large, we return a uri to the data"
        }
      },
      "title": "Input/output data can represented by actual values or a link to where values are stored"
    },
    "adminMatchableAttributesConfiguration": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/adminMatchingAttributes"
        },
        "domain": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "workflow": {
          "type": "string"
        },
        "launch_plan": {
          "type": "string"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Represents a custom set of attributes applied for either a domain (and optional org); a domain and project (and optional org);\nor domain, project and workflow name (and optional org).\nThese are used to override system level defaults for kubernetes cluster resource management,\ndefault execution values, and more all across different levels of specificity."
    },
    "adminMatchableResource": {
      "type": "string",
      "enum": [
        "TASK_RESOURCE",
        "CLUSTER_RESOURCE",
        "EXECUTION_QUEUE",
        "EXECUTION_CLUSTER_LABEL",
        "QUALITY_OF_SERVICE_SPECIFICATION",
        "PLUGIN_OVERRIDE",
        "WORKFLOW_EXECUTION_CONFIG",
        "CLUSTER_ASSIGNMENT"
      ],
      "default": "TASK_RESOURCE",
      "description": "Defines a resource that can be configured by customizable Project-, ProjectDomain- or WorkflowAttributes\nbased on matching tags.\n\n - TASK_RESOURCE: Applies to customizable task resource requests and limits.\n - CLUSTER_RESOURCE: Applies to configuring templated kubernetes cluster resources.\n - EXECUTION_QUEUE: Configures task and dynamic task execution queue assignment.\n - EXECUTION_CLUSTER_LABEL: Configures the K8s cluster label to be used for execution to be run\n - QUALITY_OF_SERVICE_SPECIFICATION: Configures default quality of service when undefined in an execution spec.\n - PLUGIN_OVERRIDE: Selects configurable plugin implementation behavior for a given task type.\n - WORKFLOW_EXECUTION_CONFIG: Adds defaults for customizable workflow-execution specifications and overrides.\n - CLUSTER_ASSIGNMENT: Controls how to select an available cluster on which this execution should run."
    },
    "adminMatchingAttributes": {
      "type": "object",
      "properties": {
        "task_resource_attributes": {
          "$ref": "#/definitions/adminTaskResourceAttributes"
        },
        "cluster_resource_attributes": {
          "$ref": "#/definitions/adminClusterResourceAttributes"
        },
        "execution_queue_attributes": {
          "$ref": "#/definitions/adminExecutionQueueAttributes"
        },
        "execution_cluster_label": {
          "$ref": "#/definitions/adminExecutionClusterLabel"
        },
        "quality_of_service": {
          "$ref": "#/definitions/coreQualityOfService"
        },
        "plugin_overrides": {
          "$ref": "#/definitions/adminPluginOverrides"
        },
        "workflow_execution_config": {
          "$ref": "#/definitions/adminWorkflowExecutionConfig"
        },
        "cluster_assignment": {
          "$ref": "#/definitions/adminClusterAssignment"
        }
      },
      "description": "Generic container for encapsulating all types of the above attributes messages."
    },
    "adminNamedEntity": {
      "type": "object",
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/coreResourceType",
          "description": "Resource type of the named entity. One of Task, Workflow or LaunchPlan."
        },
        "id": {
          "$ref": "#/definitions/adminNamedEntityIdentifier"
        },
        "metadata": {
          "$ref": "#/definitions/adminNamedEntityMetadata",
          "description": "Additional metadata around a named entity."
        }
      },
      "description": "Encapsulates information common to a NamedEntity, a Flyte resource such as a task,\nworkflow or launch plan. A NamedEntity is exclusively identified by its resource type\nand identifier."
    },
    "adminNamedEntityIdentifier": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Name of the project the resource belongs to."
        },
        "domain": {
          "type": "string",
          "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project."
        },
        "name": {
          "type": "string",
          "title": "User provided value for the resource.\nThe combination of project + domain + name uniquely identifies the resource.\n+optional - in certain contexts - like 'List API', 'Launch plans'"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Encapsulation of fields that identifies a Flyte resource.\nA Flyte resource can be a task, workflow or launch plan.\nA resource can internally have multiple versions and is uniquely identified\nby project, domain, and name."
    },
    "adminNamedEntityIdentifierList": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminNamedEntityIdentifier"
          },
          "description": "A list of identifiers."
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "description": "Represents a list of NamedEntityIdentifiers."
    },
    "adminNamedEntityList": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminNamedEntity"
          },
          "title": "A list of NamedEntity objects"
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "description": "Represents a list of NamedEntityIdentifiers."
    },
    "adminNamedEntityMetadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Common description across all versions of the entity\n+optional"
        },
        "state": {
          "$ref": "#/definitions/adminNamedEntityState",
          "description": "Shared state across all version of the entity\nAt this point in time, only workflow entities can have their state archived."
        }
      },
      "description": "Additional metadata around a named entity."
    },
    "adminNamedEntityState": {
      "type": "string",
      "enum": [
        "NAMED_ENTITY_ACTIVE",
        "NAMED_ENTITY_ARCHIVED",
        "SYSTEM_GENERATED"
      ],
      "default": "NAMED_ENTITY_ACTIVE",
      "description": "The status of the named entity is used to control its visibility in the UI.\n\n - NAMED_ENTITY_ACTIVE: By default, all named entities are considered active and under development.\n - NAMED_ENTITY_ARCHIVED: Archived named entities are no longer visible in the UI.\n - SYSTEM_GENERATED: System generated entities that aren't explicitly created or managed by a user."
    },
    "adminNamedEntityUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminNodeExecutionClosure": {
      "type": "object",
      "properties": {
        "output_uri": {
          "type": "string",
          "description": "Links to a remotely stored, serialized core.LiteralMap of node execution outputs.\nDEPRECATED. Use GetNodeExecutionData to fetch output data instead."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "title": "Error information for the Node"
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this node execution.\nDEPRECATED. Use GetNodeExecutionData to fetch output data instead."
        },
        "phase": {
          "$ref": "#/definitions/coreNodeExecutionPhase",
          "description": "The last recorded phase for this node execution."
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the node execution began running."
        },
        "duration": {
          "type": "string",
          "description": "The amount of time the node execution spent running."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the node execution was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the node execution was last updated."
        },
        "workflow_node_metadata": {
          "$ref": "#/definitions/flyteidladminWorkflowNodeMetadata"
        },
        "task_node_metadata": {
          "$ref": "#/definitions/flyteidladminTaskNodeMetadata"
        },
        "deck_uri": {
          "type": "string",
          "title": "String location uniquely identifying where the deck HTML file is.\nNativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)"
        },
        "dynamic_job_spec_uri": {
          "type": "string",
          "description": "dynamic_job_spec_uri is the location of the DynamicJobSpec proto message for a DynamicWorkflow. This is required\nto correctly recover partially completed executions where the subworkflow has already been compiled."
        }
      },
      "description": "Container for node execution details and results."
    },
    "adminNodeExecutionEventRequest": {
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "title": "Unique ID for this request that can be traced between services"
        },
        "event": {
          "$ref": "#/definitions/eventNodeExecutionEvent",
          "description": "Details about the event that occurred."
        }
      },
      "description": "Request to send a notification that a node execution event has occurred."
    },
    "adminNodeExecutionEventResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminNodeExecutionGetDataResponse": {
      "type": "object",
      "properties": {
        "inputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of node execution inputs.\nDeprecated: Please use full_inputs instead."
        },
        "outputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of node execution outputs.\nDeprecated: Please use full_outputs instead."
        },
        "full_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_inputs will only be populated if they are under a configured size threshold."
        },
        "full_outputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_outputs will only be populated if they are under a configured size threshold."
        },
        "dynamic_workflow": {
          "$ref": "#/definitions/flyteidladminDynamicWorkflowNodeMetadata",
          "description": "Optional Workflow closure for a dynamically generated workflow, in the case this node yields a dynamic workflow we return its structure here."
        },
        "flyte_urls": {
          "$ref": "#/definitions/adminFlyteURLs"
        }
      },
      "description": "Response structure for NodeExecutionGetDataRequest which contains inputs and outputs for a node execution."
    },
    "adminNodeExecutionList": {
      "type": "object",
      "properties": {
        "node_executions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flyteidladminNodeExecution"
          }
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Request structure to retrieve a list of node execution entities.\nSee :ref:`ref_flyteidl.admin.NodeExecution` for more details"
    },
    "adminNodeExecutionMetaData": {
      "type": "object",
      "properties": {
        "retry_group": {
          "type": "string",
          "description": "Node executions are grouped depending on retries of the parent\nRetry group is unique within the context of a parent node."
        },
        "is_parent_node": {
          "type": "boolean",
          "description": "Boolean flag indicating if the node has child nodes under it\nThis can be true when a node contains a dynamic workflow which then produces\nchild nodes."
        },
        "spec_node_id": {
          "type": "string",
          "title": "Node id of the node in the original workflow\nThis maps to value of WorkflowTemplate.nodes[X].id"
        },
        "is_dynamic": {
          "type": "boolean",
          "description": "Boolean flag indicating if the node has contains a dynamic workflow which then produces child nodes.\nThis is to distinguish between subworkflows and dynamic workflows which can both have is_parent_node as true."
        },
        "is_array": {
          "type": "boolean",
          "description": "Boolean flag indicating if the node is an array node. This is intended to uniquely identify\narray nodes from other nodes which can have is_parent_node as true."
        }
      },
      "title": "Represents additional attributes related to a Node Execution"
    },
    "adminNotification": {
      "type": "object",
      "properties": {
        "phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreWorkflowExecutionPhase"
          },
          "title": "A list of phases to which users can associate the notifications to.\n+required"
        },
        "email": {
          "$ref": "#/definitions/adminEmailNotification"
        },
        "pager_duty": {
          "$ref": "#/definitions/adminPagerDutyNotification"
        },
        "slack": {
          "$ref": "#/definitions/adminSlackNotification"
        }
      },
      "description": "Represents a structure for notifications based on execution status.\nThe notification content is configured within flyte admin but can be templatized.\nFuture iterations could expose configuring notifications with custom content."
    },
    "adminNotificationList": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminNotification"
          }
        }
      }
    },
    "adminPagerDutyNotification": {
      "type": "object",
      "properties": {
        "recipients_email": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Currently, PagerDuty notifications leverage email to trigger a notification.\n+required"
        }
      },
      "description": "Defines a pager duty notification specification."
    },
    "adminPluginOverride": {
      "type": "object",
      "properties": {
        "task_type": {
          "type": "string",
          "description": "A predefined yet extensible Task type identifier."
        },
        "plugin_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id."
        },
        "missing_plugin_behavior": {
          "$ref": "#/definitions/PluginOverrideMissingPluginBehavior",
          "description": "Defines the behavior when no plugin from the plugin_id list is not found."
        }
      },
      "description": "This MatchableAttribute configures selecting alternate plugin implementations for a given task type.\nIn addition to an override implementation a selection of fallbacks can be provided or other modes\nfor handling cases where the desired plugin override is not enabled in a given Flyte deployment."
    },
    "adminPluginOverrides": {
      "type": "object",
      "properties": {
        "overrides": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminPluginOverride"
          }
        }
      }
    },
    "adminProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Globally unique project name."
        },
        "name": {
          "type": "string",
          "description": "Display name."
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminDomain"
          }
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "$ref": "#/definitions/adminLabels",
          "description": "Leverage Labels from flyteidl.admin.common.proto to\ntag projects with ownership information."
        },
        "state": {
          "$ref": "#/definitions/ProjectProjectState"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Top-level namespace used to classify different entities like workflows and executions."
    },
    "adminProjectAttributes": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Unique project id for which this set of attributes will be applied."
        },
        "matching_attributes": {
          "$ref": "#/definitions/adminMatchingAttributes"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the project."
        }
      },
      "title": "Defines a set of custom matching attributes at the project level.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "adminProjectAttributesDeleteResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminProjectAttributesGetResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/adminProjectAttributes"
        }
      },
      "title": "Response to get an individual project level attribute override.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "adminProjectAttributesUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminProjectDomainAttributes": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Unique project id for which this set of attributes will be applied."
        },
        "domain": {
          "type": "string",
          "description": "Unique domain id for which this set of attributes will be applied."
        },
        "matching_attributes": {
          "$ref": "#/definitions/adminMatchingAttributes"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the attributes."
        }
      },
      "title": "Defines a set of custom matching attributes which defines resource defaults for a project and domain.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "adminProjectDomainAttributesDeleteResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminProjectDomainAttributesGetResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/adminProjectDomainAttributes"
        }
      },
      "title": "Response to get an individual project domain attribute override.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "adminProjectDomainAttributesUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminProjectRegisterRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/adminProject",
          "title": "+required"
        }
      },
      "title": "Adds a new user-project within the Flyte deployment.\nSee :ref:`ref_flyteidl.admin.Project` for more details"
    },
    "adminProjectRegisterResponse": {
      "type": "object",
      "description": "Purposefully empty, may be updated in the future."
    },
    "adminProjectUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be updated in the future."
    },
    "adminProjects": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminProject"
          }
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Represents a list of projects.\nSee :ref:`ref_flyteidl.admin.Project` for more details"
    },
    "adminRawOutputDataConfig": {
      "type": "object",
      "properties": {
        "output_location_prefix": {
          "type": "string",
          "title": "Prefix for where offloaded data from user workflows will be written\ne.g. s3://bucket/key or s3://bucket/"
        }
      },
      "description": "Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.).\nSee https://github.com/flyteorg/flyte/issues/211 for more background information."
    },
    "adminReason": {
      "type": "object",
      "properties": {
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "description": "occurred_at is the timestamp indicating the instant that this reason happened."
        },
        "message": {
          "type": "string",
          "description": "message is the explanation for the most recent phase transition or status update."
        }
      },
      "description": "Reason is a single message annotated with a timestamp to indicate the instant the reason occurred."
    },
    "adminSchedule": {
      "type": "object",
      "properties": {
        "cron_expression": {
          "type": "string",
          "title": "Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year\ne.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *"
        },
        "rate": {
          "$ref": "#/definitions/adminFixedRate"
        },
        "cron_schedule": {
          "$ref": "#/definitions/adminCronSchedule"
        },
        "kickoff_time_input_arg": {
          "type": "string",
          "description": "Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off."
        }
      },
      "description": "Defines complete set of information required to trigger an execution on a schedule."
    },
    "adminSlackNotification": {
      "type": "object",
      "properties": {
        "recipients_email": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Currently, Slack notifications leverage email to trigger a notification.\n+required"
        }
      },
      "description": "Defines a slack notification specification."
    },
    "adminSort": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Indicates an attribute to sort the response values.\n+required"
        },
        "direction": {
          "$ref": "#/definitions/SortDirection",
          "title": "Indicates the direction to apply sort key for response values.\n+optional"
        }
      },
      "description": "Specifies sort ordering in a list request."
    },
    "adminSourceCode": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        }
      },
      "title": "Link to source code used to define this entity"
    },
    "adminSystemMetadata": {
      "type": "object",
      "properties": {
        "execution_cluster": {
          "type": "string",
          "description": "Which execution cluster this execution ran on."
        },
        "namespace": {
          "type": "string",
          "description": "Which kubernetes namespace the execution ran under."
        }
      },
      "description": "Represents system, rather than user-facing, metadata about an execution."
    },
    "adminTask": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "id represents the unique identifier of the task."
        },
        "closure": {
          "$ref": "#/definitions/adminTaskClosure",
          "description": "closure encapsulates all the fields that maps to a compiled version of the task."
        },
        "short_description": {
          "type": "string",
          "description": "One-liner overview of the entity."
        }
      },
      "description": "Flyte workflows are composed of many ordered tasks. That is small, reusable, self-contained logical blocks\narranged to process workflow inputs and produce a deterministic set of outputs.\nTasks can come in many varieties tuned for specialized behavior."
    },
    "adminTaskClosure": {
      "type": "object",
      "properties": {
        "compiled_task": {
          "$ref": "#/definitions/coreCompiledTask",
          "description": "Represents the compiled representation of the task from the specification provided."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the task was created."
        }
      },
      "description": "Compute task attributes which include values derived from the TaskSpec, as well as plugin-specific data\nand task metadata."
    },
    "adminTaskExecutionClosure": {
      "type": "object",
      "properties": {
        "output_uri": {
          "type": "string",
          "description": "Path to remote data store where output blob is stored if the execution succeeded (and produced outputs).\nDEPRECATED. Use GetTaskExecutionData to fetch output data instead."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "description": "Error information for the task execution. Populated if the execution failed."
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this task execution.\nDEPRECATED. Use GetTaskExecutionData to fetch output data instead."
        },
        "phase": {
          "$ref": "#/definitions/coreTaskExecutionPhase",
          "description": "The last recorded phase for this task execution."
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreTaskLog"
          },
          "description": "Detailed log information output by the task execution."
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the task execution began running."
        },
        "duration": {
          "type": "string",
          "description": "The amount of time the task execution spent running."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the task execution was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the task execution was last updated."
        },
        "custom_info": {
          "type": "object",
          "description": "Custom data specific to the task plugin."
        },
        "reason": {
          "type": "string",
          "description": "If there is an explanation for the most recent phase transition, the reason will capture it."
        },
        "task_type": {
          "type": "string",
          "description": "A predefined yet extensible Task type identifier."
        },
        "metadata": {
          "$ref": "#/definitions/flyteidleventTaskExecutionMetadata",
          "description": "Metadata around how a task was executed."
        },
        "event_version": {
          "type": "integer",
          "format": "int32",
          "description": "The event version is used to indicate versioned changes in how data is maintained using this\nproto message. For example, event_verison \u003e 0 means that maps tasks logs use the\nTaskExecutionMetadata ExternalResourceInfo fields for each subtask rather than the TaskLog\nin this message."
        },
        "reasons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminReason"
          },
          "description": "A time-series of the phase transition or update explanations. This, when compared to storing a singular reason\nas previously done, is much more valuable in visualizing and understanding historical evaluations."
        }
      },
      "description": "Container for task execution details and results."
    },
    "adminTaskExecutionEventRequest": {
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "title": "Unique ID for this request that can be traced between services"
        },
        "event": {
          "$ref": "#/definitions/eventTaskExecutionEvent",
          "description": "Details about the event that occurred."
        }
      },
      "description": "Request to send a notification that a task execution event has occurred."
    },
    "adminTaskExecutionEventResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminTaskExecutionGetDataResponse": {
      "type": "object",
      "properties": {
        "inputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of task execution inputs.\nDeprecated: Please use full_inputs instead."
        },
        "outputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of task execution outputs.\nDeprecated: Please use full_outputs instead."
        },
        "full_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_inputs will only be populated if they are under a configured size threshold."
        },
        "full_outputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_outputs will only be populated if they are under a configured size threshold."
        },
        "flyte_urls": {
          "$ref": "#/definitions/adminFlyteURLs",
          "title": "flyte tiny url to fetch a core.LiteralMap of task execution's IO\nDeck will be empty for task"
        }
      },
      "description": "Response structure for TaskExecutionGetDataRequest which contains inputs and outputs for a task execution."
    },
    "adminTaskExecutionList": {
      "type": "object",
      "properties": {
        "task_executions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flyteidladminTaskExecution"
          }
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Response structure for a query to list of task execution entities.\nSee :ref:`ref_flyteidl.admin.TaskExecution` for more details"
    },
    "adminTaskList": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminTask"
          },
          "description": "A list of tasks returned based on the request."
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Represents a list of tasks returned from the admin.\nSee :ref:`ref_flyteidl.admin.Task` for more details"
    },
    "adminTaskResourceAttributes": {
      "type": "object",
      "properties": {
        "defaults": {
          "$ref": "#/definitions/adminTaskResourceSpec"
        },
        "limits": {
          "$ref": "#/definitions/adminTaskResourceSpec"
        }
      },
      "description": "Defines task resource defaults and limits that will be applied at task registration."
    },
    "adminTaskResourceSpec": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "gpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        },
        "ephemeral_storage": {
          "type": "string"
        }
      },
      "description": "Defines a set of overridable task resource attributes set during task registration."
    },
    "adminTaskSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/coreTaskTemplate",
          "description": "Template of the task that encapsulates all the metadata of the task."
        },
        "description": {
          "$ref": "#/definitions/adminDescriptionEntity",
          "description": "Represents the specification for description entity."
        }
      },
      "description": "Represents a structure that encapsulates the user-configured specification of the task."
    },
    "adminUrlBlob": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Actual url value."
        },
        "bytes": {
          "type": "string",
          "format": "int64",
          "description": "Represents the size of the file accessible at the above url."
        }
      },
      "description": "Represents a string url and associated metadata used throughout the platform."
    },
    "adminVersion": {
      "type": "object",
      "properties": {
        "Build": {
          "type": "string",
          "title": "Specifies the GIT sha of the build"
        },
        "Version": {
          "type": "string",
          "title": "Version for the build, should follow a semver"
        },
        "BuildTime": {
          "type": "string",
          "title": "Build timestamp"
        }
      },
      "title": "Provides Version information for a component"
    },
    "adminWorkflow": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "id represents the unique identifier of the workflow."
        },
        "closure": {
          "$ref": "#/definitions/flyteidladminWorkflowClosure",
          "description": "closure encapsulates all the fields that maps to a compiled version of the workflow."
        },
        "short_description": {
          "type": "string",
          "description": "One-liner overview of the entity."
        }
      },
      "description": "Represents the workflow structure stored in the Admin\nA workflow is created by ordering tasks and associating outputs to inputs\nin order to produce a directed-acyclic execution graph."
    },
    "adminWorkflowAttributes": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Unique project id for which this set of attributes will be applied."
        },
        "domain": {
          "type": "string",
          "description": "Unique domain id for which this set of attributes will be applied."
        },
        "workflow": {
          "type": "string",
          "description": "Workflow name for which this set of attributes will be applied."
        },
        "matching_attributes": {
          "$ref": "#/definitions/adminMatchingAttributes"
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the attributes."
        }
      },
      "title": "Defines a set of custom matching attributes which defines resource defaults for a project, domain and workflow.\nFor more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`"
    },
    "adminWorkflowAttributesDeleteResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminWorkflowAttributesGetResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/adminWorkflowAttributes"
        }
      },
      "description": "Response to get an individual workflow attribute override."
    },
    "adminWorkflowAttributesUpdateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminWorkflowCreateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "id represents the unique identifier of the workflow.\n+required"
        },
        "spec": {
          "$ref": "#/definitions/adminWorkflowSpec",
          "title": "Represents the specification for workflow.\n+required"
        }
      },
      "title": "Represents a request structure to create a revision of a workflow.\nSee :ref:`ref_flyteidl.admin.Workflow` for more details"
    },
    "adminWorkflowCreateResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminWorkflowExecutionConfig": {
      "type": "object",
      "properties": {
        "max_parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Can be used to control the number of parallel nodes to run within the workflow. This is useful to achieve fairness."
        },
        "security_context": {
          "$ref": "#/definitions/coreSecurityContext",
          "description": "Indicates security context permissions for executions triggered with this matchable attribute."
        },
        "raw_output_data_config": {
          "$ref": "#/definitions/adminRawOutputDataConfig",
          "description": "Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.)."
        },
        "labels": {
          "$ref": "#/definitions/adminLabels",
          "description": "Custom labels to be applied to a triggered execution resource."
        },
        "annotations": {
          "$ref": "#/definitions/adminAnnotations",
          "description": "Custom annotations to be applied to a triggered execution resource."
        },
        "interruptible": {
          "type": "boolean",
          "description": "Allows for the interruptible flag of a workflow to be overwritten for a single execution.\nOmitting this field uses the workflow's value as a default.\nAs we need to distinguish between the field not being provided and its default value false, we have to use a wrapper\naround the bool field."
        },
        "overwrite_cache": {
          "type": "boolean",
          "description": "Allows for all cached values of a workflow and its tasks to be overwritten for a single execution.\nIf enabled, all calculations are performed even if cached results would be available, overwriting the stored\ndata once execution finishes successfully."
        },
        "envs": {
          "$ref": "#/definitions/adminEnvs",
          "description": "Environment variables to be set for the execution."
        },
        "execution_env_assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreExecutionEnvAssignment"
          },
          "description": "Execution environment assignments to be set for the execution."
        }
      },
      "description": "Adds defaults for customizable workflow-execution specifications and overrides."
    },
    "adminWorkflowExecutionEventRequest": {
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "title": "Unique ID for this request that can be traced between services"
        },
        "event": {
          "$ref": "#/definitions/eventWorkflowExecutionEvent",
          "description": "Details about the event that occurred."
        }
      },
      "description": "Request to send a notification that a workflow execution event has occurred."
    },
    "adminWorkflowExecutionEventResponse": {
      "type": "object",
      "description": "Purposefully empty, may be populated in the future."
    },
    "adminWorkflowExecutionGetDataResponse": {
      "type": "object",
      "properties": {
        "outputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of execution outputs.\nDeprecated: Please use full_outputs instead."
        },
        "inputs": {
          "$ref": "#/definitions/adminUrlBlob",
          "description": "Signed url to fetch a core.LiteralMap of execution inputs.\nDeprecated: Please use full_inputs instead."
        },
        "full_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_inputs will only be populated if they are under a configured size threshold."
        },
        "full_outputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Full_outputs will only be populated if they are under a configured size threshold."
        }
      },
      "description": "Response structure for WorkflowExecutionGetDataRequest which contains inputs and outputs for an execution."
    },
    "adminWorkflowExecutionGetMetricsResponse": {
      "type": "object",
      "properties": {
        "span": {
          "$ref": "#/definitions/coreSpan",
          "description": "Span defines the top-level breakdown of the workflows execution. More precise information is nested in a\nhierarchical structure using Flyte entity references."
        }
      },
      "description": "WorkflowExecutionGetMetricsResponse represents the response containing metrics for the specified workflow execution."
    },
    "adminWorkflowList": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/adminWorkflow"
          },
          "description": "A list of workflows returned based on the request."
        },
        "token": {
          "type": "string",
          "description": "In the case of multiple pages of results, the server-provided token can be used to fetch the next page\nin a query. If there are no more results, this value will be empty."
        }
      },
      "title": "Represents a list of workflows returned from the admin.\nSee :ref:`ref_flyteidl.admin.Workflow` for more details"
    },
    "adminWorkflowSpec": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/coreWorkflowTemplate",
          "description": "Template of the task that encapsulates all the metadata of the workflow."
        },
        "sub_workflows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreWorkflowTemplate"
          },
          "description": "Workflows that are embedded into other workflows need to be passed alongside the parent workflow to the\npropeller compiler (since the compiler doesn't have any knowledge of other workflows - ie, it doesn't reach out\nto Admin to see other registered workflows).  In fact, subworkflows do not even need to be registered."
        },
        "description": {
          "$ref": "#/definitions/adminDescriptionEntity",
          "description": "Represents the specification for description entity."
        }
      },
      "description": "Represents a structure that encapsulates the specification of the workflow."
    },
    "coreAlias": {
      "type": "object",
      "properties": {
        "var": {
          "type": "string",
          "description": "Must match one of the output variable names on a node."
        },
        "alias": {
          "type": "string",
          "description": "A workflow-level unique alias that downstream nodes can refer to in their input."
        }
      },
      "description": "Links a variable to an alias."
    },
    "coreApproveCondition": {
      "type": "object",
      "properties": {
        "signal_id": {
          "type": "string",
          "description": "A unique identifier for the requested boolean signal."
        }
      },
      "description": "ApproveCondition represents a dependency on an external approval. During execution, this will manifest as a boolean\nsignal with the provided signal_id."
    },
    "coreArrayNode": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/coreNode",
          "description": "node is the sub-node that will be executed for each element in the array."
        },
        "parallelism": {
          "type": "integer",
          "format": "int64",
          "description": "parallelism defines the minimum number of instances to bring up concurrently at any given\npoint. Note that this is an optimistic restriction and that, due to network partitioning or\nother failures, the actual number of currently running instances might be more. This has to\nbe a positive number if assigned. Default value is size."
        },
        "min_successes": {
          "type": "integer",
          "format": "int64",
          "description": "min_successes is an absolute number of the minimum number of successful completions of\nsub-nodes. As soon as this criteria is met, the ArrayNode will be marked as successful\nand outputs will be computed. This has to be a non-negative number if assigned. Default\nvalue is size (if specified)."
        },
        "min_success_ratio": {
          "type": "number",
          "format": "float",
          "description": "If the array job size is not known beforehand, the min_success_ratio can instead be used\nto determine when an ArrayNode can be marked successful."
        }
      },
      "description": "ArrayNode is a Flyte node type that simplifies the execution of a sub-node over a list of input\nvalues. An ArrayNode can be executed with configurable parallelism (separate from the parent\nworkflow) and can be configured to succeed when a certain number of sub-nodes succeed."
    },
    "coreArtifactBindingData": {
      "type": "object",
      "properties": {
        "partition_key": {
          "type": "string"
        },
        "bind_to_time_partition": {
          "type": "boolean"
        },
        "time_transform": {
          "$ref": "#/definitions/coreTimeTransform",
          "title": "This is only relevant in the time partition case"
        }
      },
      "title": "Only valid for triggers"
    },
    "coreArtifactID": {
      "type": "object",
      "properties": {
        "artifact_key": {
          "$ref": "#/definitions/coreArtifactKey"
        },
        "version": {
          "type": "string"
        },
        "partitions": {
          "$ref": "#/definitions/corePartitions",
          "description": "Think of a partition as a tag on an Artifact, except it's a key-value pair.\nDifferent partitions naturally have different versions (execution ids)."
        },
        "time_partition": {
          "$ref": "#/definitions/coreTimePartition",
          "description": "There is no such thing as an empty time partition - if it's not set, then there is no time partition."
        }
      }
    },
    "coreArtifactKey": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Project and domain and suffix needs to be unique across a given artifact store."
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        }
      }
    },
    "coreArtifactQuery": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "$ref": "#/definitions/coreArtifactID"
        },
        "artifact_tag": {
          "$ref": "#/definitions/coreArtifactTag"
        },
        "uri": {
          "type": "string"
        },
        "binding": {
          "$ref": "#/definitions/coreArtifactBindingData",
          "description": "This is used in the trigger case, where a user specifies a value for an input that is one of the triggering\nartifacts, or a partition value derived from a triggering artifact."
        }
      },
      "title": "Uniqueness constraints for Artifacts\n - project, domain, name, version, partitions\nOption 2 (tags are standalone, point to an individual artifact id):\n - project, domain, name, alias (points to one partition if partitioned)\n - project, domain, name, partition key, partition value"
    },
    "coreArtifactTag": {
      "type": "object",
      "properties": {
        "artifact_key": {
          "$ref": "#/definitions/coreArtifactKey"
        },
        "value": {
          "$ref": "#/definitions/coreLabelValue"
        }
      }
    },
    "coreBinary": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "byte"
        },
        "tag": {
          "type": "string"
        }
      },
      "description": "A simple byte array with a tag to help different parts of the system communicate about what is in the byte array.\nIt's strongly advisable that consumers of this type define a unique tag and validate the tag before parsing the data."
    },
    "coreBinding": {
      "type": "object",
      "properties": {
        "var": {
          "type": "string",
          "description": "Variable name must match an input/output variable of the node."
        },
        "binding": {
          "$ref": "#/definitions/coreBindingData",
          "description": "Data to use to bind this variable."
        }
      },
      "description": "An input/output binding of a variable to either static value or a node output."
    },
    "coreBindingData": {
      "type": "object",
      "properties": {
        "scalar": {
          "$ref": "#/definitions/coreScalar",
          "description": "A simple scalar value."
        },
        "collection": {
          "$ref": "#/definitions/coreBindingDataCollection",
          "description": "A collection of binding data. This allows nesting of binding data to any number\nof levels."
        },
        "promise": {
          "$ref": "#/definitions/coreOutputReference",
          "description": "References an output promised by another node."
        },
        "map": {
          "$ref": "#/definitions/coreBindingDataMap",
          "description": "A map of bindings. The key is always a string."
        },
        "union": {
          "$ref": "#/definitions/coreUnionInfo"
        }
      },
      "description": "Specifies either a simple value or a reference to another output."
    },
    "coreBindingDataCollection": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreBindingData"
          }
        }
      },
      "description": "A collection of BindingData items."
    },
    "coreBindingDataMap": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreBindingData"
          }
        }
      },
      "description": "A map of BindingData items."
    },
    "coreBlob": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/coreBlobMetadata"
        },
        "uri": {
          "type": "string"
        }
      },
      "description": "Refers to an offloaded set of files. It encapsulates the type of the store and a unique uri for where the data is.\nThere are no restrictions on how the uri is formatted since it will depend on how to interact with the store."
    },
    "coreBlobMetadata": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/coreBlobType"
        }
      }
    },
    "coreBlobType": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "title": "Format can be a free form string understood by SDK/UI etc like\ncsv, parquet etc"
        },
        "dimensionality": {
          "$ref": "#/definitions/BlobTypeBlobDimensionality"
        }
      },
      "title": "Defines type behavior for blob objects"
    },
    "coreBooleanExpression": {
      "type": "object",
      "properties": {
        "conjunction": {
          "$ref": "#/definitions/coreConjunctionExpression"
        },
        "comparison": {
          "$ref": "#/definitions/coreComparisonExpression"
        }
      },
      "description": "Defines a boolean expression tree. It can be a simple or a conjunction expression.\nMultiple expressions can be combined using a conjunction or a disjunction to result in a final boolean result."
    },
    "coreBranchNode": {
      "type": "object",
      "properties": {
        "if_else": {
          "$ref": "#/definitions/coreIfElseBlock",
          "title": "+required"
        }
      },
      "description": "BranchNode is a special node that alter the flow of the workflow graph. It allows the control flow to branch at\nruntime based on a series of conditions that get evaluated on various parameters (e.g. inputs, primitives)."
    },
    "coreCatalogArtifactTag": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "type": "string",
          "title": "Artifact ID is generated name"
        },
        "name": {
          "type": "string",
          "title": "Flyte computes the tag automatically, as the hash of the values"
        }
      }
    },
    "coreCatalogCacheStatus": {
      "type": "string",
      "enum": [
        "CACHE_DISABLED",
        "CACHE_MISS",
        "CACHE_HIT",
        "CACHE_POPULATED",
        "CACHE_LOOKUP_FAILURE",
        "CACHE_PUT_FAILURE",
        "CACHE_SKIPPED",
        "CACHE_EVICTED"
      ],
      "default": "CACHE_DISABLED",
      "description": "- CACHE_DISABLED: Used to indicate that caching was disabled\n - CACHE_MISS: Used to indicate that the cache lookup resulted in no matches\n - CACHE_HIT: used to indicate that the associated artifact was a result of a previous execution\n - CACHE_POPULATED: used to indicate that the resultant artifact was added to the cache\n - CACHE_LOOKUP_FAILURE: Used to indicate that cache lookup failed because of an error\n - CACHE_PUT_FAILURE: Used to indicate that cache lookup failed because of an error\n - CACHE_SKIPPED: Used to indicate the cache lookup was skipped\n - CACHE_EVICTED: Used to indicate that the cache was evicted",
      "title": "Indicates the status of CatalogCaching. The reason why this is not embedded in TaskNodeMetadata is, that we may use for other types of nodes as well in the future"
    },
    "coreCatalogMetadata": {
      "type": "object",
      "properties": {
        "dataset_id": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "Dataset ID in the catalog"
        },
        "artifact_tag": {
          "$ref": "#/definitions/coreCatalogArtifactTag",
          "title": "Artifact tag in the catalog"
        },
        "source_task_execution": {
          "$ref": "#/definitions/coreTaskExecutionIdentifier",
          "title": "Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions"
        }
      },
      "title": "Catalog artifact information with specific metadata"
    },
    "coreCatalogReservationStatus": {
      "type": "string",
      "enum": [
        "RESERVATION_DISABLED",
        "RESERVATION_ACQUIRED",
        "RESERVATION_EXISTS",
        "RESERVATION_RELEASED",
        "RESERVATION_FAILURE"
      ],
      "default": "RESERVATION_DISABLED",
      "description": "Indicates the status of a catalog reservation operation.\n\n - RESERVATION_DISABLED: Used to indicate that reservations are disabled\n - RESERVATION_ACQUIRED: Used to indicate that a reservation was successfully acquired or extended\n - RESERVATION_EXISTS: Used to indicate that an active reservation currently exists\n - RESERVATION_RELEASED: Used to indicate that the reservation has been successfully released\n - RESERVATION_FAILURE: Used to indicate that a reservation operation resulted in failure"
    },
    "coreComparisonExpression": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/coreComparisonExpressionOperator"
        },
        "left_value": {
          "$ref": "#/definitions/coreOperand"
        },
        "right_value": {
          "$ref": "#/definitions/coreOperand"
        }
      },
      "description": "Defines a 2-level tree where the root is a comparison operator and Operands are primitives or known variables.\nEach expression results in a boolean result."
    },
    "coreComparisonExpressionOperator": {
      "type": "string",
      "enum": [
        "EQ",
        "NEQ",
        "GT",
        "GTE",
        "LT",
        "LTE"
      ],
      "default": "EQ",
      "description": "- GT: Greater Than\n - LT: Less Than",
      "title": "Binary Operator for each expression"
    },
    "coreCompiledLaunchPlan": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/coreLaunchPlanTemplate",
          "title": "Completely contained LaunchPlan Template"
        }
      },
      "title": "Output of the compilation step. This object represents one LaunchPlan. We store more metadata at this layer"
    },
    "coreCompiledTask": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/coreTaskTemplate",
          "title": "Completely contained TaskTemplate"
        }
      },
      "title": "Output of the Compilation step. This object represent one Task. We store more metadata at this layer"
    },
    "coreCompiledWorkflow": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/coreWorkflowTemplate",
          "title": "Completely contained Workflow Template"
        },
        "connections": {
          "$ref": "#/definitions/coreConnectionSet",
          "description": "For internal use only! This field is used by the system and must not be filled in. Any values set will be ignored."
        }
      },
      "title": "Output of the compilation Step. This object represents one workflow. We store more metadata at this layer"
    },
    "coreCompiledWorkflowClosure": {
      "type": "object",
      "properties": {
        "primary": {
          "$ref": "#/definitions/coreCompiledWorkflow",
          "title": "+required"
        },
        "sub_workflows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreCompiledWorkflow"
          },
          "title": "Guaranteed that there will only exist one and only one workflow with a given id, i.e., every sub workflow has a\nunique identifier. Also every enclosed subworkflow is used either by a primary workflow or by a subworkflow\nas an inlined workflow\n+optional"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreCompiledTask"
          },
          "title": "Guaranteed that there will only exist one and only one task with a given id, i.e., every task has a unique id\n+required (at least 1)"
        },
        "launch_plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreCompiledLaunchPlan"
          },
          "description": "A collection of launch plans that are compiled. Guaranteed that there will only exist one and only one launch plan\nwith a given id, i.e., every launch plan has a unique id."
        }
      },
      "description": "A Compiled Workflow Closure contains all the information required to start a new execution, or to visualize a workflow\nand its details. The CompiledWorkflowClosure should always contain a primary workflow, that is the main workflow that\nwill being the execution. All subworkflows are denormalized. WorkflowNodes refer to the workflow identifiers of\ncompiled subworkflows."
    },
    "coreConjunctionExpression": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/ConjunctionExpressionLogicalOperator"
        },
        "left_expression": {
          "$ref": "#/definitions/coreBooleanExpression"
        },
        "right_expression": {
          "$ref": "#/definitions/coreBooleanExpression"
        }
      },
      "description": "Defines a conjunction expression of two boolean expressions."
    },
    "coreConnectionSet": {
      "type": "object",
      "properties": {
        "downstream": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnectionSetIdList"
          },
          "title": "A list of all the node ids that are downstream from a given node id"
        },
        "upstream": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnectionSetIdList"
          },
          "title": "A list of all the node ids, that are upstream of this node id"
        }
      },
      "title": "Adjacency list for the workflow. This is created as part of the compilation process. Every process after the compilation\nstep uses this created ConnectionSet"
    },
    "coreContainer": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "title": "Container image url. Eg: docker/redis:latest"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Command to be executed, if not provided, the default entrypoint in the container image will be used."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "These will default to Flyte given paths. If provided, the system will not append known paths. If the task still\nneeds flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the\nsystem will populate these before executing the container."
        },
        "resources": {
          "$ref": "#/definitions/coreResources",
          "description": "Container resources requirement as specified by the container engine."
        },
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flyteidlcoreKeyValuePair"
          },
          "description": "Environment variables will be set as the container is starting up."
        },
        "config": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flyteidlcoreKeyValuePair"
          },
          "description": "Allows extra configs to be available for the container.\nTODO: elaborate on how configs will become available.\nDeprecated, please use TaskTemplate.config instead."
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreContainerPort"
          },
          "title": "Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but\nnot supported on AWS Batch)\nOnly K8s"
        },
        "data_config": {
          "$ref": "#/definitions/coreDataLoadingConfig",
          "title": "BETA: Optional configuration for DataLoading. If not specified, then default values are used.\nThis makes it possible to to run a completely portable container, that uses inputs and outputs\nonly from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.\nIf data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories\nare not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation\nto understand the default paths.\nOnly K8s"
        },
        "architecture": {
          "$ref": "#/definitions/ContainerArchitecture"
        }
      }
    },
    "coreContainerPort": {
      "type": "object",
      "properties": {
        "container_port": {
          "type": "integer",
          "format": "int64",
          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536."
        }
      },
      "description": "Defines port properties for a container."
    },
    "coreDataLoadingConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Flag enables DataLoading Config. If this is not set, data loading will not be used!"
        },
        "input_path": {
          "type": "string",
          "title": "File system path (start at root). This folder will contain all the inputs exploded to a separate file.\nExample, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like\n/var/flyte/inputs/inputs.\u003cmetadata format dependent -\u003e .pb .json .yaml\u003e -\u003e Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations\n/var/flyte/inputs/x -\u003e X is a file that contains the value of x (integer) in string format\n/var/flyte/inputs/y -\u003e Y is a file in Binary format\n/var/flyte/inputs/z/... -\u003e Note Z itself is a directory\nMore information about the protocol - refer to docs #TODO reference docs here"
        },
        "output_path": {
          "type": "string",
          "title": "File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file"
        },
        "format": {
          "$ref": "#/definitions/DataLoadingConfigLiteralMapFormat",
          "title": "In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.\nThis format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding"
        },
        "io_strategy": {
          "$ref": "#/definitions/coreIOStrategy"
        }
      },
      "description": "This configuration allows executing raw containers in Flyte using the Flyte CoPilot system.\nFlyte CoPilot, eliminates the needs of flytekit or sdk inside the container. Any inputs required by the users container are side-loaded in the input_path\nAny outputs generated by the user container - within output_path are automatically uploaded."
    },
    "coreError": {
      "type": "object",
      "properties": {
        "failed_node_id": {
          "type": "string",
          "description": "The node id that threw the error."
        },
        "message": {
          "type": "string",
          "description": "Error message thrown."
        }
      },
      "description": "Represents an error thrown from a node."
    },
    "coreExecutionEnv": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is a human-readable identifier for the execution environment. This is combined with the\nproject, domain, and version to uniquely identify an execution environment."
        },
        "type": {
          "type": "string",
          "description": "type is the type of the execution environment."
        },
        "extant": {
          "type": "object",
          "description": "extant is a reference to an existing environment."
        },
        "spec": {
          "type": "object",
          "description": "spec is a specification of the environment."
        },
        "version": {
          "type": "string",
          "description": "version is the version of the execution environment. This may be used differently by each\nindividual environment type (ex. auto-generated or manually provided), but is intended to\nallow variance in environment specifications with the same ID."
        }
      },
      "description": "ExecutionEnv is a message that is used to specify the execution environment."
    },
    "coreExecutionEnvAssignment": {
      "type": "object",
      "properties": {
        "node_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "node_ids is a list of node ids that are being assigned the execution environment."
        },
        "task_type": {
          "type": "string",
          "description": "task_type is the type of task that is being assigned. This is used to override which Flyte\nplugin will be used during execution."
        },
        "execution_env": {
          "$ref": "#/definitions/coreExecutionEnv",
          "description": "execution_env is the environment that is being assigned to the nodes."
        }
      },
      "description": "ExecutionEnvAssignment is a message that is used to assign an execution environment to a set of\nnodes."
    },
    "coreExecutionError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "Error code indicates a grouping of a type of error.\nMore Info: \u003cLink\u003e"
        },
        "message": {
          "type": "string",
          "description": "Detailed description of the error - including stack trace."
        },
        "error_uri": {
          "type": "string",
          "title": "Full error contents accessible via a URI"
        },
        "kind": {
          "$ref": "#/definitions/ExecutionErrorErrorKind"
        }
      },
      "description": "Represents the error message from the execution."
    },
    "coreExtendedResources": {
      "type": "object",
      "properties": {
        "gpu_accelerator": {
          "$ref": "#/definitions/coreGPUAccelerator",
          "description": "GPU accelerator to select for task. Contains information about device type, and\nfor multi-instance GPUs, the partition size to use."
        }
      },
      "description": "Encapsulates all non-standard resources, not captured by v1.ResourceRequirements, to\nallocate to a task."
    },
    "coreGPUAccelerator": {
      "type": "object",
      "properties": {
        "device": {
          "type": "string",
          "description": "This can be any arbitrary string, and should be informed by the labels or taints\nassociated with the nodes in question. Default cloud provider labels typically\nuse the following values: `nvidia-tesla-t4`, `nvidia-tesla-a100`, etc."
        },
        "unpartitioned": {
          "type": "boolean"
        },
        "partition_size": {
          "type": "string",
          "description": "Like `device`, this can be any arbitrary string, and should be informed by\nthe labels or taints associated with the nodes in question. Default cloud\nprovider labels typically use the following values: `1g.5gb`, `2g.10gb`, etc."
        }
      },
      "description": "Metadata associated with the GPU accelerator to allocate to a task. Contains\ninformation about device type, and for multi-instance GPUs, the partition size to\nuse."
    },
    "coreGateNode": {
      "type": "object",
      "properties": {
        "approve": {
          "$ref": "#/definitions/coreApproveCondition",
          "description": "ApproveCondition represents a dependency on an external approval provided by a boolean signal."
        },
        "signal": {
          "$ref": "#/definitions/coreSignalCondition",
          "description": "SignalCondition represents a dependency on an signal."
        },
        "sleep": {
          "$ref": "#/definitions/coreSleepCondition",
          "description": "SleepCondition represents a dependency on waiting for the specified duration."
        }
      },
      "description": "GateNode refers to the condition that is required for the gate to successfully complete."
    },
    "coreGranularity": {
      "type": "string",
      "enum": [
        "UNSET",
        "MINUTE",
        "HOUR",
        "DAY",
        "MONTH"
      ],
      "default": "UNSET",
      "title": "- DAY: default"
    },
    "coreIOStrategy": {
      "type": "object",
      "properties": {
        "download_mode": {
          "$ref": "#/definitions/IOStrategyDownloadMode",
          "title": "Mode to use to manage downloads"
        },
        "upload_mode": {
          "$ref": "#/definitions/IOStrategyUploadMode",
          "title": "Mode to use to manage uploads"
        }
      },
      "title": "Strategy to use when dealing with Blob, Schema, or multipart blob data (large datasets)"
    },
    "coreIdentifier": {
      "type": "object",
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/coreResourceType",
          "description": "Identifies the specific type of resource that this identifier corresponds to."
        },
        "project": {
          "type": "string",
          "description": "Name of the project the resource belongs to."
        },
        "domain": {
          "type": "string",
          "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project."
        },
        "name": {
          "type": "string",
          "description": "User provided value for the resource."
        },
        "version": {
          "type": "string",
          "description": "Specific version of the resource."
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "description": "Encapsulation of fields that uniquely identifies a Flyte resource."
    },
    "coreIdentity": {
      "type": "object",
      "properties": {
        "iam_role": {
          "type": "string",
          "description": "iam_role references the fully qualified name of Identity \u0026 Access Management role to impersonate."
        },
        "k8s_service_account": {
          "type": "string",
          "description": "k8s_service_account references a kubernetes service account to impersonate."
        },
        "oauth2_client": {
          "$ref": "#/definitions/coreOAuth2Client",
          "description": "oauth2_client references an oauth2 client. Backend plugins can use this information to impersonate the client when\nmaking external calls."
        },
        "execution_identity": {
          "type": "string",
          "title": "execution_identity references the subject who makes the execution"
        }
      },
      "description": "Identity encapsulates the various security identities a task can run as. It's up to the underlying plugin to pick the\nright identity for the execution environment."
    },
    "coreIfBlock": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/coreBooleanExpression"
        },
        "then_node": {
          "$ref": "#/definitions/coreNode"
        }
      },
      "description": "Defines a condition and the execution unit that should be executed if the condition is satisfied."
    },
    "coreIfElseBlock": {
      "type": "object",
      "properties": {
        "case": {
          "$ref": "#/definitions/coreIfBlock",
          "description": "+required. First condition to evaluate."
        },
        "other": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreIfBlock"
          },
          "description": "+optional. Additional branches to evaluate."
        },
        "else_node": {
          "$ref": "#/definitions/coreNode",
          "description": "The node to execute in case none of the branches were taken."
        },
        "error": {
          "$ref": "#/definitions/coreError",
          "description": "An error to throw in case none of the branches were taken."
        }
      },
      "description": "Defines a series of if/else blocks. The first branch whose condition evaluates to true is the one to execute.\nIf no conditions were satisfied, the else_node or the error will execute."
    },
    "coreInputBindingData": {
      "type": "object",
      "properties": {
        "var": {
          "type": "string"
        }
      }
    },
    "coreK8sObjectMetadata": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional labels to add to the pod definition."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional annotations to add to the pod definition."
        }
      },
      "description": "Metadata for building a kubernetes object when a task is executed."
    },
    "coreK8sPod": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/coreK8sObjectMetadata",
          "description": "Contains additional metadata for building a kubernetes pod."
        },
        "pod_spec": {
          "type": "object",
          "title": "Defines the primary pod spec created when a task is executed.\nThis should be a JSON-marshalled pod spec, which can be defined in\n- go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936\n- python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py"
        },
        "data_config": {
          "$ref": "#/definitions/coreDataLoadingConfig",
          "title": "BETA: Optional configuration for DataLoading. If not specified, then default values are used.\nThis makes it possible to to run a completely portable container, that uses inputs and outputs\nonly from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.\nIf data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories\nare not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation\nto understand the default paths.\nOnly K8s"
        }
      },
      "description": "Defines a pod spec and additional pod metadata that is created when a task is executed."
    },
    "coreLabelValue": {
      "type": "object",
      "properties": {
        "static_value": {
          "type": "string",
          "title": "The string static value is for use in the Partitions object"
        },
        "time_value": {
          "type": "string",
          "format": "date-time",
          "title": "The time value is for use in the TimePartition case"
        },
        "triggered_binding": {
          "$ref": "#/definitions/coreArtifactBindingData"
        },
        "input_binding": {
          "$ref": "#/definitions/coreInputBindingData"
        },
        "runtime_binding": {
          "$ref": "#/definitions/coreRuntimeBinding"
        }
      }
    },
    "coreLaunchPlanTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "A globally unique identifier for the launch plan."
        },
        "interface": {
          "$ref": "#/definitions/coreTypedInterface",
          "title": "The input and output interface for the launch plan"
        },
        "fixed_inputs": {
          "$ref": "#/definitions/coreLiteralMap",
          "title": "A collection of input literals that are fixed for the launch plan"
        }
      },
      "description": "A structure that uniquely identifies a launch plan in the system."
    },
    "coreLiteral": {
      "type": "object",
      "properties": {
        "scalar": {
          "$ref": "#/definitions/coreScalar",
          "description": "A simple value."
        },
        "collection": {
          "$ref": "#/definitions/coreLiteralCollection",
          "description": "A collection of literals to allow nesting."
        },
        "map": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "A map of strings to literals."
        },
        "hash": {
          "type": "string",
          "title": "A hash representing this literal.\nThis is used for caching purposes. For more details refer to RFC 1893\n(https://github.com/flyteorg/flyte/blob/master/rfc/system/1893-caching-of-offloaded-objects.md)"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata for literals."
        }
      },
      "description": "A simple value. This supports any level of nesting (e.g. array of array of array of Blobs) as well as simple primitives."
    },
    "coreLiteralCollection": {
      "type": "object",
      "properties": {
        "literals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreLiteral"
          }
        }
      },
      "description": "A collection of literals. This is a workaround since oneofs in proto messages cannot contain a repeated field."
    },
    "coreLiteralMap": {
      "type": "object",
      "properties": {
        "literals": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreLiteral"
          }
        }
      },
      "description": "A map of literals. This is a workaround since oneofs in proto messages cannot contain a repeated field."
    },
    "coreLiteralType": {
      "type": "object",
      "properties": {
        "simple": {
          "$ref": "#/definitions/coreSimpleType",
          "description": "A simple type that can be compared one-to-one with another."
        },
        "schema": {
          "$ref": "#/definitions/coreSchemaType",
          "description": "A complex type that requires matching of inner fields."
        },
        "collection_type": {
          "$ref": "#/definitions/coreLiteralType",
          "description": "Defines the type of the value of a collection. Only homogeneous collections are allowed."
        },
        "map_value_type": {
          "$ref": "#/definitions/coreLiteralType",
          "description": "Defines the type of the value of a map type. The type of the key is always a string."
        },
        "blob": {
          "$ref": "#/definitions/coreBlobType",
          "description": "A blob might have specialized implementation details depending on associated metadata."
        },
        "enum_type": {
          "$ref": "#/definitions/flyteidlcoreEnumType",
          "description": "Defines an enum with pre-defined string values."
        },
        "structured_dataset_type": {
          "$ref": "#/definitions/coreStructuredDatasetType",
          "title": "Generalized schema support"
        },
        "union_type": {
          "$ref": "#/definitions/coreUnionType",
          "description": "Defines an union type with pre-defined LiteralTypes."
        },
        "metadata": {
          "type": "object",
          "description": "This field contains type metadata that is descriptive of the type, but is NOT considered in type-checking.  This might be used by\nconsumers to identify special behavior or display extended information for the type."
        },
        "annotation": {
          "$ref": "#/definitions/coreTypeAnnotation",
          "description": "This field contains arbitrary data that might have special semantic\nmeaning for the client but does not effect internal flyte behavior."
        },
        "structure": {
          "$ref": "#/definitions/coreTypeStructure",
          "description": "Hints to improve type matching."
        }
      },
      "description": "Defines a strong type to allow type checking between interfaces."
    },
    "coreNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A workflow-level unique identifier that identifies this node in the workflow. 'inputs' and 'outputs' are reserved\nnode ids that cannot be used by other nodes."
        },
        "metadata": {
          "$ref": "#/definitions/coreNodeMetadata",
          "description": "Extra metadata about the node."
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreBinding"
          },
          "description": "Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface\nmust be fulfilled."
        },
        "upstream_node_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its\nupstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs\nfield."
        },
        "output_aliases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreAlias"
          },
          "description": "+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes\nneed to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this\nnodes outputs using the alias if one's specified."
        },
        "task_node": {
          "$ref": "#/definitions/coreTaskNode",
          "description": "Information about the Task to execute in this node."
        },
        "workflow_node": {
          "$ref": "#/definitions/coreWorkflowNode",
          "description": "Information about the Workflow to execute in this mode."
        },
        "branch_node": {
          "$ref": "#/definitions/coreBranchNode",
          "description": "Information about the branch node to evaluate in this node."
        },
        "gate_node": {
          "$ref": "#/definitions/coreGateNode",
          "description": "Information about the condition to evaluate in this node."
        },
        "array_node": {
          "$ref": "#/definitions/coreArrayNode",
          "description": "Information about the sub-node executions for each value in the list of this nodes\ninputs values."
        }
      },
      "description": "A Workflow graph Node. One unit of execution in the graph. Each node can be linked to a Task, a Workflow or a branch\nnode."
    },
    "coreNodeExecutionIdentifier": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "execution_id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier"
        }
      },
      "description": "Encapsulation of fields that identify a Flyte node execution entity."
    },
    "coreNodeExecutionPhase": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "QUEUED",
        "RUNNING",
        "SUCCEEDED",
        "FAILING",
        "FAILED",
        "ABORTED",
        "SKIPPED",
        "TIMED_OUT",
        "DYNAMIC_RUNNING",
        "RECOVERED"
      ],
      "default": "UNDEFINED"
    },
    "coreNodeMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "A friendly name for the Node"
        },
        "timeout": {
          "type": "string",
          "description": "The overall timeout of a task."
        },
        "retries": {
          "$ref": "#/definitions/coreRetryStrategy",
          "description": "Number of retries per task."
        },
        "interruptible": {
          "type": "boolean"
        },
        "cacheable": {
          "type": "boolean"
        },
        "cache_version": {
          "type": "string"
        },
        "cache_serializable": {
          "type": "boolean"
        }
      },
      "description": "Defines extra information about the Node."
    },
    "coreOAuth2Client": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client_id is the public id for the client to use. The system will not perform any pre-auth validation that the\nsecret requested matches the client_id indicated here.\n+required"
        },
        "client_secret": {
          "$ref": "#/definitions/coreSecret",
          "title": "client_secret is a reference to the secret used to authenticate the OAuth2 client.\n+required"
        }
      },
      "description": "OAuth2Client encapsulates OAuth2 Client Credentials to be used when making calls on behalf of that task."
    },
    "coreOAuth2TokenRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name indicates a unique id for the token request within this task token requests. It'll be used as a suffix for\nenvironment variables and as a filename for mounting tokens as files.\n+required"
        },
        "type": {
          "$ref": "#/definitions/coreOAuth2TokenRequestType",
          "title": "type indicates the type of the request to make. Defaults to CLIENT_CREDENTIALS.\n+required"
        },
        "client": {
          "$ref": "#/definitions/coreOAuth2Client",
          "title": "client references the client_id/secret to use to request the OAuth2 token.\n+required"
        },
        "idp_discovery_endpoint": {
          "type": "string",
          "title": "idp_discovery_endpoint references the discovery endpoint used to retrieve token endpoint and other related\ninformation.\n+optional"
        },
        "token_endpoint": {
          "type": "string",
          "title": "token_endpoint references the token issuance endpoint. If idp_discovery_endpoint is not provided, this parameter is\nmandatory.\n+optional"
        }
      },
      "description": "OAuth2TokenRequest encapsulates information needed to request an OAuth2 token.\nFLYTE_TOKENS_ENV_PREFIX will be passed to indicate the prefix of the environment variables that will be present if\ntokens are passed through environment variables.\nFLYTE_TOKENS_PATH_PREFIX will be passed to indicate the prefix of the path where secrets will be mounted if tokens\nare passed through file mounts."
    },
    "coreOAuth2TokenRequestType": {
      "type": "string",
      "enum": [
        "CLIENT_CREDENTIALS"
      ],
      "default": "CLIENT_CREDENTIALS",
      "description": "Type of the token requested.\n\n - CLIENT_CREDENTIALS: CLIENT_CREDENTIALS indicates a 2-legged OAuth token requested using client credentials."
    },
    "coreOperand": {
      "type": "object",
      "properties": {
        "primitive": {
          "$ref": "#/definitions/corePrimitive",
          "title": "Can be a constant"
        },
        "var": {
          "type": "string",
          "title": "Or one of this node's input variables"
        },
        "scalar": {
          "$ref": "#/definitions/coreScalar",
          "title": "Replace the primitive field"
        }
      },
      "description": "Defines an operand to a comparison expression."
    },
    "coreOutputReference": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Node id must exist at the graph layer."
        },
        "var": {
          "type": "string",
          "description": "Variable name must refer to an output variable for the node."
        },
        "attr_path": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/corePromiseAttribute"
          }
        }
      },
      "description": "A reference to an output produced by a node. The type can be retrieved -and validated- from\nthe underlying interface of the node."
    },
    "coreParameter": {
      "type": "object",
      "properties": {
        "var": {
          "$ref": "#/definitions/coreVariable",
          "description": "+required Variable. Defines the type of the variable backing this parameter."
        },
        "default": {
          "$ref": "#/definitions/coreLiteral",
          "description": "Defines a default value that has to match the variable type defined."
        },
        "required": {
          "type": "boolean",
          "description": "+optional, is this value required to be filled."
        },
        "artifact_query": {
          "$ref": "#/definitions/coreArtifactQuery",
          "description": "This is an execution time search basically that should result in exactly one Artifact with a Type that\nmatches the type of the variable."
        },
        "artifact_id": {
          "$ref": "#/definitions/coreArtifactID"
        }
      },
      "description": "A parameter is used as input to a launch plan and has\nthe special ability to have a default value or mark itself as required."
    },
    "coreParameterMap": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreParameter"
          },
          "description": "Defines a map of parameter names to parameters."
        }
      },
      "description": "A map of Parameters."
    },
    "corePartitions": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreLabelValue"
          }
        }
      }
    },
    "corePrimitive": {
      "type": "object",
      "properties": {
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "float_value": {
          "type": "number",
          "format": "double"
        },
        "string_value": {
          "type": "string"
        },
        "boolean": {
          "type": "boolean"
        },
        "datetime": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        }
      },
      "title": "Primitive Types"
    },
    "corePromiseAttribute": {
      "type": "object",
      "properties": {
        "string_value": {
          "type": "string"
        },
        "int_value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "coreQualityOfService": {
      "type": "object",
      "properties": {
        "tier": {
          "$ref": "#/definitions/QualityOfServiceTier"
        },
        "spec": {
          "$ref": "#/definitions/coreQualityOfServiceSpec"
        }
      },
      "description": "Indicates the priority of an execution."
    },
    "coreQualityOfServiceSpec": {
      "type": "object",
      "properties": {
        "queueing_budget": {
          "type": "string",
          "description": "Indicates how much queueing delay an execution can tolerate."
        }
      },
      "description": "Represents customized execution run-time attributes."
    },
    "coreResourceType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "TASK",
        "WORKFLOW",
        "LAUNCH_PLAN",
        "DATASET"
      ],
      "default": "UNSPECIFIED",
      "description": "Indicates a resource type within Flyte.\n\n - DATASET: A dataset represents an entity modeled in Flyte DataCatalog. A Dataset is also a versioned entity and can be a compilation of multiple individual objects.\nEventually all Catalog objects should be modeled similar to Flyte Objects. The Dataset entities makes it possible for the UI  and CLI to act on the objects \nin a similar manner to other Flyte objects"
    },
    "coreResources": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ResourcesResourceEntry"
          },
          "description": "The desired set of resources requested. ResourceNames must be unique within the list."
        },
        "limits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ResourcesResourceEntry"
          },
          "description": "Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique\nwithin the list."
        }
      },
      "description": "A customizable interface to convey resources requested for a container. This can be interpreted differently for different\ncontainer engines."
    },
    "coreRetryStrategy": {
      "type": "object",
      "properties": {
        "retries": {
          "type": "integer",
          "format": "int64",
          "description": "Number of retries. Retries will be consumed when the job fails with a recoverable error.\nThe number of retries must be less than or equals to 10."
        }
      },
      "description": "Retry strategy associated with an executable unit."
    },
    "coreRuntimeBinding": {
      "type": "object"
    },
    "coreRuntimeMetadata": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RuntimeMetadataRuntimeType",
          "description": "Type of runtime."
        },
        "version": {
          "type": "string",
          "description": "Version of the runtime. All versions should be backward compatible. However, certain cases call for version\nchecks to ensure tighter validation or setting expectations."
        },
        "flavor": {
          "type": "string",
          "description": "+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.)."
        }
      },
      "description": "Runtime information. This is loosely defined to allow for extensibility."
    },
    "coreScalar": {
      "type": "object",
      "properties": {
        "primitive": {
          "$ref": "#/definitions/corePrimitive"
        },
        "blob": {
          "$ref": "#/definitions/coreBlob"
        },
        "binary": {
          "$ref": "#/definitions/coreBinary"
        },
        "schema": {
          "$ref": "#/definitions/flyteidlcoreSchema"
        },
        "none_type": {
          "$ref": "#/definitions/coreVoid"
        },
        "error": {
          "$ref": "#/definitions/coreError"
        },
        "generic": {
          "type": "object"
        },
        "structured_dataset": {
          "$ref": "#/definitions/coreStructuredDataset"
        },
        "union": {
          "$ref": "#/definitions/coreUnion"
        }
      }
    },
    "coreSchemaType": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SchemaTypeSchemaColumn"
          },
          "description": "A list of ordered columns this schema comprises of."
        }
      },
      "description": "Defines schema columns and types to strongly type-validate schemas interoperability."
    },
    "coreSecret": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of\nthe v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.\nFor AWS Secret Manager, this should be the name of the secret.\n+required"
        },
        "group_version": {
          "type": "string",
          "title": "The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones\nthat do not support it.\n+optional"
        },
        "key": {
          "type": "string",
          "title": "The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation\nof the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should\nmatch one of the keys inside the secret. For AWS Secret Manager, it's ignored.\n+optional"
        },
        "mount_requirement": {
          "$ref": "#/definitions/SecretMountType",
          "title": "mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail\nif the underlying key management system cannot satisfy that requirement. If not provided, the default location\nwill depend on the key management system.\n+optional"
        }
      },
      "description": "Secret encapsulates information about the secret a task needs to proceed. An environment variable\nFLYTE_SECRETS_ENV_PREFIX will be passed to indicate the prefix of the environment variables that will be present if\nsecrets are passed through environment variables.\nFLYTE_SECRETS_DEFAULT_DIR will be passed to indicate the prefix of the path where secrets will be mounted if secrets\nare passed through file mounts."
    },
    "coreSecurityContext": {
      "type": "object",
      "properties": {
        "run_as": {
          "$ref": "#/definitions/coreIdentity",
          "description": "run_as encapsulates the identity a pod should run as. If the task fills in multiple fields here, it'll be up to the\nbackend plugin to choose the appropriate identity for the execution engine the task will run on."
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreSecret"
          },
          "description": "secrets indicate the list of secrets the task needs in order to proceed. Secrets will be mounted/passed to the\npod as it starts. If the plugin responsible for kicking of the task will not run it on a flyte cluster (e.g. AWS\nBatch), it's the responsibility of the plugin to fetch the secret (which means propeller identity will need access\nto the secret) and to pass it to the remote execution engine."
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreOAuth2TokenRequest"
          },
          "description": "tokens indicate the list of token requests the task needs in order to proceed. Tokens will be mounted/passed to the\npod as it starts. If the plugin responsible for kicking of the task will not run it on a flyte cluster (e.g. AWS\nBatch), it's the responsibility of the plugin to fetch the secret (which means propeller identity will need access\nto the secret) and to pass it to the remote execution engine."
        }
      },
      "description": "SecurityContext holds security attributes that apply to tasks."
    },
    "coreSignalCondition": {
      "type": "object",
      "properties": {
        "signal_id": {
          "type": "string",
          "description": "A unique identifier for the requested signal."
        },
        "type": {
          "$ref": "#/definitions/coreLiteralType",
          "description": "A type denoting the required value type for this signal."
        },
        "output_variable_name": {
          "type": "string",
          "description": "The variable name for the signal value in this nodes outputs."
        }
      },
      "description": "SignalCondition represents a dependency on an signal."
    },
    "coreSimpleType": {
      "type": "string",
      "enum": [
        "NONE",
        "INTEGER",
        "FLOAT",
        "STRING",
        "BOOLEAN",
        "DATETIME",
        "DURATION",
        "BINARY",
        "ERROR",
        "STRUCT"
      ],
      "default": "NONE",
      "description": "Define a set of simple types."
    },
    "coreSleepCondition": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "description": "The overall duration for this sleep."
        }
      },
      "description": "SleepCondition represents a dependency on waiting for the specified duration."
    },
    "coreSpan": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "start_time defines the instance this span began."
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "end_time defines the instance this span completed."
        },
        "workflow_id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "description": "workflow_id is the id of the workflow execution this Span represents."
        },
        "node_id": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier",
          "description": "node_id is the id of the node execution this Span represents."
        },
        "task_id": {
          "$ref": "#/definitions/coreTaskExecutionIdentifier",
          "description": "task_id is the id of the task execution this Span represents."
        },
        "operation_id": {
          "type": "string",
          "description": "operation_id is the id of a unique operation that this Span represents."
        },
        "spans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreSpan"
          },
          "description": "spans defines a collection of Spans that breakdown this execution."
        }
      },
      "description": "Span represents a duration trace of Flyte execution. The id field denotes a Flyte execution entity or an operation\nwhich uniquely identifies the Span. The spans attribute allows this Span to be further broken down into more\nprecise definitions."
    },
    "coreSql": {
      "type": "object",
      "properties": {
        "statement": {
          "type": "string",
          "title": "The actual query to run, the query can have templated parameters.\nWe use Flyte's Golang templating format for Query templating.\nFor example,\ninsert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet\nselect *\nfrom my_table\nwhere ds = '{{ .Inputs.ds }}'"
        },
        "dialect": {
          "$ref": "#/definitions/SqlDialect"
        }
      },
      "description": "Sql represents a generic sql workload with a statement and dialect."
    },
    "coreStructuredDataset": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "title": "String location uniquely identifying where the data is.\nShould start with the storage location (e.g. s3://, gs://, bq://, etc.)"
        },
        "metadata": {
          "$ref": "#/definitions/coreStructuredDatasetMetadata"
        }
      }
    },
    "coreStructuredDatasetMetadata": {
      "type": "object",
      "properties": {
        "structured_dataset_type": {
          "$ref": "#/definitions/coreStructuredDatasetType",
          "description": "Bundle the type information along with the literal.\nThis is here because StructuredDatasets can often be more defined at run time than at compile time.\nThat is, at compile time you might only declare a task to return a pandas dataframe or a StructuredDataset,\nwithout any column information, but at run time, you might have that column information.\nflytekit python will copy this type information into the literal, from the type information, if not provided by\nthe various plugins (encoders).\nSince this field is run time generated, it's not used for any type checking."
        }
      }
    },
    "coreStructuredDatasetType": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/StructuredDatasetTypeDatasetColumn"
          },
          "description": "A list of ordered columns this schema comprises of."
        },
        "format": {
          "type": "string",
          "description": "This is the storage format, the format of the bits at rest\nparquet, feather, csv, etc.\nFor two types to be compatible, the format will need to be an exact match."
        },
        "external_schema_type": {
          "type": "string",
          "description": "This is a string representing the type that the bytes in external_schema_bytes are formatted in.\nThis is an optional field that will not be used for type checking."
        },
        "external_schema_bytes": {
          "type": "string",
          "format": "byte",
          "description": "The serialized bytes of a third-party schema library like Arrow.\nThis is an optional field that will not be used for type checking."
        }
      }
    },
    "coreTaskExecutionIdentifier": {
      "type": "object",
      "properties": {
        "task_id": {
          "$ref": "#/definitions/coreIdentifier"
        },
        "node_execution_id": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier"
        },
        "retry_attempt": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Encapsulation of fields that identify a Flyte task execution entity."
    },
    "coreTaskExecutionPhase": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "QUEUED",
        "RUNNING",
        "SUCCEEDED",
        "ABORTED",
        "FAILED",
        "INITIALIZING",
        "WAITING_FOR_RESOURCES"
      ],
      "default": "UNDEFINED",
      "title": "- INITIALIZING: To indicate cases where task is initializing, like: ErrImagePull, ContainerCreating, PodInitializing\n - WAITING_FOR_RESOURCES: To address cases, where underlying resource is not available: Backoff error, Resource quota exceeded"
    },
    "coreTaskLog": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "message_format": {
          "$ref": "#/definitions/TaskLogMessageFormat"
        },
        "ttl": {
          "type": "string"
        },
        "ShowWhilePending": {
          "type": "boolean"
        },
        "HideOnceFinished": {
          "type": "boolean"
        }
      },
      "title": "Log information for the task that is specific to a log sink\nWhen our log story is flushed out, we may have more metadata here like log link expiry"
    },
    "coreTaskMetadata": {
      "type": "object",
      "properties": {
        "discoverable": {
          "type": "boolean",
          "description": "Indicates whether the system should attempt to lookup this task's output to avoid duplication of work."
        },
        "runtime": {
          "$ref": "#/definitions/coreRuntimeMetadata",
          "description": "Runtime information about the task."
        },
        "timeout": {
          "type": "string",
          "description": "The overall timeout of a task including user-triggered retries."
        },
        "retries": {
          "$ref": "#/definitions/coreRetryStrategy",
          "description": "Number of retries per task."
        },
        "discovery_version": {
          "type": "string",
          "description": "Indicates a logical version to apply to this task for the purpose of discovery."
        },
        "deprecated_error_message": {
          "type": "string",
          "description": "If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers\nof the ending of support for a given task."
        },
        "interruptible": {
          "type": "boolean"
        },
        "cache_serializable": {
          "type": "boolean",
          "title": "Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work"
        },
        "generates_deck": {
          "type": "boolean",
          "description": "Indicates whether the task will generate a Deck URI when it finishes executing."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Arbitrary tags that allow users and the platform to store small but arbitrary labels"
        },
        "pod_template_name": {
          "type": "string",
          "description": "pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this\ntask creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied\nidentically as, the default PodTemplate configured in FlytePropeller."
        },
        "cache_ignore_input_vars": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "cache_ignore_input_vars is the input variables that should not be included when calculating hash for cache."
        }
      },
      "title": "Task Metadata"
    },
    "coreTaskNode": {
      "type": "object",
      "properties": {
        "reference_id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "A globally unique identifier for the task."
        },
        "overrides": {
          "$ref": "#/definitions/coreTaskNodeOverrides",
          "description": "Optional overrides applied at task execution time."
        }
      },
      "description": "Refers to the task that the Node is to execute."
    },
    "coreTaskNodeOverrides": {
      "type": "object",
      "properties": {
        "resources": {
          "$ref": "#/definitions/coreResources",
          "description": "A customizable interface to convey resources requested for a task container."
        },
        "extended_resources": {
          "$ref": "#/definitions/coreExtendedResources",
          "description": "Overrides for all non-standard resources, not captured by\nv1.ResourceRequirements, to allocate to a task."
        },
        "container_image": {
          "type": "string",
          "description": "Override for the image used by task pods."
        }
      },
      "description": "Optional task node overrides that will be applied at task execution time."
    },
    "coreTaskTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "Auto generated taskId by the system. Task Id uniquely identifies this task globally."
        },
        "type": {
          "type": "string",
          "description": "A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no\nextensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the\nimplementation registered for the TaskCategory."
        },
        "metadata": {
          "$ref": "#/definitions/coreTaskMetadata",
          "description": "Extra metadata about the task."
        },
        "interface": {
          "$ref": "#/definitions/coreTypedInterface",
          "description": "A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees\ncompile-time validation of the workflow to avoid costly runtime failures."
        },
        "custom": {
          "type": "object",
          "description": "Custom data about the task. This is extensible to allow various plugins in the system."
        },
        "container": {
          "$ref": "#/definitions/coreContainer"
        },
        "k8s_pod": {
          "$ref": "#/definitions/coreK8sPod"
        },
        "sql": {
          "$ref": "#/definitions/coreSql"
        },
        "task_type_version": {
          "type": "integer",
          "format": "int32",
          "description": "This can be used to customize task handling at execution time for the same task type."
        },
        "security_context": {
          "$ref": "#/definitions/coreSecurityContext",
          "description": "security_context encapsulates security attributes requested to run this task."
        },
        "extended_resources": {
          "$ref": "#/definitions/coreExtendedResources",
          "description": "Encapsulates all non-standard resources, not captured by\nv1.ResourceRequirements, to allocate to a task."
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata about the custom defined for this task. This is extensible to allow various plugins in the system\nto use as required.\nreserve the field numbers 1 through 15 for very frequently occurring message elements"
        }
      },
      "description": "A Task structure that uniquely identifies a task in the system\nTasks are registered as a first step in the system."
    },
    "coreTimePartition": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/coreLabelValue"
        },
        "granularity": {
          "$ref": "#/definitions/coreGranularity"
        }
      }
    },
    "coreTimeTransform": {
      "type": "object",
      "properties": {
        "transform": {
          "type": "string"
        },
        "op": {
          "$ref": "#/definitions/flyteidlcoreOperator"
        }
      }
    },
    "coreTypeAnnotation": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "description": "A arbitrary JSON payload to describe a type."
        }
      },
      "description": "TypeAnnotation encapsulates registration time information about a type. This can be used for various control-plane operations. TypeAnnotation will not be available at runtime when a task runs."
    },
    "coreTypeStructure": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "title": "Must exactly match for types to be castable"
        },
        "dataclass_type": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreLiteralType"
          },
          "title": "dataclass_type only exists for dataclasses.\nThis is used to resolve the type of the fields of dataclass\nThe key is the field name, and the value is the literal type of the field\ne.g. For dataclass Foo, with fields a, and a is a string\nFoo.a will be resolved as a literal type of string from dataclass_type"
        }
      },
      "description": "Hints to improve type matching\ne.g. allows distinguishing output from custom type transformers\neven if the underlying IDL serialization matches."
    },
    "coreTypedInterface": {
      "type": "object",
      "properties": {
        "inputs": {
          "$ref": "#/definitions/coreVariableMap"
        },
        "outputs": {
          "$ref": "#/definitions/coreVariableMap"
        }
      },
      "description": "Defines strongly typed inputs and outputs."
    },
    "coreUnion": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/coreLiteral"
        },
        "type": {
          "$ref": "#/definitions/coreLiteralType"
        }
      },
      "description": "The runtime representation of a tagged union value. See `UnionType` for more details."
    },
    "coreUnionInfo": {
      "type": "object",
      "properties": {
        "targetType": {
          "$ref": "#/definitions/coreLiteralType"
        }
      }
    },
    "coreUnionType": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreLiteralType"
          },
          "description": "Predefined set of variants in union."
        }
      },
      "description": "Defines a tagged union type, also known as a variant (and formally as the sum type).\n\nA sum type S is defined by a sequence of types (A, B, C, ...), each tagged by a string tag\nA value of type S is constructed from a value of any of the variant types. The specific choice of type is recorded by\nstoring the varaint's tag with the literal value and can be examined in runtime.\n\nType S is typically written as\nS := Apple A | Banana B | Cantaloupe C | ...\n\nNotably, a nullable (optional) type is a sum type between some type X and the singleton type representing a null-value:\nOptional X := X | Null\n\nSee also: https://en.wikipedia.org/wiki/Tagged_union"
    },
    "coreVariable": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/coreLiteralType",
          "description": "Variable literal type."
        },
        "description": {
          "type": "string",
          "title": "+optional string describing input variable"
        },
        "artifact_partial_id": {
          "$ref": "#/definitions/coreArtifactID",
          "description": "+optional This object allows the user to specify how Artifacts are created.\nname, tag, partitions can be specified. The other fields (version and project/domain) are ignored."
        },
        "artifact_tag": {
          "$ref": "#/definitions/coreArtifactTag"
        }
      },
      "description": "Defines a strongly typed variable."
    },
    "coreVariableMap": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/coreVariable"
          },
          "description": "Defines a map of variable names to variables."
        }
      },
      "title": "A map of Variables"
    },
    "coreVoid": {
      "type": "object",
      "description": "Used to denote a nil/null/None assignment to a scalar value. The underlying LiteralType for Void is intentionally\nundefined since it can be assigned to a scalar of any LiteralType."
    },
    "coreWorkflowExecutionIdentifier": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "Name of the project the resource belongs to."
        },
        "domain": {
          "type": "string",
          "description": "Name of the domain the resource belongs to.\nA domain can be considered as a subset within a specific project."
        },
        "name": {
          "type": "string",
          "description": "User or system provided value for the resource."
        },
        "org": {
          "type": "string",
          "description": "Optional, org key applied to the resource."
        }
      },
      "title": "Encapsulation of fields that uniquely identifies a Flyte workflow execution"
    },
    "coreWorkflowExecutionPhase": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "QUEUED",
        "RUNNING",
        "SUCCEEDING",
        "SUCCEEDED",
        "FAILING",
        "FAILED",
        "ABORTED",
        "TIMED_OUT",
        "ABORTING"
      ],
      "default": "UNDEFINED"
    },
    "coreWorkflowMetadata": {
      "type": "object",
      "properties": {
        "quality_of_service": {
          "$ref": "#/definitions/coreQualityOfService",
          "description": "Indicates the runtime priority of workflow executions."
        },
        "on_failure": {
          "$ref": "#/definitions/WorkflowMetadataOnFailurePolicy",
          "description": "Defines how the system should behave when a failure is detected in the workflow execution."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Arbitrary tags that allow users and the platform to store small but arbitrary labels"
        }
      },
      "description": "This is workflow layer metadata. These settings are only applicable to the workflow as a whole, and do not\npercolate down to child entities (like tasks) launched by the workflow."
    },
    "coreWorkflowMetadataDefaults": {
      "type": "object",
      "properties": {
        "interruptible": {
          "type": "boolean",
          "description": "Whether child nodes of the workflow are interruptible."
        }
      },
      "description": "The difference between these settings and the WorkflowMetadata ones is that these are meant to be passed down to\na workflow's underlying entities (like tasks). For instance, 'interruptible' has no meaning at the workflow layer, it\nis only relevant when a task executes. The settings here are the defaults that are passed to all nodes\nunless explicitly overridden at the node layer.\nIf you are adding a setting that applies to both the Workflow itself, and everything underneath it, it should be\nadded to both this object and the WorkflowMetadata object above."
    },
    "coreWorkflowNode": {
      "type": "object",
      "properties": {
        "launchplan_ref": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "A globally unique identifier for the launch plan."
        },
        "sub_workflow_ref": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "Reference to a subworkflow, that should be defined with the compiler context"
        }
      },
      "description": "Refers to a the workflow the node is to execute."
    },
    "coreWorkflowTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "A globally unique identifier for the workflow."
        },
        "metadata": {
          "$ref": "#/definitions/coreWorkflowMetadata",
          "description": "Extra metadata about the workflow."
        },
        "interface": {
          "$ref": "#/definitions/coreTypedInterface",
          "description": "Defines a strongly typed interface for the Workflow. This can include some optional parameters."
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreNode"
          },
          "description": "A list of nodes. In addition, 'globals' is a special reserved node id that can be used to consume workflow inputs."
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreBinding"
          },
          "description": "A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or\nspecify literals. All workflow outputs specified in the interface field must be bound in order for the workflow\nto be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to\nbind final outputs.\nMost of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can\njust have an output of some constant (`Output(5)`), but usually, the workflow will be pulling\noutputs from the output of a task."
        },
        "failure_node": {
          "$ref": "#/definitions/coreNode",
          "description": "+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.\nThe interface of this node must match the Workflow interface with an additional input named 'error' of type\npb.lyft.flyte.core.Error."
        },
        "metadata_defaults": {
          "$ref": "#/definitions/coreWorkflowMetadataDefaults",
          "title": "workflow defaults"
        }
      },
      "description": "Flyte Workflow Structure that encapsulates task, branch and subworkflow nodes to form a statically analyzable,\ndirected acyclic graph."
    },
    "eventEventReason": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "An explanation for this event"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "title": "The time this reason occurred"
        }
      }
    },
    "eventExternalResourceInfo": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Identifier for an external resource created by this task execution, for example Qubole query ID or presto query ids."
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "description": "A unique index for the external resource with respect to all external resources for this task. Although the\nidentifier may change between task reporting events or retries, this will remain the same to enable aggregating\ninformation from multiple reports."
        },
        "retry_attempt": {
          "type": "integer",
          "format": "int64",
          "title": "Retry attempt number for this external resource, ie., 2 for the second attempt"
        },
        "phase": {
          "$ref": "#/definitions/coreTaskExecutionPhase",
          "title": "Phase associated with the external resource"
        },
        "cache_status": {
          "$ref": "#/definitions/coreCatalogCacheStatus",
          "description": "Captures the status of caching for this external resource execution."
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreTaskLog"
          },
          "title": "log information for the external resource execution"
        }
      },
      "description": "This message contains metadata about external resources produced or used by a specific task execution."
    },
    "eventNodeExecutionEvent": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier",
          "title": "Unique identifier for this node execution"
        },
        "producer_id": {
          "type": "string",
          "title": "the id of the originator (Propeller) of the event"
        },
        "phase": {
          "$ref": "#/definitions/coreNodeExecutionPhase"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents when the original event occurred, it is generated\nby the executor of the node."
        },
        "input_uri": {
          "type": "string"
        },
        "input_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw input data consumed by this node execution."
        },
        "output_uri": {
          "type": "string",
          "description": "URL to the output of the execution, it encodes all the information\nincluding Cloud source provider. ie., s3://..."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "title": "Error information for the execution"
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this node execution."
        },
        "workflow_node_metadata": {
          "$ref": "#/definitions/flyteidleventWorkflowNodeMetadata"
        },
        "task_node_metadata": {
          "$ref": "#/definitions/flyteidleventTaskNodeMetadata"
        },
        "parent_task_metadata": {
          "$ref": "#/definitions/eventParentTaskExecutionMetadata",
          "description": "[To be deprecated] Specifies which task (if any) launched this node."
        },
        "parent_node_metadata": {
          "$ref": "#/definitions/eventParentNodeExecutionMetadata",
          "description": "Specifies the parent node of the current node execution. Node executions at level zero will not have a parent node."
        },
        "retry_group": {
          "type": "string",
          "title": "Retry group to indicate grouping of nodes by retries"
        },
        "spec_node_id": {
          "type": "string",
          "title": "Identifier of the node in the original workflow/graph\nThis maps to value of WorkflowTemplate.nodes[X].id"
        },
        "node_name": {
          "type": "string",
          "title": "Friendly readable name for the node"
        },
        "event_version": {
          "type": "integer",
          "format": "int32"
        },
        "is_parent": {
          "type": "boolean",
          "description": "Whether this node launched a subworkflow."
        },
        "is_dynamic": {
          "type": "boolean",
          "description": "Whether this node yielded a dynamic workflow."
        },
        "deck_uri": {
          "type": "string",
          "title": "String location uniquely identifying where the deck HTML file is\nNativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)"
        },
        "reported_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents the instant when the event was reported by the executing framework. For example,\nwhen first processing a node the `occurred_at` timestamp should be the instant propeller makes progress, so when\nliteral inputs are initially copied. The event however will not be sent until after the copy completes.\nExtracting both of these timestamps facilitates a more accurate portrayal of the evaluation time-series."
        },
        "is_array": {
          "type": "boolean",
          "description": "Indicates if this node is an ArrayNode."
        },
        "target_entity": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "So that Admin doesn't have to rebuild the node execution graph to find the target entity, propeller will fill this\nin optionally - currently this is only filled in for subworkflows. This is the ID of the subworkflow corresponding\nto this node execution. It is difficult to find because Admin only sees one node at a time. A subworkflow could be\nnested multiple layers deep, and you'd need to access the correct workflow template to know the target subworkflow."
        },
        "is_in_dynamic_chain": {
          "type": "boolean",
          "description": "Tasks and subworkflows (but not launch plans) that are run within a dynamic task are effectively independent of\nthe tasks that are registered in Admin's db. Confusingly, they are often identical, but sometimes they are not\neven registered at all. Similar to the target_entity field, at the time Admin receives this event, it has no idea\nif the relevant execution entity is was registered, or dynamic. This field indicates that the target_entity ID,\nas well as task IDs in any corresponding Task Executions, should not be used to looked up the task in Admin's db."
        }
      }
    },
    "eventParentNodeExecutionMetadata": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "title": "Unique identifier of the parent node id within the execution\nThis is value of core.NodeExecutionIdentifier.node_id of the parent node"
        }
      }
    },
    "eventParentTaskExecutionMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreTaskExecutionIdentifier"
        }
      }
    },
    "eventResourcePoolInfo": {
      "type": "object",
      "properties": {
        "allocation_token": {
          "type": "string",
          "description": "Unique resource ID used to identify this execution when allocating a token."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace under which this task execution requested an allocation token."
        }
      },
      "description": "This message holds task execution metadata specific to resource allocation used to manage concurrent\nexecutions for a project namespace."
    },
    "eventTaskExecutionEvent": {
      "type": "object",
      "properties": {
        "task_id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "ID of the task. In combination with the retryAttempt this will indicate\nthe task execution uniquely for a given parent node execution."
        },
        "parent_node_execution_id": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier",
          "title": "A task execution is always kicked off by a node execution, the event consumer\nwill use the parent_id to relate the task to it's parent node execution"
        },
        "retry_attempt": {
          "type": "integer",
          "format": "int64",
          "title": "retry attempt number for this task, ie., 2 for the second attempt"
        },
        "phase": {
          "$ref": "#/definitions/coreTaskExecutionPhase",
          "title": "Phase associated with the event"
        },
        "producer_id": {
          "type": "string",
          "title": "id of the process that sent this event, mainly for trace debugging"
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreTaskLog"
          },
          "title": "log information for the task execution"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents when the original event occurred, it is generated\nby the executor of the task."
        },
        "input_uri": {
          "type": "string",
          "description": "URI of the input file, it encodes all the information\nincluding Cloud source provider. ie., s3://..."
        },
        "input_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw input data consumed by this task execution."
        },
        "output_uri": {
          "type": "string",
          "description": "URI to the output of the execution, it will be in a format that encodes all the information\nincluding Cloud source provider. ie., s3://..."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "title": "Error information for the execution"
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this task execution."
        },
        "custom_info": {
          "type": "object",
          "description": "Custom data that the task plugin sends back. This is extensible to allow various plugins in the system."
        },
        "phase_version": {
          "type": "integer",
          "format": "int64",
          "description": "Some phases, like RUNNING, can send multiple events with changed metadata (new logs, additional custom_info, etc)\nthat should be recorded regardless of the lack of phase change.\nThe version field should be incremented when metadata changes across the duration of an individual phase."
        },
        "reason": {
          "type": "string",
          "description": "An optional explanation for the phase transition.\nDeprecated: Use reasons instead."
        },
        "reasons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/eventEventReason"
          },
          "description": "An optional list of explanations for the phase transition."
        },
        "task_type": {
          "type": "string",
          "description": "A predefined yet extensible Task type identifier. If the task definition is already registered in flyte admin\nthis type will be identical, but not all task executions necessarily use pre-registered definitions and this\ntype is useful to render the task in the UI, filter task executions, etc."
        },
        "metadata": {
          "$ref": "#/definitions/flyteidleventTaskExecutionMetadata",
          "description": "Metadata around how a task was executed."
        },
        "event_version": {
          "type": "integer",
          "format": "int32",
          "description": "The event version is used to indicate versioned changes in how data is reported using this\nproto message. For example, event_verison \u003e 0 means that maps tasks report logs using the\nTaskExecutionMetadata ExternalResourceInfo fields for each subtask rather than the TaskLog\nin this message."
        },
        "reported_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents the instant when the event was reported by the executing framework. For example, a k8s\npod task may be marked completed at (ie. `occurred_at`) the instant the container running user code completes,\nbut this event will not be reported until the pod is marked as completed. Extracting both of these timestamps\nfacilitates a more accurate portrayal of the evaluation time-series."
        }
      },
      "description": "Plugin specific execution event information. For tasks like Python, Hive, Spark, DynamicJob."
    },
    "eventWorkflowExecutionEvent": {
      "type": "object",
      "properties": {
        "execution_id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "title": "Workflow execution id"
        },
        "producer_id": {
          "type": "string",
          "title": "the id of the originator (Propeller) of the event"
        },
        "phase": {
          "$ref": "#/definitions/coreWorkflowExecutionPhase"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time",
          "description": "This timestamp represents when the original event occurred, it is generated\nby the executor of the workflow."
        },
        "output_uri": {
          "type": "string",
          "description": "URL to the output of the execution, it encodes all the information\nincluding Cloud source provider. ie., s3://..."
        },
        "error": {
          "$ref": "#/definitions/coreExecutionError",
          "title": "Error information for the execution"
        },
        "output_data": {
          "$ref": "#/definitions/coreLiteralMap",
          "description": "Raw output data produced by this workflow execution."
        }
      }
    },
    "flyteidladminDynamicWorkflowNodeMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "id represents the unique identifier of the workflow."
        },
        "compiled_workflow": {
          "$ref": "#/definitions/coreCompiledWorkflowClosure",
          "description": "Represents the compiled representation of the embedded dynamic workflow."
        },
        "dynamic_job_spec_uri": {
          "type": "string",
          "description": "dynamic_job_spec_uri is the location of the DynamicJobSpec proto message for this DynamicWorkflow. This is\nrequired to correctly recover partially completed executions where the subworkflow has already been compiled."
        }
      },
      "description": "For dynamic workflow nodes we capture information about the dynamic workflow definition that gets generated."
    },
    "flyteidladminNodeExecution": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreNodeExecutionIdentifier",
          "description": "Uniquely identifies an individual node execution."
        },
        "input_uri": {
          "type": "string",
          "description": "Path to remote data store where input blob is stored."
        },
        "closure": {
          "$ref": "#/definitions/adminNodeExecutionClosure",
          "description": "Computed results associated with this node execution."
        },
        "metadata": {
          "$ref": "#/definitions/adminNodeExecutionMetaData",
          "title": "Metadata for Node Execution"
        }
      },
      "description": "Encapsulates all details for a single node execution entity.\nA node represents a component in the overall workflow graph. A node launch a task, multiple tasks, an entire nested\nsub-workflow, or even a separate child-workflow execution.\nThe same task can be called repeatedly in a single workflow but each node is unique."
    },
    "flyteidladminTaskCreateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "title": "id represents the unique identifier of the task.\n+required"
        },
        "spec": {
          "$ref": "#/definitions/adminTaskSpec",
          "title": "Represents the specification for task.\n+required"
        }
      },
      "title": "Represents a request structure to create a revision of a task.\nSee :ref:`ref_flyteidl.admin.Task` for more details"
    },
    "flyteidladminTaskCreateResponse": {
      "type": "object",
      "description": "Represents a response structure if task creation succeeds.\n\nPurposefully empty, may be populated in the future."
    },
    "flyteidladminTaskExecution": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreTaskExecutionIdentifier",
          "description": "Unique identifier for the task execution."
        },
        "input_uri": {
          "type": "string",
          "description": "Path to remote data store where input blob is stored."
        },
        "closure": {
          "$ref": "#/definitions/adminTaskExecutionClosure",
          "description": "Task execution details and results."
        },
        "is_parent": {
          "type": "boolean",
          "description": "Whether this task spawned nodes."
        }
      },
      "description": "Encapsulates all details for a single task execution entity.\nA task execution represents an instantiated task, including all inputs and additional\nmetadata as well as computed results included state, outputs, and duration-based attributes."
    },
    "flyteidladminTaskNodeMetadata": {
      "type": "object",
      "properties": {
        "cache_status": {
          "$ref": "#/definitions/coreCatalogCacheStatus",
          "description": "Captures the status of caching for this execution."
        },
        "catalog_key": {
          "$ref": "#/definitions/coreCatalogMetadata",
          "title": "This structure carries the catalog artifact information"
        },
        "checkpoint_uri": {
          "type": "string",
          "title": "The latest checkpoint location"
        }
      },
      "title": "Metadata for the case in which the node is a TaskNode"
    },
    "flyteidladminWorkflowClosure": {
      "type": "object",
      "properties": {
        "compiled_workflow": {
          "$ref": "#/definitions/coreCompiledWorkflowClosure",
          "description": "Represents the compiled representation of the workflow from the specification provided."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the workflow was created."
        }
      },
      "description": "A container holding the compiled workflow produced from the WorkflowSpec and additional metadata."
    },
    "flyteidladminWorkflowNodeMetadata": {
      "type": "object",
      "properties": {
        "executionId": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier",
          "description": "The identifier for a workflow execution launched by a node."
        }
      },
      "title": "Metadata for a WorkflowNode"
    },
    "flyteidlcoreEnumType": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Predefined set of enum values."
        }
      },
      "description": "Enables declaring enum types, with predefined string values\nFor len(values) \u003e 0, the first value in the ordered list is regarded as the default value. If you wish\nTo provide no defaults, make the first value as undefined."
    },
    "flyteidlcoreKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "required."
        },
        "value": {
          "type": "string",
          "description": "+optional."
        }
      },
      "description": "A generic key value pair."
    },
    "flyteidlcoreOperator": {
      "type": "string",
      "enum": [
        "MINUS",
        "PLUS"
      ],
      "default": "MINUS"
    },
    "flyteidlcoreSchema": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/coreSchemaType"
        }
      },
      "description": "A strongly typed schema that defines the interface of data retrieved from the underlying storage medium."
    },
    "flyteidleventDynamicWorkflowNodeMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/coreIdentifier",
          "description": "id represents the unique identifier of the workflow."
        },
        "compiled_workflow": {
          "$ref": "#/definitions/coreCompiledWorkflowClosure",
          "description": "Represents the compiled representation of the embedded dynamic workflow."
        },
        "dynamic_job_spec_uri": {
          "type": "string",
          "description": "dynamic_job_spec_uri is the location of the DynamicJobSpec proto message for this DynamicWorkflow. This is\nrequired to correctly recover partially completed executions where the workflow has already been compiled."
        }
      },
      "description": "For dynamic workflow nodes we send information about the dynamic workflow definition that gets generated."
    },
    "flyteidleventTaskExecutionMetadata": {
      "type": "object",
      "properties": {
        "generated_name": {
          "type": "string",
          "description": "Unique, generated name for this task execution used by the backend."
        },
        "external_resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/eventExternalResourceInfo"
          },
          "description": "Additional data on external resources on other back-ends or platforms (e.g. Hive, Qubole, etc) launched by this task execution."
        },
        "resource_pool_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/eventResourcePoolInfo"
          },
          "description": "Includes additional data on concurrent resource management used during execution..\nThis is a repeated field because a plugin can request multiple resource allocations during execution."
        },
        "plugin_identifier": {
          "type": "string",
          "description": "The identifier of the plugin used to execute this task."
        },
        "instance_class": {
          "$ref": "#/definitions/TaskExecutionMetadataInstanceClass"
        }
      },
      "description": "Holds metadata around how a task was executed.\nAs a task transitions across event phases during execution some attributes, such its generated name, generated external resources,\nand more may grow in size but not change necessarily based on the phase transition that sparked the event update.\nMetadata is a container for these attributes across the task execution lifecycle."
    },
    "flyteidleventTaskNodeMetadata": {
      "type": "object",
      "properties": {
        "cache_status": {
          "$ref": "#/definitions/coreCatalogCacheStatus",
          "description": "Captures the status of caching for this execution."
        },
        "catalog_key": {
          "$ref": "#/definitions/coreCatalogMetadata",
          "title": "This structure carries the catalog artifact information"
        },
        "reservation_status": {
          "$ref": "#/definitions/coreCatalogReservationStatus",
          "description": "Captures the status of cache reservations for this execution."
        },
        "checkpoint_uri": {
          "type": "string",
          "title": "The latest checkpoint location"
        },
        "dynamic_workflow": {
          "$ref": "#/definitions/flyteidleventDynamicWorkflowNodeMetadata",
          "description": "In the case this task launched a dynamic workflow we capture its structure here."
        }
      }
    },
    "flyteidleventWorkflowNodeMetadata": {
      "type": "object",
      "properties": {
        "execution_id": {
          "$ref": "#/definitions/coreWorkflowExecutionIdentifier"
        }
      },
      "title": "For Workflow Nodes we need to send information about the workflow that's launched"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    }
  }
}

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flyteidl.admin import common_pb2 as flyteidl_dot_admin_dot_common__pb2
from flyteidl.admin import description_entity_pb2 as flyteidl_dot_admin_dot_description__entity__pb2
from flyteidl.admin import event_pb2 as flyteidl_dot_admin_dot_event__pb2
from flyteidl.admin import execution_pb2 as flyteidl_dot_admin_dot_execution__pb2
from flyteidl.admin import launch_plan_pb2 as flyteidl_dot_admin_dot_launch__plan__pb2
from flyteidl.admin import matchable_resource_pb2 as flyteidl_dot_admin_dot_matchable__resource__pb2
from flyteidl.admin import node_execution_pb2 as flyteidl_dot_admin_dot_node__execution__pb2
from flyteidl.admin import project_attributes_pb2 as flyteidl_dot_admin_dot_project__attributes__pb2
from flyteidl.admin import project_domain_attributes_pb2 as flyteidl_dot_admin_dot_project__domain__attributes__pb2
from flyteidl.admin import project_pb2 as flyteidl_dot_admin_dot_project__pb2
from flyteidl.admin import task_execution_pb2 as flyteidl_dot_admin_dot_task__execution__pb2
from flyteidl.admin import task_pb2 as flyteidl_dot_admin_dot_task__pb2
from flyteidl.admin import version_pb2 as flyteidl_dot_admin_dot_version__pb2
from flyteidl.admin import workflow_attributes_pb2 as flyteidl_dot_admin_dot_workflow__attributes__pb2
from flyteidl.admin import workflow_pb2 as flyteidl_dot_admin_dot_workflow__pb2


class AdminServiceStub(object):
    """The following defines an RPC service that is also served over HTTP via grpc-gateway.
    Standard response codes for both are defined here: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/runtime/errors.go
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTask = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateTask',
                request_serializer=flyteidl_dot_admin_dot_task__pb2.TaskCreateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__pb2.TaskCreateResponse.FromString,
                )
        self.GetTask = channel.unary_unary(
                '/flyteidl.service.AdminService/GetTask',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__pb2.Task.FromString,
                )
        self.ListTaskIds = channel.unary_unary(
                '/flyteidl.service.AdminService/ListTaskIds',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
                )
        self.ListTasks = channel.unary_unary(
                '/flyteidl.service.AdminService/ListTasks',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__pb2.TaskList.FromString,
                )
        self.CreateWorkflow = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateWorkflow',
                request_serializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateResponse.FromString,
                )
        self.GetWorkflow = channel.unary_unary(
                '/flyteidl.service.AdminService/GetWorkflow',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__pb2.Workflow.FromString,
                )
        self.ListWorkflowIds = channel.unary_unary(
                '/flyteidl.service.AdminService/ListWorkflowIds',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
                )
        self.ListWorkflows = channel.unary_unary(
                '/flyteidl.service.AdminService/ListWorkflows',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowList.FromString,
                )
        self.CreateLaunchPlan = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateLaunchPlan',
                request_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateResponse.FromString,
                )
        self.GetLaunchPlan = channel.unary_unary(
                '/flyteidl.service.AdminService/GetLaunchPlan',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.FromString,
                )
        self.GetActiveLaunchPlan = channel.unary_unary(
                '/flyteidl.service.AdminService/GetActiveLaunchPlan',
                request_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.FromString,
                )
        self.ListActiveLaunchPlans = channel.unary_unary(
                '/flyteidl.service.AdminService/ListActiveLaunchPlans',
                request_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.FromString,
                )
        self.ListLaunchPlanIds = channel.unary_unary(
                '/flyteidl.service.AdminService/ListLaunchPlanIds',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
                )
        self.ListLaunchPlans = channel.unary_unary(
                '/flyteidl.service.AdminService/ListLaunchPlans',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.FromString,
                )
        self.UpdateLaunchPlan = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateLaunchPlan',
                request_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateResponse.FromString,
                )
        self.CreateExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
                )
        self.RelaunchExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/RelaunchExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionRelaunchRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
                )
        self.RecoverExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/RecoverExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionRecoverRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
                )
        self.GetExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/GetExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.Execution.FromString,
                )
        self.UpdateExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateResponse.FromString,
                )
        self.GetExecutionData = channel.unary_unary(
                '/flyteidl.service.AdminService/GetExecutionData',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataResponse.FromString,
                )
        self.ListExecutions = channel.unary_unary(
                '/flyteidl.service.AdminService/ListExecutions',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionList.FromString,
                )
        self.TerminateExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/TerminateExecution',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateResponse.FromString,
                )
        self.GetNodeExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/GetNodeExecution',
                request_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecution.FromString,
                )
        self.GetDynamicNodeWorkflow = channel.unary_unary(
                '/flyteidl.service.AdminService/GetDynamicNodeWorkflow',
                request_serializer=flyteidl_dot_admin_dot_node__execution__pb2.GetDynamicNodeWorkflowRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.DynamicNodeWorkflowResponse.FromString,
                )
        self.ListNodeExecutions = channel.unary_unary(
                '/flyteidl.service.AdminService/ListNodeExecutions',
                request_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.FromString,
                )
        self.ListNodeExecutionsForTask = channel.unary_unary(
                '/flyteidl.service.AdminService/ListNodeExecutionsForTask',
                request_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionForTaskListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.FromString,
                )
        self.GetNodeExecutionData = channel.unary_unary(
                '/flyteidl.service.AdminService/GetNodeExecutionData',
                request_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataResponse.FromString,
                )
        self.RegisterProject = channel.unary_unary(
                '/flyteidl.service.AdminService/RegisterProject',
                request_serializer=flyteidl_dot_admin_dot_project__pb2.ProjectRegisterRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__pb2.ProjectRegisterResponse.FromString,
                )
        self.UpdateProject = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateProject',
                request_serializer=flyteidl_dot_admin_dot_project__pb2.Project.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__pb2.ProjectUpdateResponse.FromString,
                )
        self.GetProject = channel.unary_unary(
                '/flyteidl.service.AdminService/GetProject',
                request_serializer=flyteidl_dot_admin_dot_project__pb2.ProjectGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__pb2.Project.FromString,
                )
        self.ListProjects = channel.unary_unary(
                '/flyteidl.service.AdminService/ListProjects',
                request_serializer=flyteidl_dot_admin_dot_project__pb2.ProjectListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__pb2.Projects.FromString,
                )
        self.GetDomains = channel.unary_unary(
                '/flyteidl.service.AdminService/GetDomains',
                request_serializer=flyteidl_dot_admin_dot_project__pb2.GetDomainRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__pb2.GetDomainsResponse.FromString,
                )
        self.CreateWorkflowEvent = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateWorkflowEvent',
                request_serializer=flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventResponse.FromString,
                )
        self.CreateNodeEvent = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateNodeEvent',
                request_serializer=flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventResponse.FromString,
                )
        self.CreateTaskEvent = channel.unary_unary(
                '/flyteidl.service.AdminService/CreateTaskEvent',
                request_serializer=flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventResponse.FromString,
                )
        self.GetTaskExecution = channel.unary_unary(
                '/flyteidl.service.AdminService/GetTaskExecution',
                request_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecution.FromString,
                )
        self.ListTaskExecutions = channel.unary_unary(
                '/flyteidl.service.AdminService/ListTaskExecutions',
                request_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionList.FromString,
                )
        self.GetTaskExecutionData = channel.unary_unary(
                '/flyteidl.service.AdminService/GetTaskExecutionData',
                request_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataResponse.FromString,
                )
        self.UpdateProjectDomainAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateProjectDomainAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateResponse.FromString,
                )
        self.GetProjectDomainAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/GetProjectDomainAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetResponse.FromString,
                )
        self.DeleteProjectDomainAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/DeleteProjectDomainAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteResponse.FromString,
                )
        self.UpdateProjectAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateProjectAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateResponse.FromString,
                )
        self.GetProjectAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/GetProjectAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetResponse.FromString,
                )
        self.DeleteProjectAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/DeleteProjectAttributes',
                request_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteResponse.FromString,
                )
        self.UpdateWorkflowAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateWorkflowAttributes',
                request_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateResponse.FromString,
                )
        self.GetWorkflowAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/GetWorkflowAttributes',
                request_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetResponse.FromString,
                )
        self.DeleteWorkflowAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/DeleteWorkflowAttributes',
                request_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteResponse.FromString,
                )
        self.ListMatchableAttributes = channel.unary_unary(
                '/flyteidl.service.AdminService/ListMatchableAttributes',
                request_serializer=flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesResponse.FromString,
                )
        self.ListNamedEntities = channel.unary_unary(
                '/flyteidl.service.AdminService/ListNamedEntities',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityList.FromString,
                )
        self.GetNamedEntity = channel.unary_unary(
                '/flyteidl.service.AdminService/GetNamedEntity',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntity.FromString,
                )
        self.UpdateNamedEntity = channel.unary_unary(
                '/flyteidl.service.AdminService/UpdateNamedEntity',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateResponse.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/flyteidl.service.AdminService/GetVersion',
                request_serializer=flyteidl_dot_admin_dot_version__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_version__pb2.GetVersionResponse.FromString,
                )
        self.GetDescriptionEntity = channel.unary_unary(
                '/flyteidl.service.AdminService/GetDescriptionEntity',
                request_serializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntity.FromString,
                )
        self.ListDescriptionEntities = channel.unary_unary(
                '/flyteidl.service.AdminService/ListDescriptionEntities',
                request_serializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityListRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityList.FromString,
                )
        self.GetExecutionMetrics = channel.unary_unary(
                '/flyteidl.service.AdminService/GetExecutionMetrics',
                request_serializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsRequest.SerializeToString,
                response_deserializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsResponse.FromString,
                )


class AdminServiceServicer(object):
    """The following defines an RPC service that is also served over HTTP via grpc-gateway.
    Standard response codes for both are defined here: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/runtime/errors.go
    """

    def CreateTask(self, request, context):
        """Create and upload a :ref:`ref_flyteidl.admin.Task` definition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTask(self, request, context):
        """Fetch a :ref:`ref_flyteidl.admin.Task` definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTaskIds(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of task objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTasks(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.Task` definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWorkflow(self, request, context):
        """Create and upload a :ref:`ref_flyteidl.admin.Workflow` definition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflow(self, request, context):
        """Fetch a :ref:`ref_flyteidl.admin.Workflow` definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorkflowIds(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of workflow objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorkflows(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.Workflow` definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLaunchPlan(self, request, context):
        """Create and upload a :ref:`ref_flyteidl.admin.LaunchPlan` definition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLaunchPlan(self, request, context):
        """Fetch a :ref:`ref_flyteidl.admin.LaunchPlan` definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveLaunchPlan(self, request, context):
        """Fetch the active version of a :ref:`ref_flyteidl.admin.LaunchPlan`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListActiveLaunchPlans(self, request, context):
        """List active versions of :ref:`ref_flyteidl.admin.LaunchPlan`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLaunchPlanIds(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.NamedEntityIdentifier` of launch plan objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLaunchPlans(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.LaunchPlan` definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLaunchPlan(self, request, context):
        """Updates the status of a registered :ref:`ref_flyteidl.admin.LaunchPlan`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateExecution(self, request, context):
        """Triggers the creation of a :ref:`ref_flyteidl.admin.Execution`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelaunchExecution(self, request, context):
        """Triggers the creation of an identical :ref:`ref_flyteidl.admin.Execution`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecoverExecution(self, request, context):
        """Recreates a previously-run workflow execution that will only start executing from the last known failure point.
        In Recover mode, users cannot change any input parameters or update the version of the execution.
        This is extremely useful to recover from system errors and byzantine faults like - Loss of K8s cluster, bugs in platform or instability, machine failures,
        downstream system failures (downstream services), or simply to recover executions that failed because of retry exhaustion and should complete if tried again.
        See :ref:`ref_flyteidl.admin.ExecutionRecoverRequest` for more details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExecution(self, request, context):
        """Fetches a :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExecution(self, request, context):
        """Update execution belonging to project domain :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExecutionData(self, request, context):
        """Fetches input and output data for a :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExecutions(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TerminateExecution(self, request, context):
        """Terminates an in-progress :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeExecution(self, request, context):
        """Fetches a :ref:`ref_flyteidl.admin.NodeExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDynamicNodeWorkflow(self, request, context):
        """Fetches a :ref:`ref_flyteidl.admin.DynamicNodeWorkflowResponse`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNodeExecutions(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.NodeExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNodeExecutionsForTask(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.NodeExecution` launched by the reference :ref:`ref_flyteidl.admin.TaskExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeExecutionData(self, request, context):
        """Fetches input and output data for a :ref:`ref_flyteidl.admin.NodeExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterProject(self, request, context):
        """Registers a :ref:`ref_flyteidl.admin.Project` with the Flyte deployment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProject(self, request, context):
        """Updates an existing :ref:`ref_flyteidl.admin.Project`
        flyteidl.admin.Project should be passed but the domains property should be empty;
        it will be ignored in the handler as domains cannot be updated via this API.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Fetches a :ref:`ref_flyteidl.admin.Project`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjects(self, request, context):
        """Fetches a list of :ref:`ref_flyteidl.admin.Project`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDomains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWorkflowEvent(self, request, context):
        """Indicates a :ref:`ref_flyteidl.event.WorkflowExecutionEvent` has occurred.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNodeEvent(self, request, context):
        """Indicates a :ref:`ref_flyteidl.event.NodeExecutionEvent` has occurred.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTaskEvent(self, request, context):
        """Indicates a :ref:`ref_flyteidl.event.TaskExecutionEvent` has occurred.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskExecution(self, request, context):
        """Fetches a :ref:`ref_flyteidl.admin.TaskExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTaskExecutions(self, request, context):
        """Fetches a list of :ref:`ref_flyteidl.admin.TaskExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskExecutionData(self, request, context):
        """Fetches input and output data for a :ref:`ref_flyteidl.admin.TaskExecution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectDomainAttributes(self, request, context):
        """Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectDomainAttributes(self, request, context):
        """Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProjectDomainAttributes(self, request, context):
        """Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectAttributes(self, request, context):
        """Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` at the project level
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectAttributes(self, request, context):
        """Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProjectAttributes(self, request, context):
        """Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project and domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorkflowAttributes(self, request, context):
        """Creates or updates custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowAttributes(self, request, context):
        """Fetches custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWorkflowAttributes(self, request, context):
        """Deletes custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a project, domain and workflow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMatchableAttributes(self, request, context):
        """Lists custom :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration` for a specific resource type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamedEntities(self, request, context):
        """Returns a list of :ref:`ref_flyteidl.admin.NamedEntity` objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNamedEntity(self, request, context):
        """Returns a :ref:`ref_flyteidl.admin.NamedEntity` object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNamedEntity(self, request, context):
        """Updates a :ref:`ref_flyteidl.admin.NamedEntity` object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDescriptionEntity(self, request, context):
        """Fetch a :ref:`ref_flyteidl.admin.DescriptionEntity` object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDescriptionEntities(self, request, context):
        """Fetch a list of :ref:`ref_flyteidl.admin.DescriptionEntity` definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExecutionMetrics(self, request, context):
        """Fetches runtime metrics for a :ref:`ref_flyteidl.admin.Execution`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=flyteidl_dot_admin_dot_task__pb2.TaskCreateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__pb2.TaskCreateResponse.SerializeToString,
            ),
            'GetTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTask,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__pb2.Task.SerializeToString,
            ),
            'ListTaskIds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTaskIds,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.SerializeToString,
            ),
            'ListTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTasks,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__pb2.TaskList.SerializeToString,
            ),
            'CreateWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkflow,
                    request_deserializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateResponse.SerializeToString,
            ),
            'GetWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflow,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__pb2.Workflow.SerializeToString,
            ),
            'ListWorkflowIds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkflowIds,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.SerializeToString,
            ),
            'ListWorkflows': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkflows,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__pb2.WorkflowList.SerializeToString,
            ),
            'CreateLaunchPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLaunchPlan,
                    request_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateResponse.SerializeToString,
            ),
            'GetLaunchPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLaunchPlan,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.SerializeToString,
            ),
            'GetActiveLaunchPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveLaunchPlan,
                    request_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.SerializeToString,
            ),
            'ListActiveLaunchPlans': grpc.unary_unary_rpc_method_handler(
                    servicer.ListActiveLaunchPlans,
                    request_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.SerializeToString,
            ),
            'ListLaunchPlanIds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLaunchPlanIds,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.SerializeToString,
            ),
            'ListLaunchPlans': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLaunchPlans,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.SerializeToString,
            ),
            'UpdateLaunchPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLaunchPlan,
                    request_deserializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateResponse.SerializeToString,
            ),
            'CreateExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.SerializeToString,
            ),
            'RelaunchExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.RelaunchExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionRelaunchRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.SerializeToString,
            ),
            'RecoverExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.RecoverExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionRecoverRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.SerializeToString,
            ),
            'GetExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.Execution.SerializeToString,
            ),
            'UpdateExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateResponse.SerializeToString,
            ),
            'GetExecutionData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExecutionData,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataResponse.SerializeToString,
            ),
            'ListExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExecutions,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionList.SerializeToString,
            ),
            'TerminateExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.TerminateExecution,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateResponse.SerializeToString,
            ),
            'GetNodeExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeExecution,
                    request_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecution.SerializeToString,
            ),
            'GetDynamicNodeWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDynamicNodeWorkflow,
                    request_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.GetDynamicNodeWorkflowRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_node__execution__pb2.DynamicNodeWorkflowResponse.SerializeToString,
            ),
            'ListNodeExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNodeExecutions,
                    request_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.SerializeToString,
            ),
            'ListNodeExecutionsForTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNodeExecutionsForTask,
                    request_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionForTaskListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.SerializeToString,
            ),
            'GetNodeExecutionData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeExecutionData,
                    request_deserializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataResponse.SerializeToString,
            ),
            'RegisterProject': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterProject,
                    request_deserializer=flyteidl_dot_admin_dot_project__pb2.ProjectRegisterRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__pb2.ProjectRegisterResponse.SerializeToString,
            ),
            'UpdateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProject,
                    request_deserializer=flyteidl_dot_admin_dot_project__pb2.Project.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__pb2.ProjectUpdateResponse.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=flyteidl_dot_admin_dot_project__pb2.ProjectGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__pb2.Project.SerializeToString,
            ),
            'ListProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjects,
                    request_deserializer=flyteidl_dot_admin_dot_project__pb2.ProjectListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__pb2.Projects.SerializeToString,
            ),
            'GetDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDomains,
                    request_deserializer=flyteidl_dot_admin_dot_project__pb2.GetDomainRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__pb2.GetDomainsResponse.SerializeToString,
            ),
            'CreateWorkflowEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkflowEvent,
                    request_deserializer=flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventResponse.SerializeToString,
            ),
            'CreateNodeEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNodeEvent,
                    request_deserializer=flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventResponse.SerializeToString,
            ),
            'CreateTaskEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTaskEvent,
                    request_deserializer=flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventResponse.SerializeToString,
            ),
            'GetTaskExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskExecution,
                    request_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecution.SerializeToString,
            ),
            'ListTaskExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTaskExecutions,
                    request_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionList.SerializeToString,
            ),
            'GetTaskExecutionData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskExecutionData,
                    request_deserializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataResponse.SerializeToString,
            ),
            'UpdateProjectDomainAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectDomainAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateResponse.SerializeToString,
            ),
            'GetProjectDomainAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectDomainAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetResponse.SerializeToString,
            ),
            'DeleteProjectDomainAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProjectDomainAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteResponse.SerializeToString,
            ),
            'UpdateProjectAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateResponse.SerializeToString,
            ),
            'GetProjectAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetResponse.SerializeToString,
            ),
            'DeleteProjectAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProjectAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteResponse.SerializeToString,
            ),
            'UpdateWorkflowAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorkflowAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateResponse.SerializeToString,
            ),
            'GetWorkflowAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetResponse.SerializeToString,
            ),
            'DeleteWorkflowAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWorkflowAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteResponse.SerializeToString,
            ),
            'ListMatchableAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMatchableAttributes,
                    request_deserializer=flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesResponse.SerializeToString,
            ),
            'ListNamedEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamedEntities,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityList.SerializeToString,
            ),
            'GetNamedEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNamedEntity,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntity.SerializeToString,
            ),
            'UpdateNamedEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNamedEntity,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateResponse.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=flyteidl_dot_admin_dot_version__pb2.GetVersionRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_version__pb2.GetVersionResponse.SerializeToString,
            ),
            'GetDescriptionEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDescriptionEntity,
                    request_deserializer=flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntity.SerializeToString,
            ),
            'ListDescriptionEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDescriptionEntities,
                    request_deserializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityListRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityList.SerializeToString,
            ),
            'GetExecutionMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExecutionMetrics,
                    request_deserializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsRequest.FromString,
                    response_serializer=flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flyteidl.service.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """The following defines an RPC service that is also served over HTTP via grpc-gateway.
    Standard response codes for both are defined here: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/runtime/errors.go
    """

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateTask',
            flyteidl_dot_admin_dot_task__pb2.TaskCreateRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__pb2.TaskCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetTask',
            flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__pb2.Task.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTaskIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListTaskIds',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListTasks',
            flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__pb2.TaskList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateWorkflow',
            flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__pb2.WorkflowCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetWorkflow',
            flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__pb2.Workflow.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWorkflowIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListWorkflowIds',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWorkflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListWorkflows',
            flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__pb2.WorkflowList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLaunchPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateLaunchPlan',
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLaunchPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetLaunchPlan',
            flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveLaunchPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetActiveLaunchPlan',
            flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListActiveLaunchPlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListActiveLaunchPlans',
            flyteidl_dot_admin_dot_launch__plan__pb2.ActiveLaunchPlanListRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLaunchPlanIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListLaunchPlanIds',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierListRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntityIdentifierList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLaunchPlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListLaunchPlans',
            flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLaunchPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateLaunchPlan',
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_launch__plan__pb2.LaunchPlanUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateExecution',
            flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelaunchExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/RelaunchExecution',
            flyteidl_dot_admin_dot_execution__pb2.ExecutionRelaunchRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecoverExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/RecoverExecution',
            flyteidl_dot_admin_dot_execution__pb2.ExecutionRecoverRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetExecution',
            flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.Execution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateExecution',
            flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExecutionData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetExecutionData',
            flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListExecutions',
            flyteidl_dot_admin_dot_common__pb2.ResourceListRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TerminateExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/TerminateExecution',
            flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.ExecutionTerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetNodeExecution',
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDynamicNodeWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetDynamicNodeWorkflow',
            flyteidl_dot_admin_dot_node__execution__pb2.GetDynamicNodeWorkflowRequest.SerializeToString,
            flyteidl_dot_admin_dot_node__execution__pb2.DynamicNodeWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNodeExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListNodeExecutions',
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionListRequest.SerializeToString,
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNodeExecutionsForTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListNodeExecutionsForTask',
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionForTaskListRequest.SerializeToString,
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeExecutionData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetNodeExecutionData',
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataRequest.SerializeToString,
            flyteidl_dot_admin_dot_node__execution__pb2.NodeExecutionGetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/RegisterProject',
            flyteidl_dot_admin_dot_project__pb2.ProjectRegisterRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__pb2.ProjectRegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateProject',
            flyteidl_dot_admin_dot_project__pb2.Project.SerializeToString,
            flyteidl_dot_admin_dot_project__pb2.ProjectUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetProject',
            flyteidl_dot_admin_dot_project__pb2.ProjectGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListProjects',
            flyteidl_dot_admin_dot_project__pb2.ProjectListRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__pb2.Projects.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetDomains',
            flyteidl_dot_admin_dot_project__pb2.GetDomainRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__pb2.GetDomainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWorkflowEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateWorkflowEvent',
            flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventRequest.SerializeToString,
            flyteidl_dot_admin_dot_event__pb2.WorkflowExecutionEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNodeEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateNodeEvent',
            flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventRequest.SerializeToString,
            flyteidl_dot_admin_dot_event__pb2.NodeExecutionEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTaskEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/CreateTaskEvent',
            flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventRequest.SerializeToString,
            flyteidl_dot_admin_dot_event__pb2.TaskExecutionEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetTaskExecution',
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTaskExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListTaskExecutions',
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionListRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskExecutionData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetTaskExecutionData',
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataRequest.SerializeToString,
            flyteidl_dot_admin_dot_task__execution__pb2.TaskExecutionGetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProjectDomainAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateProjectDomainAttributes',
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectDomainAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetProjectDomainAttributes',
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProjectDomainAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/DeleteProjectDomainAttributes',
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__domain__attributes__pb2.ProjectDomainAttributesDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProjectAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateProjectAttributes',
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetProjectAttributes',
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProjectAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/DeleteProjectAttributes',
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteRequest.SerializeToString,
            flyteidl_dot_admin_dot_project__attributes__pb2.ProjectAttributesDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWorkflowAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateWorkflowAttributes',
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkflowAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetWorkflowAttributes',
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWorkflowAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/DeleteWorkflowAttributes',
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteRequest.SerializeToString,
            flyteidl_dot_admin_dot_workflow__attributes__pb2.WorkflowAttributesDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMatchableAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListMatchableAttributes',
            flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesRequest.SerializeToString,
            flyteidl_dot_admin_dot_matchable__resource__pb2.ListMatchableAttributesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamedEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListNamedEntities',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityListRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntityList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNamedEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetNamedEntity',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNamedEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/UpdateNamedEntity',
            flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateRequest.SerializeToString,
            flyteidl_dot_admin_dot_common__pb2.NamedEntityUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetVersion',
            flyteidl_dot_admin_dot_version__pb2.GetVersionRequest.SerializeToString,
            flyteidl_dot_admin_dot_version__pb2.GetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDescriptionEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetDescriptionEntity',
            flyteidl_dot_admin_dot_common__pb2.ObjectGetRequest.SerializeToString,
            flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDescriptionEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/ListDescriptionEntities',
            flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityListRequest.SerializeToString,
            flyteidl_dot_admin_dot_description__entity__pb2.DescriptionEntityList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExecutionMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flyteidl.service.AdminService/GetExecutionMetrics',
            flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsRequest.SerializeToString,
            flyteidl_dot_admin_dot_execution__pb2.WorkflowExecutionGetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/flyteorg/flyte/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// MutableGateNodeStatus is an autogenerated mock type for the MutableGateNodeStatus type
type MutableGateNodeStatus struct {
	mock.Mock
}

type MutableGateNodeStatus_Expecter struct {
	mock *mock.Mock
}

func (_m *MutableGateNodeStatus) EXPECT() *MutableGateNodeStatus_Expecter {
	return &MutableGateNodeStatus_Expecter{mock: &_m.Mock}
}

// GetGateNodePhase provides a mock function with no fields
func (_m *MutableGateNodeStatus) GetGateNodePhase() v1alpha1.GateNodePhase {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetGateNodePhase")
	}

	var r0 v1alpha1.GateNodePhase
	if rf, ok := ret.Get(0).(func() v1alpha1.GateNodePhase); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v1alpha1.GateNodePhase)
	}

	return r0
}

// MutableGateNodeStatus_GetGateNodePhase_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGateNodePhase'
type MutableGateNodeStatus_GetGateNodePhase_Call struct {
	*mock.Call
}

// GetGateNodePhase is a helper method to define mock.On call
func (_e *MutableGateNodeStatus_Expecter) GetGateNodePhase() *MutableGateNodeStatus_GetGateNodePhase_Call {
	return &MutableGateNodeStatus_GetGateNodePhase_Call{Call: _e.mock.On("GetGateNodePhase")}
}

func (_c *MutableGateNodeStatus_GetGateNodePhase_Call) Run(run func()) *MutableGateNodeStatus_GetGateNodePhase_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MutableGateNodeStatus_GetGateNodePhase_Call) Return(_a0 v1alpha1.GateNodePhase) *MutableGateNodeStatus_GetGateNodePhase_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MutableGateNodeStatus_GetGateNodePhase_Call) RunAndReturn(run func() v1alpha1.GateNodePhase) *MutableGateNodeStatus_GetGateNodePhase_Call {
	_c.Call.Return(run)
	return _c
}

// IsDirty provides a mock function with no fields
func (_m *MutableGateNodeStatus) IsDirty() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsDirty")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MutableGateNodeStatus_IsDirty_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsDirty'
type MutableGateNodeStatus_IsDirty_Call struct {
	*mock.Call
}

// IsDirty is a helper method to define mock.On call
func (_e *MutableGateNodeStatus_Expecter) IsDirty() *MutableGateNodeStatus_IsDirty_Call {
	return &MutableGateNodeStatus_IsDirty_Call{Call: _e.mock.On("IsDirty")}
}

func (_c *MutableGateNodeStatus_IsDirty_Call) Run(run func()) *MutableGateNodeStatus_IsDirty_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MutableGateNodeStatus_IsDirty_Call) Return(_a0 bool) *MutableGateNodeStatus_IsDirty_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MutableGateNodeStatus_IsDirty_Call) RunAndReturn(run func() bool) *MutableGateNodeStatus_IsDirty_Call {
	_c.Call.Return(run)
	return _c
}

// SetGateNodePhase provides a mock function with given fields: phase
func (_m *MutableGateNodeStatus) SetGateNodePhase(phase v1alpha1.GateNodePhase) {
	_m.Called(phase)
}

// MutableGateNodeStatus_SetGateNodePhase_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGateNodePhase'
type MutableGateNodeStatus_SetGateNodePhase_Call struct {
	*mock.Call
}

// SetGateNodePhase is a helper method to define mock.On call
//   - phase v1alpha1.GateNodePhase
func (_e *MutableGateNodeStatus_Expecter) SetGateNodePhase(phase interface{}) *MutableGateNodeStatus_SetGateNodePhase_Call {
	return &MutableGateNodeStatus_SetGateNodePhase_Call{Call: _e.mock.On("SetGateNodePhase", phase)}
}

func (_c *MutableGateNodeStatus_SetGateNodePhase_Call) Run(run func(phase v1alpha1.GateNodePhase)) *MutableGateNodeStatus_SetGateNodePhase_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(v1alpha1.GateNodePhase))
	})
	return _c
}

func (_c *MutableGateNodeStatus_SetGateNodePhase_Call) Return() *MutableGateNodeStatus_SetGateNodePhase_Call {
	_c.Call.Return()
	return _c
}

func (_c *MutableGateNodeStatus_SetGateNodePhase_Call) RunAndReturn(run func(v1alpha1.GateNodePhase)) *MutableGateNodeStatus_SetGateNodePhase_Call {
	_c.Run(run)
	return _c
}

// NewMutableGateNodeStatus creates a new instance of MutableGateNodeStatus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMutableGateNodeStatus(t interface {
	mock.TestingT
	Cleanup(func())
}) *MutableGateNodeStatus {
	mock := &MutableGateNodeStatus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/flyteorg/flyte/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// NodeStatusVisitor is an autogenerated mock type for the NodeStatusVisitor type
type NodeStatusVisitor struct {
	mock.Mock
}

type NodeStatusVisitor_Expecter struct {
	mock *mock.Mock
}

func (_m *NodeStatusVisitor) EXPECT() *NodeStatusVisitor_Expecter {
	return &NodeStatusVisitor_Expecter{mock: &_m.Mock}
}

// VisitNodeStatuses provides a mock function with given fields: visitor
func (_m *NodeStatusVisitor) VisitNodeStatuses(visitor func(string, v1alpha1.ExecutableNodeStatus)) {
	_m.Called(visitor)
}

// NodeStatusVisitor_VisitNodeStatuses_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VisitNodeStatuses'
type NodeStatusVisitor_VisitNodeStatuses_Call struct {
	*mock.Call
}

// VisitNodeStatuses is a helper method to define mock.On call
//   - visitor func(string , v1alpha1.ExecutableNodeStatus)
func (_e *NodeStatusVisitor_Expecter) VisitNodeStatuses(visitor interface{}) *NodeStatusVisitor_VisitNodeStatuses_Call {
	return &NodeStatusVisitor_VisitNodeStatuses_Call{Call: _e.mock.On("VisitNodeStatuses", visitor)}
}

func (_c *NodeStatusVisitor_VisitNodeStatuses_Call) Run(run func(visitor func(string, v1alpha1.ExecutableNodeStatus))) *NodeStatusVisitor_VisitNodeStatuses_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func(string, v1alpha1.ExecutableNodeStatus)))
	})
	return _c
}

func (_c *NodeStatusVisitor_VisitNodeStatuses_Call) Return() *NodeStatusVisitor_VisitNodeStatuses_Call {
	_c.Call.Return()
	return _c
}

func (_c *NodeStatusVisitor_VisitNodeStatuses_Call) RunAndReturn(run func(func(string, v1alpha1.ExecutableNodeStatus))) *NodeStatusVisitor_VisitNodeStatuses_Call {
	_c.Run(run)
	return _c
}

// NewNodeStatusVisitor creates a new instance of NodeStatusVisitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNodeStatusVisitor(t interface {
	mock.TestingT
	Cleanup(func())
}) *NodeStatusVisitor {
	mock := &NodeStatusVisitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

apiVersion: flyte.lyft.com/v1alpha1
executionConfig:
  EnvironmentVariables: null
  Interruptible: null
  MaxParallelism: 0
  OverwriteCache: false
  RecoveryExecution: {}
  TaskPluginImpls: null
  TaskResources:
    Limits:
      CPU: "0"
      EphemeralStorage: "0"
      GPU: "0"
      Memory: "0"
      Storage: "0"
    Requests:
      CPU: "0"
      EphemeralStorage: "0"
      GPU: "0"
      Memory: "0"
      Storage: "0"
executionId: {}
inputData:
  inputs:
    literals:
      my_input:
        scalar:
          primitive:
            floatValue: 0
      seed:
        scalar:
          primitive:
            integer: "0"
inputs:
  literals:
    my_input:
      scalar:
        primitive:
          floatValue: 0
    seed:
      scalar:
        primitive:
          integer: "0"
kind: flyteworkflow
metadata:
  creationTimestamp: null
  labels:
    domain: domain
    execution-id: name
    project: hello
    shard-key: "6"
    workflow-name: core-control-flow-conditions-consume-outputs
  name: name
  namespace: namespace
node-defaults: {}
rawOutputDataConfig: {}
securityContext: {}
spec:
  connections:
    n0:
    - n1
    n1:
    - n2
    n2:
    - end-node
    start-node:
    - n0
  edges:
    downstream:
      n0:
      - n1
      n1:
      - n2
      n2:
      - end-node
      start-node:
      - n0
    upstream:
      end-node:
      - n2
      n0:
      - start-node
      n1:
      - n0
      n1-n0:
      - start-node
      n1-n1:
      - start-node
      n2:
      - n1
  id: ::core.control_flow.conditions.consume_outputs
  nodes:
    end-node:
      id: end-node
      inputBindings:
      - binding:
          promise:
            nodeId: n2
            var: o0
        var: o0
      kind: end
      resources: {}
    n0:
      id: n0
      inputBindings:
      - binding:
          promise:
            nodeId: start-node
            var: seed
        var: seed
      kind: task
      name: coin_toss
      resources: {}
      task: 'resource_type:TASK name:"core.control_flow.conditions.coin_toss" '
    n1:
      branch:
        else: n1-n1
        if:
          condition:
            comparison:
              leftValue:
                var: n0.o0
              rightValue:
                primitive:
                  boolean: true
          then: n1-n0
      id: n1
      inputBindings:
      - binding:
          promise:
            nodeId: n0
            var: o0
        var: n0.o0
      kind: branch
      name: double_or_square
      resources: {}
    n1-n0:
      id: n1-n0
      inputBindings:
      - binding:
          promise:
            nodeId: start-node
            var: my_input
        var: "n"
      kind: task
      name: square
      resources: {}
      task: 'resource_type:TASK name:"core.control_flow.conditions.square" '
    n1-n1:
      id: n1-n1
      inputBindings:
      - binding:
          promise:
            nodeId: start-node
            var: my_input
        var: a
      - binding:
          promise:
            nodeId: start-node
            var: my_input
        var: b
      kind: task
      name: calc_sum
      resources: {}
      task: 'resource_type:TASK name:"core.control_flow.conditions.calc_sum" '
    n2:
      id: n2
      inputBindings:
      - binding:
          promise:
            nodeId: n1
            var: o0
        var: "n"
      kind: task
      name: double
      resources: {}
      task: 'resource_type:TASK name:"core.control_flow.conditions.double" '
    start-node:
      id: start-node
      kind: start
      resources: {}
  outputBindings:
  - binding:
      promise:
        nodeId: n2
        var: o0
    var: o0
  outputs:
    variables:
      o0:
        type:
          simple: FLOAT
status:
  phase: 0
tasks:
  'resource_type:TASK name:"core.control_flow.conditions.calc_sum" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.control_flow.conditions
      - task-name
      - calc_sum
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
      resources: {}
    id:
      name: core.control_flow.conditions.calc_sum
      resourceType: TASK
    interface:
      inputs:
        variables:
          a:
            type:
              simple: FLOAT
          b:
            type:
              simple: FLOAT
      outputs:
        variables:
          o0:
            type:
              simple: FLOAT
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task
  'resource_type:TASK name:"core.control_flow.conditions.coin_toss" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.control_flow.conditions
      - task-name
      - coin_toss
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
      resources: {}
    id:
      name: core.control_flow.conditions.coin_toss
      resourceType: TASK
    interface:
      inputs:
        variables:
          seed:
            type:
              simple: INTEGER
      outputs:
        variables:
          o0:
            type:
              simple: BOOLEAN
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task
  'resource_type:TASK name:"core.control_flow.conditions.double" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.control_flow.conditions
      - task-name
      - double
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
      resources: {}
    id:
      name: core.control_flow.conditions.double
      resourceType: TASK
    interface:
      inputs:
        variables:
          "n":
            type:
              simple: FLOAT
      outputs:
        variables:
          o0:
            type:
              simple: FLOAT
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task
  'resource_type:TASK name:"core.control_flow.conditions.square" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.control_flow.conditions
      - task-name
      - square
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
      resources: {}
    id:
      name: core.control_flow.conditions.square
      resourceType: TASK
    interface:
      inputs:
        variables:
          "n":
            type:
              simple: FLOAT
      outputs:
        variables:
          o0:
            type:
              simple: FLOAT
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task

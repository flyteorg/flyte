apiVersion: flyte.lyft.com/v1alpha1
executionConfig:
  EnvironmentVariables: null
  Interruptible: null
  MaxParallelism: 0
  OverwriteCache: false
  RecoveryExecution: {}
  TaskPluginImpls: null
  TaskResources:
    Limits:
      CPU: "0"
      EphemeralStorage: "0"
      GPU: "0"
      Memory: "0"
      Storage: "0"
    Requests:
      CPU: "0"
      EphemeralStorage: "0"
      GPU: "0"
      Memory: "0"
      Storage: "0"
executionId: {}
inputData:
  inputs: {}
inputs: {}
kind: flyteworkflow
metadata:
  creationTimestamp: null
  labels:
    domain: domain
    execution-id: name
    project: hello
    shard-key: "6"
    workflow-name: core-containerization-multi-images-my-workflow
  name: name
  namespace: namespace
node-defaults: {}
rawOutputDataConfig: {}
securityContext: {}
spec:
  connections:
    n0:
    - n1
    n1:
    - end-node
    start-node:
    - n0
  edges:
    downstream:
      n0:
      - n1
      n1:
      - end-node
      start-node:
      - n0
    upstream:
      end-node:
      - n1
      n0:
      - start-node
      n1:
      - n0
  id: ::core.containerization.multi_images.my_workflow
  nodes:
    end-node:
      id: end-node
      inputBindings:
      - binding:
          promise:
            nodeId: n1
            var: o0
        var: o0
      kind: end
      resources: {}
    n0:
      id: n0
      kind: task
      name: svm_trainer
      resources: {}
      task: 'resource_type:TASK name:"core.containerization.multi_images.svm_trainer" '
    n1:
      id: n1
      inputBindings:
      - binding:
          promise:
            nodeId: n0
            var: test_features
        var: X_test
      - binding:
          promise:
            nodeId: n0
            var: train_features
        var: X_train
      - binding:
          promise:
            nodeId: n0
            var: test_labels
        var: y_test
      - binding:
          promise:
            nodeId: n0
            var: train_labels
        var: y_train
      kind: task
      name: svm_predictor
      resources: {}
      task: 'resource_type:TASK name:"core.containerization.multi_images.svm_predictor" '
    start-node:
      id: start-node
      kind: start
      resources: {}
  outputBindings:
  - binding:
      promise:
        nodeId: n1
        var: o0
    var: o0
  outputs:
    variables:
      o0:
        type:
          simple: FLOAT
status:
  phase: 0
tasks:
  'resource_type:TASK name:"core.containerization.multi_images.svm_predictor" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.containerization.multi_images
      - task-name
      - svm_predictor
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:multi-image-predict-98b125fd57d20594026941c2ebe7ef662e5acb7d6423660a65f493ca2d9aa267
      resources: {}
    id:
      name: core.containerization.multi_images.svm_predictor
      resourceType: TASK
    interface:
      inputs:
        variables:
          X_test:
            type:
              structuredDatasetType:
                format: parquet
          X_train:
            type:
              structuredDatasetType:
                format: parquet
          y_test:
            type:
              structuredDatasetType:
                format: parquet
          y_train:
            type:
              structuredDatasetType:
                format: parquet
      outputs:
        variables:
          o0:
            type:
              simple: FLOAT
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task
  'resource_type:TASK name:"core.containerization.multi_images.svm_trainer" ':
    container:
      args:
      - pyflyte-execute
      - --inputs
      - '{{.input}}'
      - --output-prefix
      - '{{.outputPrefix}}'
      - --raw-output-data-prefix
      - '{{.rawOutputDataPrefix}}'
      - --checkpoint-path
      - '{{.checkpointOutputPrefix}}'
      - --prev-checkpoint
      - '{{.prevCheckpointPrefix}}'
      - --resolver
      - flytekit.core.python_auto_container.default_task_resolver
      - --
      - task-module
      - core.containerization.multi_images
      - task-name
      - svm_trainer
      config:
      - key: testKey1
        value: testValue1
      - key: testKey2
        value: testValue2
      - key: testKey3
        value: testValue3
      image: ghcr.io/flyteorg/flytecookbook:core-with-sklearn-baa17ccf39aa667c5950bd713a4366ce7d5fccaf7f85e6be8c07fe4b522f92c3
      resources: {}
    id:
      name: core.containerization.multi_images.svm_trainer
      resourceType: TASK
    interface:
      inputs: {}
      outputs:
        variables:
          test_features:
            type:
              structuredDatasetType:
                format: parquet
          test_labels:
            type:
              structuredDatasetType:
                format: parquet
          train_features:
            type:
              structuredDatasetType:
                format: parquet
          train_labels:
            type:
              structuredDatasetType:
                format: parquet
    metadata:
      retries: {}
      runtime:
        flavor: python
        type: FLYTE_SDK
        version: 0.32.6
    type: python-task

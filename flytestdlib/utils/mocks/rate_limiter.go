// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RateLimiter is an autogenerated mock type for the RateLimiter type
type RateLimiter struct {
	mock.Mock
}

type RateLimiter_Wait struct {
	*mock.Call
}

func (_m RateLimiter_Wait) Return(_a0 error) *RateLimiter_Wait {
	return &RateLimiter_Wait{Call: _m.Call.Return(_a0)}
}

func (_m *RateLimiter) OnWait(ctx context.Context) *RateLimiter_Wait {
	c_call := _m.On("Wait", ctx)
	return &RateLimiter_Wait{Call: c_call}
}

func (_m *RateLimiter) OnWaitMatch(matchers ...interface{}) *RateLimiter_Wait {
	c_call := _m.On("Wait", matchers...)
	return &RateLimiter_Wait{Call: c_call}
}

// Wait provides a mock function with given fields: ctx
func (_m *RateLimiter) Wait(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

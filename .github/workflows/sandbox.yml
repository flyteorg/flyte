name: Build & Push Sandbox Docker Image

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - docker/**
      - charts/**
      - .github/workflows/sandbox.yml
  release:
    types: [published]

jobs:
  trigger-sandbox-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Set flyte version to release
        id: set_version
        run: |
          if [ ${{ github.event_name}} = "release" ]; then
            echo ::set-output name=flyte_version::$(echo ${{ github.event.release.tag_name }})
          else
            echo ::set-output name=flyte_version::latest
          fi
      - name: Prepare DIND Image Names
        id: dind-names
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/flyte-sandbox
          tags: |
            dind
            ${{ steps.set_version.outputs.flyte_version }}
            type=sha,format=long, prefix=dind-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"
      - name: Build and push DIND Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: ${{ github.event_name == 'release' }}
          target: dind
          tags: ${{ steps.dind-names.outputs.tags }}
          build-args: "FLYTE_VERSION=${{ steps.set_version.outputs.flyte_version }}"
          file: docker/sandbox/Dockerfile

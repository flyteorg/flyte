name: Components Checks

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master
env:
  GO_VERSION: "1.21"
  PRIORITIES: "P0"
jobs:
  unpack-envvars:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.step.outputs.go-version }}
    steps:
      - id: step
        run: |
          echo "go-version=${{ env.GO_VERSION }}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - cacheservice
          - datacatalog
          - fasttask/plugin
          - flyteadmin
          # TODO(monorepo): Enable lint flytecopilot
          # - flytecopilot
          - flyteidl
          - flyteplugins
          - flytepropeller
          - flytestdlib
    uses: ./.github/workflows/lint.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}
  unit-tests:
    name: Unit Tests
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - cacheservice
          - datacatalog
          - fasttask/plugin
          - flyteadmin
          - flytecopilot
          - flyteplugins
          - flytepropeller
          - flytestdlib
    uses: ./.github/workflows/unit-tests.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}
  docker-build:
    strategy:
      fail-fast: false
      matrix:
        component:
          - cacheservice
          - datacatalog
          - flyteadmin
          - flytecopilot
          - flytepropeller
    name: Docker Build Images
    uses: ./.github/workflows/component_docker_build.yml
    with:
       component: ${{ matrix.component }}

  # TODO(monorepo): these tests are broken. They never test an actual change.
  # endtoend:
  #   name: End2End Test
  #   needs: [ docker-build ]
  #   uses: ./.github/workflows/end2end.yml
  #   with:
  #     # Reusing the output of the matrix is ok as they are essentially writing the same value (i.e. the directory artifacts are written + run id)
  #     cache_key: ${{ needs.docker-build.outputs.cache_key }}
  #     priorities: "P0"

  integration:
    name: Integration Test
    needs:
      - docker-build
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - flyteadmin
    uses: ./.github/workflows/integration.yml
    with:
      component: ${{ matrix.component }}
      cache_key: ${{ needs.docker-build.outputs.cache_key }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}

  generate:
    name: Check Go Generate
    needs:
      - unpack-envvars
    strategy:
      fail-fast: false
      matrix:
        component:
          - cacheservice
          - datacatalog
          - fasttask/plugin
          - flyteadmin
          - flytecopilot
          - flytepropeller
    uses: ./.github/workflows/go_generate.yml
    with:
      component: ${{ matrix.component }}
      go-version: ${{ needs.unpack-envvars.outputs.go-version }}

  build_docker_images:
    name: Build Images
    uses: ./.github/workflows/build-and-push-all-docker-images.yml
    with:
      push: false

  build_and_test_single_binary:
    name: Build and Test Single Binary Image
    uses: ./.github/workflows/build-and-test-single-binary-image.yml

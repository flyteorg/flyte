// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PluginStateWriter is an autogenerated mock type for the PluginStateWriter type
type PluginStateWriter struct {
	mock.Mock
}

type PluginStateWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *PluginStateWriter) EXPECT() *PluginStateWriter_Expecter {
	return &PluginStateWriter_Expecter{mock: &_m.Mock}
}

// Put provides a mock function with given fields: stateVersion, v
func (_m *PluginStateWriter) Put(stateVersion uint8, v interface{}) error {
	ret := _m.Called(stateVersion, v)

	if len(ret) == 0 {
		panic("no return value specified for Put")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint8, interface{}) error); ok {
		r0 = rf(stateVersion, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PluginStateWriter_Put_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Put'
type PluginStateWriter_Put_Call struct {
	*mock.Call
}

// Put is a helper method to define mock.On call
//   - stateVersion uint8
//   - v interface{}
func (_e *PluginStateWriter_Expecter) Put(stateVersion interface{}, v interface{}) *PluginStateWriter_Put_Call {
	return &PluginStateWriter_Put_Call{Call: _e.mock.On("Put", stateVersion, v)}
}

func (_c *PluginStateWriter_Put_Call) Run(run func(stateVersion uint8, v interface{})) *PluginStateWriter_Put_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint8), args[1].(interface{}))
	})
	return _c
}

func (_c *PluginStateWriter_Put_Call) Return(_a0 error) *PluginStateWriter_Put_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PluginStateWriter_Put_Call) RunAndReturn(run func(uint8, interface{}) error) *PluginStateWriter_Put_Call {
	_c.Call.Return(run)
	return _c
}

// Reset provides a mock function with no fields
func (_m *PluginStateWriter) Reset() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Reset")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PluginStateWriter_Reset_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Reset'
type PluginStateWriter_Reset_Call struct {
	*mock.Call
}

// Reset is a helper method to define mock.On call
func (_e *PluginStateWriter_Expecter) Reset() *PluginStateWriter_Reset_Call {
	return &PluginStateWriter_Reset_Call{Call: _e.mock.On("Reset")}
}

func (_c *PluginStateWriter_Reset_Call) Run(run func()) *PluginStateWriter_Reset_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *PluginStateWriter_Reset_Call) Return(_a0 error) *PluginStateWriter_Reset_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PluginStateWriter_Reset_Call) RunAndReturn(run func() error) *PluginStateWriter_Reset_Call {
	_c.Call.Return(run)
	return _c
}

// NewPluginStateWriter creates a new instance of PluginStateWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPluginStateWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *PluginStateWriter {
	mock := &PluginStateWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
